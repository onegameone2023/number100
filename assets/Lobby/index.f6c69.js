System.register("chunks:///_virtual/AlertDialog.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Dialog.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, CCInteger, Dialog;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
      CCInteger = module.CCInteger;
    }, function (module) {
      Dialog = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2;
      cclegacy._RF.push({}, "5c770xIrylBr4WGQ16vLAZ2", "AlertDialog", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var AlertDialogQueueItem = function AlertDialogQueueItem(msg, onDismissed) {
        if (onDismissed === void 0) {
          onDismissed = function onDismissed() {};
        }
        this.msg = msg;
        this.onDismissed = onDismissed;
      };
      var AlertDialog = exports('default', (_dec = ccclass('AlertDialog'), _dec2 = property(Label), _dec3 = property(CCInteger), _dec(_class = (_class2 = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(AlertDialog, _Dialog);
        function AlertDialog() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Dialog.call.apply(_Dialog, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "lblMessage", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "timeout", _descriptor2, _assertThisInitialized(_this));
          _this.onDismissed = null;
          _this.queue = [];
          return _this;
        }
        var _proto = AlertDialog.prototype;
        _proto.showMsg = function showMsg(msg, onDismissed, addToQueue, forceAddToQueue) {
          if (onDismissed === void 0) {
            onDismissed = null;
          }
          if (addToQueue === void 0) {
            addToQueue = false;
          }
          if (forceAddToQueue === void 0) {
            forceAddToQueue = true;
          }
          var item = new AlertDialogQueueItem(msg, onDismissed || function () {});
          if (addToQueue) {
            this.queue.push(item);
            if (this.queue.length === 1) {
              this.displayCurrentItem(item);
            }
            return;
          }
          if (this.queue.length > 0 && forceAddToQueue) {
            this.queue.push(item);
            return;
          }
          this.displayCurrentItem(item);
        };
        _proto.displayCurrentItem = function displayCurrentItem(item) {
          var _this2 = this;
          this.onDismissed = item.onDismissed;
          this.lblMessage.string = item.msg;
          _Dialog.prototype.show.call(this);
          if (this.timeout > 0) {
            this.scheduleOnce(function () {
              _this2.dismiss();
            }, this.timeout);
          }
        };
        _proto._onDismissed = function _onDismissed() {
          var _this$onDismissed;
          _Dialog.prototype._onDismissed.call(this);
          (_this$onDismissed = this.onDismissed) == null || _this$onDismissed.call(this);
          if (this.queue.length > 0) {
            this.queue.shift(); // Remove current item
            var nextItem = this.queue[0];
            if (nextItem) {
              this.displayCurrentItem(nextItem);
            }
          }
        };
        _proto.dismiss = function dismiss() {
          if (!this.isAnimated) return;
          _Dialog.prototype.dismiss.call(this);
        };
        return AlertDialog;
      }(Dialog), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "lblMessage", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "timeout", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/App.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './AlertDialog.ts', './Language.LanguageManager.ts', './ConfirmDialog.ts', './Config.ts', './MiniGameTX1SignalRClient.ts', './MiniGameTX2SignalRClient.ts', './MiniGameTX3SignalRClient.ts', './MiniGameSignalRClient.ts', './BundleControl.ts', './MiniGame.ts', './AudioManager.ts', './BroadcastListener.ts', './MiniGameTXMD5SignalRClient.ts', './BlackjackSignalRClient.ts', './BaccaratSignalRClient.ts', './DragonTigerSignalRClient.ts', './RouletteSignalRClient.ts', './SicboSignalRClient.ts', './SedieSignalRClient.ts', './KingdomSignalRClient.ts', './OceanSignalRClient.ts', './DQSignalRClient.ts', './ForestSignalRClient.ts', './Utils.ts', './CardGameSignalRClient.ts', './Http.ts', './XocDiaLiveSignalRClient.ts', './Global.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, SpriteFrame, Label, Sprite, Slider, UITransform, Tween, log, sys, native, instantiate, tween, easing, Component, Size, AlertDialog, LanguageManager, ConfirmDialog, Configs, MiniGameTX1SignalRClient, MiniGameTX2SignalRClient, MiniGameTX3SignalRClient, MiniGameSignalRClient, BundleControl, MiniGame, AudioManager, BroadcastReceiver, MiniGameTXMD5SignalRClient, BlackjackSignalRClient, BaccaratSignalRClient, DragonTigerSignalRClient, RouletteSignalRClient, SicboSignalRClient, SedieSignalRClient, KingdomSignalRClient, OceanSignalRClient, DQSignalRClient, ForestSignalRClient, Utils, CardGameSignalRClient, Http, XocDiaLiveSignalRClient, Global;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      SpriteFrame = module.SpriteFrame;
      Label = module.Label;
      Sprite = module.Sprite;
      Slider = module.Slider;
      UITransform = module.UITransform;
      Tween = module.Tween;
      log = module.log;
      sys = module.sys;
      native = module.native;
      instantiate = module.instantiate;
      tween = module.tween;
      easing = module.easing;
      Component = module.Component;
      Size = module.Size;
    }, function (module) {
      AlertDialog = module.default;
    }, function (module) {
      LanguageManager = module.LanguageManager;
    }, function (module) {
      ConfirmDialog = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      MiniGameTX1SignalRClient = module.default;
    }, function (module) {
      MiniGameTX2SignalRClient = module.default;
    }, function (module) {
      MiniGameTX3SignalRClient = module.default;
    }, function (module) {
      MiniGameSignalRClient = module.default;
    }, function (module) {
      BundleControl = module.default;
    }, function (module) {
      MiniGame = module.MiniGame;
    }, function (module) {
      AudioManager = module.default;
    }, function (module) {
      BroadcastReceiver = module.BroadcastReceiver;
    }, function (module) {
      MiniGameTXMD5SignalRClient = module.default;
    }, function (module) {
      BlackjackSignalRClient = module.default;
    }, function (module) {
      BaccaratSignalRClient = module.default;
    }, function (module) {
      DragonTigerSignalRClient = module.default;
    }, function (module) {
      RouletteSignalRClient = module.default;
    }, function (module) {
      SicboSignalRClient = module.default;
    }, function (module) {
      SedieSignalRClient = module.default;
    }, function (module) {
      KingdomSignalRClient = module.default;
    }, function (module) {
      OceanSignalRClient = module.default;
    }, function (module) {
      DQSignalRClient = module.default;
    }, function (module) {
      ForestSignalRClient = module.default;
    }, function (module) {
      Utils = module.Utils;
    }, function (module) {
      CardGameSignalRClient = module.default;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      XocDiaLiveSignalRClient = module.default;
    }, function (module) {
      Global = module.Global;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _class3;
      cclegacy._RF.push({}, "28249+WEXpPF7gjoWi2hRVw", "App", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var App = exports('default', (_dec = ccclass("App"), _dec2 = property(Node), _dec3 = property([SpriteFrame]), _dec4 = property([SpriteFrame]), _dec5 = property(AlertDialog), _dec6 = property(AlertDialog), _dec7 = property(ConfirmDialog), _dec8 = property(Node), _dec9 = property(Label), _dec10 = property(Node), _dec11 = property(Node), _dec12 = property(Node), _dec13 = property(Node), _dec14 = property(Node), _dec15 = property(Node), _dec16 = property(Node), _dec17 = property(Node), _dec18 = property(Node), _dec19 = property([Node]), _dec20 = property(Label), _dec21 = property(Sprite), _dec22 = property(Slider), _dec23 = property(Node), _dec(_class = (_class2 = (_class3 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(App, _Component);
        function App() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "canvas", _descriptor, _assertThisInitialized(_this));
          _this.inactivityTimer = 0;
          _this.DataPass = [];
          _initializerDefineProperty(_this, "designResolution", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "sprFrameAvatars", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "listEmotionSpr", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "alertDialog", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "notificationDialog", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "confirmDialog", _descriptor7, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "loadingNode", _descriptor8, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "loadingLabel", _descriptor9, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "bigGameNode", _descriptor10, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "skillsGameNode", _descriptor11, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "slotGameNode", _descriptor12, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "miniGameNode", _descriptor13, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "popupNode", _descriptor14, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "nodeRoom", _descriptor15, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tipzoJackpotEventX2X6Node", _descriptor16, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tipzoMiniLiveNode", _descriptor17, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "alertToast", _descriptor18, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "allNodeGame", _descriptor19, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblStatus", _descriptor20, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteProgress", _descriptor21, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "nodeSlider", _descriptor22, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "loadingProcess", _descriptor23, _assertThisInitialized(_this));
          _this.isShowNotifyJackpot = true;
          _this.timeOutLoading = null;
          _this.taiXiuJackpotMiniGame = null;
          _this.taiXiuMD5MiniGame = null;
          _this.hiLoMiniGame = null;
          _this.miniPoker = null;
          _this.phucSinhMiniGame = null;
          _this.bauCuaMiniGame = null;
          _this.luckyWildMiniGame = null;
          _this.gameNodeMap = new Map();
          _this.slotGame = {};
          _this.autoRunningGameIds = void 0;
          return _this;
        }
        var _proto = App.prototype;
        _proto.getAutoRunningGameIds = function getAutoRunningGameIds() {
          return this.autoRunningGameIds;
        };
        _proto.addAutoRunningGameIds = function addAutoRunningGameIds(idGame) {
          if (!this.autoRunningGameIds.includes(idGame)) {
            this.autoRunningGameIds.push(idGame);
          }
        };
        _proto.removeAutoRunningGameIds = function removeAutoRunningGameIds(idGame) {
          this.autoRunningGameIds = this.autoRunningGameIds.filter(function (id) {
            return id !== idGame;
          });
        };
        _proto.clearAutoRunningGameIds = function clearAutoRunningGameIds() {
          this.autoRunningGameIds = [];
        };
        _proto.onLoad = function onLoad() {
          var _this2 = this;
          if (App.instance != null) {
            this.node.destroy();
            return;
          }
          App.instance = this;
          var gameIds = [Configs.GameAvailableIds.SamLocSolo, Configs.GameAvailableIds.BaCay, Configs.GameAvailableIds.Catte, Configs.GameAvailableIds.TLMN, Configs.GameAvailableIds.MauBinh, Configs.GameAvailableIds.Poker, Configs.GameAvailableIds.TLMNSolo, Configs.GameAvailableIds.SamLoc, Configs.GameAvailableIds.Sedie, Configs.GameAvailableIds.NewSicbo, Configs.GameAvailableIds.NewRoulette, Configs.GameAvailableIds.DragonTiger, Configs.GameAvailableIds.Baccarat, Configs.GameAvailableIds.Blackjack, Configs.GameAvailableIds.Kingdom, Configs.GameAvailableIds.Olympia, Configs.GameAvailableIds.Ocean, Configs.GameAvailableIds.Forest, Configs.GameAvailableIds.GodOfFortune, Configs.GameAvailableIds.Dancing, Configs.GameAvailableIds.Disco, Configs.GameAvailableIds.SoDo, Configs.GameAvailableIds.SpaceWar, Configs.GameAvailableIds.Sortie, Configs.GameAvailableIds.Shark, Configs.GameAvailableIds.TieuLongNgu, Configs.GameAvailableIds.BanCa, Configs.GameAvailableIds.PokerTournament, Configs.GameAvailableIds.ABC,
          //chua ro game nay
          Configs.GameAvailableIds.TournamentGoOn, Configs.GameAvailableIds.TournamentOTT, Configs.GameAvailableIds.MultiLuckyDiceLive, Configs.GameAvailableIds.LuckyDiceMd5Live, Configs.GameAvailableIds.SedieLive, Configs.GameAvailableIds.MegaMillions, Configs.GameAvailableIds.PowerBall, Configs.GameAvailableIds.Keno, Configs.GameAvailableIds.OTT,
          //xoso
          Configs.GameAvailableIds.FantasySport, Configs.GameAvailableIds.SportVirtual, Configs.GameAvailableIds.VQMM,
          //MiniGame
          Configs.GameAvailableIds.MiniPoker, Configs.GameAvailableIds.TaiXiu, Configs.GameAvailableIds.LuckyDiceMd5, Configs.GameAvailableIds.HiLo, Configs.GameAvailableIds.BauCua, Configs.GameAvailableIds.PhucSinh, Configs.GameAvailableIds.LuckyWild, Configs.GameAvailableIds.OTT];
          this.allNodeGame.forEach(function (node, index) {
            var gameId = gameIds[index];
            if (gameId != null) {
              if (!_this2.gameNodeMap.has(gameId)) {
                _this2.gameNodeMap.set(gameId, []);
              }
              _this2.gameNodeMap.get(gameId).push(node);
              if (node !== null) {
                node.gameId = gameId;
              }
            }
          });
          this.setActiveGameById(Configs.GameAvailableIds.ABC, false);
        };
        _proto.showLoadingProcess = function showLoadingProcess(isShow) {
          var children = this.node.children;
          if (children.length > 0) {
            var _children$getComponen, _children$getComponen2;
            var topZIndex = (_children$getComponen = (_children$getComponen2 = children[children.length - 1].getComponent(UITransform)) == null ? void 0 : _children$getComponen2.priority) != null ? _children$getComponen : 0;
            var transform = this.loadingProcess.getComponent(UITransform);
            if (transform) {
              transform.priority = topZIndex + 1;
            }
          }
          this.loadingProcess.active = isShow;
        };
        _proto.gotoLobby = function gotoLobby() {
          AudioManager.getInstance().turnOnMusic();
          this.bigGameNode.removeAllChildren();
          this.skillsGameNode.removeAllChildren();
          this.slotGameNode.removeAllChildren();
          this.alertDialog.dismiss();
          this.alertToast.active = false;
          BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);
          Tween.stopAllByTarget(this.alertToast);
          Utils.setStorageValue("last_open_game_id", "");
          Utils.setStorageValue("last_open_casino_room_value", "");
          Utils.setStorageValue("last_open_casino_room_currency", "");
        };
        App.sendEventAF = function sendEventAF(objectAF) {
          // exeample  Utils.sendEventAF({"eventName":"af_registration","af_System_User_ID":"aaa"})

          try {
            var text = JSON.stringify(objectAF);
            log("Send tracking ==== " + text);
            if (sys.os == sys.OS.ANDROID) {
              // jsb.reflection.callStaticMethod("com/cocos/game/AppActivity", "JavaCopy", "(Ljava/lang/String;)V", text);
              native.reflection.callStaticMethod("com/cocos/game/AppActivity", "sendEventAF", "(Ljava/lang/String;)V", text);
            } else if (sys.os == sys.OS.IOS) {
              native.reflection.callStaticMethod("AppDelegate", "sendEventAF:", text);
            } else {}
          } catch (message) {
            //  log("Error Copy:", message);
          }
        };
        _proto.getAvatarSpriteFrame = function getAvatarSpriteFrame(avatar) {
          var avatarInt = parseInt(avatar);
          if (isNaN(avatarInt) || avatarInt < 0 || avatarInt >= this.sprFrameAvatars.length) {
            return this.sprFrameAvatars[0];
          }
          return this.sprFrameAvatars[avatarInt];
        };
        _proto.getTextLang = function getTextLang(key) {
          return LanguageManager.instance.getString(key);
        };
        _proto.showLoading = function showLoading(isShow, timeOut) {
          var _this3 = this;
          if (timeOut === void 0) {
            timeOut = 15;
          }
          if (!this.loadingNode || !this.loadingLabel) return;
          var lastChild = this.node.children[this.node.children.length - 1];
          this.loadingNode.setSiblingIndex((lastChild == null ? void 0 : lastChild.getSiblingIndex()) + 1 || 0);
          this.loadingLabel.string = App.instance.getTextLang("IS_LOADING");
          if (this.timeOutLoading != null) {
            clearTimeout(this.timeOutLoading);
          }
          if (isShow) {
            if (timeOut > 0) {
              this.timeOutLoading = setTimeout(function () {
                _this3.showLoading(false);
              }, timeOut * 1000);
            }
            this.loadingNode.active = true;
          } else {
            this.loadingNode.active = false;
          }
        };
        _proto.ShowAlertDialog = function ShowAlertDialog(mess) {
          this.alertDialog.showMsg(mess);
        };
        _proto.showErrLoading = function showErrLoading(msg) {
          this.showLoading(true, 5);
          this.loadingLabel.string = msg ? msg : "Mất kết nối, đang thử lại...";
        };
        _proto.openGameFromWheel = function openGameFromWheel(gameId) {
          // this.openGame(gameId);
        };
        _proto.openGame = function openGame(gameId) {
          if (Configs.Login.IsLogin === false) {
            Global.LobbyController.actShowLoginForm();
            return;
          }
          if (Configs.App.GAME_BLOCKED_IDS.includes(gameId)) {
            App.instance.notificationDialog.showMsg(App.instance.getTextLang("me10014"));
            return;
          }
          switch (gameId) {
            case Configs.InGameIds.TaiXiuMini:
            case Configs.InGameIds.TaiXiuMD5:
            case Configs.InGameIds.XoSo:
            case Configs.InGameIds.LuckyWild:
            case Configs.InGameIds.MiniPhucSinh:
            case Configs.InGameIds.BauCua:
            case Configs.InGameIds.HiLo:
            case Configs.InGameIds.MiniPoker:
            case Configs.InGameIds.TaiXiuLive:
            case Configs.InGameIds.TaiXiuMD5Live:
            case Configs.InGameIds.XocDiaLive:
            case Configs.InGameIds.XocdiaMd5Live:
            case Configs.InGameIds.CrabFishLive:
            case Configs.InGameIds.DragonTigerLive:
            case Configs.InGameIds.RouletteLive:
            case Configs.InGameIds.BaccaratLive:
            case Configs.InGameIds.SicboLive:
              break;
            default:
              Utils.setStorageValue("last_open_game_id", gameId.toString());
              break;
          }
          switch (gameId) {
            case Configs.InGameIds.TaiXiuMini:
              this.actGameTaiXiuJackpot();
              break;
            case Configs.InGameIds.TaiXiuLive:
              this.actGameTaiXiuJackpot(true);
              break;
            case Configs.InGameIds.TaiXiuMD5:
              this.actGameTaiXiuMD5();
              break;
            case Configs.InGameIds.TaiXiuMD5Live:
              this.actGameTaiXiuMD5(true);
              break;
            case Configs.InGameIds.XoSo:
              this.actXoSoMiniGame();
              break;
            case Configs.InGameIds.XocDiaLive:
              this.actXocDiaLive();
              break;
            case Configs.InGameIds.XocdiaMd5Live:
              this.actXocDiaLive(true);
              break;
            case Configs.InGameIds.BlackJack:
            case Configs.InGameIds.Baccarat:
            case Configs.InGameIds.Sicbo:
              this.actGoToCasino(gameId);
              break;
            case Configs.InGameIds.Catte:
            case Configs.InGameIds.TLMN:
            case Configs.InGameIds.TLMNSolo:
            case Configs.InGameIds.SamLoc:
            case Configs.InGameIds.SamLocSolo:
            case Configs.InGameIds.BaCay:
            case Configs.InGameIds.Poker:
            case Configs.InGameIds.MauBinh:
              this.actCardGame(gameId);
              break;
            case Configs.InGameIds.MiniPoker:
              this.actGameMiniPoker();
              break;
            case Configs.InGameIds.HiLo:
              this.actGameHiLo();
              break;
            case Configs.InGameIds.MiniPhucSinh:
              this.actGamePhucSinh();
              break;
            case Configs.InGameIds.XuatKich:
              this.actGameXuatKich();
              break;
            case Configs.InGameIds.LongVuong:
              this.actGameLongVuong();
              break;
            case Configs.InGameIds.SamTruyen:
              this.actGameSamTruyen();
              break;
            case Configs.InGameIds.PhiDoi:
              this.actGamePhiDoi();
              break;
            case Configs.InGameIds.CaMap:
              this.actGameCaMap();
              break;
            case Configs.InGameIds.CaKiem:
              this.actGameCaKiem();
              break;
            case Configs.InGameIds.VirtualSports:
              this.actOpenVirtualSports();
              break;
            case Configs.InGameIds.Kingdom:
              this.actGameVuongQuoc();
              break;
            case Configs.InGameIds.ThuyCung:
              this.actGameThuyCung();
              break;
            case Configs.InGameIds.RungVang:
              this.actGameRungVang();
              break;
            case Configs.InGameIds.GaiNhay:
              this.actGameGaiNhay();
              break;
            case Configs.InGameIds.ThanTai:
              this.actGameThanTai();
              break;
            case Configs.InGameIds.VuTruong:
              this.actGameVuTruong();
              break;
          }
        };
        _proto.openPrefabGame = function openPrefabGame(bundleName, sceneName, callback) {
          var _this4 = this;
          BundleControl.loadPrefabGame(bundleName, sceneName, function (finish, total) {
            _this4.showLoadingProcess(true);
            var percent = Math.floor(finish / total * 100);
            _this4.lblStatus.string = percent + "%";
            var progress = finish / total;
            _this4.spriteProgress.fillRange = progress;
            _this4.nodeSlider.progress = progress;
          }, function (prefab) {
            _this4.showLoadingProcess(false);
            callback(prefab);
          });
        };
        _proto.actVQMM = function actVQMM() {
          var _this5 = this;
          Http.get(Configs.App.DOMAIN_CONFIG["VQMM_GetTurnUrl"], {
            type: 0
          }, function (status, res) {
            if (status === 200 && res.c == 0) {
              // console.log(res.d);
              _this5.checkTurnVQMM();
              BundleControl.loadPrefabPopup("prefabs/PopupSpinWheel", function (prefab) {
                var popup = instantiate(prefab).getComponent("PopupSpinWheel");
                App.instance.popupNode.addChild(popup.node);
                popup.show();
              });
            }
          });
        };
        _proto.checkTurnVQMM = function checkTurnVQMM() {
          Http.get(Configs.App.DOMAIN_CONFIG["VQMM_GetTurnUrl"], {
            type: 0
          }, function (status, res) {
            if (status === 200 && res.c == 0 && res.d > 0) {
              Global.LobbyController.turnVQMM.active = true;
              Global.LobbyController.turnVQMM.getChildByName("number").getComponent(Label).string = res.d.toString();
              Global.LobbyController.turnVQMMPanelMiniGame.active = true;
              Global.LobbyController.turnVQMMPanelMiniGame.getChildByName("number").getComponent(Label).string = res.d.toString();
            } else {
              Global.LobbyController.turnVQMM.active = false;
              Global.LobbyController.turnVQMMPanelMiniGame.active = false;
            }
          });
        };
        _proto.addGameToNode = function addGameToNode(game) {
          var node = instantiate(game);
          this.bigGameNode.addChild(node);
        };
        _proto.actGameTaiXiuJackpot = function actGameTaiXiuJackpot(isLive) {
          var _this6 = this;
          if (isLive === void 0) {
            isLive = false;
          }
          var showError = function showError() {
            App.instance.showLoading(false);
            App.instance.showErrLoading(App.instance.getTextLang("me11"));
          };
          var connectHub = function connectHub(client) {
            return new Promise(function (resolve, reject) {
              client.connectHub(function (success) {
                success ? resolve() : reject();
              });
            });
          };
          App.instance.showLoading(true);
          connectHub(MiniGameTX1SignalRClient.getInstance()).then(function () {
            return connectHub(MiniGameTX2SignalRClient.getInstance());
          }).then(function () {
            return connectHub(MiniGameTX3SignalRClient.getInstance());
          }).then(function () {
            return connectHub(MiniGameSignalRClient.getInstance());
          }).then(function () {
            App.instance.showLoading(false);
            if (isLive) {
              _this6.openPrefabGame("TaiXiuLive", "TaiXiuLive", function (prefab) {
                _this6.bigGameNode.removeAllChildren();
                var node = instantiate(prefab);
                node.active = true;
                node.removeComponent("TaiXiuLiveMD5.Controller");
                _this6.bigGameNode.addChild(node);
              });
              return;
            }
            if (_this6.taiXiuJackpotMiniGame == null || _this6.taiXiuJackpotMiniGame.node == null) {
              _this6.openPrefabGame("TaiXiuDouble", "TaiXiuDouble", function (prefab) {
                var node = instantiate(prefab);
                node.parent = _this6.miniGameNode;
                node.active = false;
                _this6.taiXiuJackpotMiniGame = node.getComponent(MiniGame);
                _this6.taiXiuJackpotMiniGame.show();
              });
            } else {
              if (_this6.taiXiuJackpotMiniGame.node.parent === null) {
                _this6.taiXiuJackpotMiniGame.node.parent = _this6.miniGameNode;
              }
              _this6.taiXiuJackpotMiniGame.show();
            }
          })["catch"](showError);
        };
        _proto.actGameTaiXiuMD5 = function actGameTaiXiuMD5(isLive) {
          var _this7 = this;
          if (isLive === void 0) {
            isLive = false;
          }
          App.instance.showLoading(true);
          MiniGameTXMD5SignalRClient.getInstance().connectHub(function (success) {
            App.instance.showLoading(false);
            if (success) {
              if (isLive) {
                _this7.openPrefabGame("TaiXiuLive", "TaiXiuLive", function (prefab) {
                  _this7.bigGameNode.removeAllChildren();
                  var node = instantiate(prefab);
                  node.active = true;
                  node.removeComponent("TaiXiuLiveJP.Controller");
                  _this7.bigGameNode.addChild(node);
                });
                return;
              }
              if (_this7.taiXiuMD5MiniGame == null || _this7.taiXiuMD5MiniGame.node == null) {
                _this7.openPrefabGame("TaiXiuMD5", "TaiXiuMD5", function (prefab) {
                  var node = instantiate(prefab);
                  node.parent = _this7.miniGameNode;
                  node.active = false;
                  _this7.taiXiuMD5MiniGame = node.getComponent(MiniGame);
                  _this7.taiXiuMD5MiniGame.show();
                });
              } else {
                if (_this7.taiXiuMD5MiniGame.node.parent === null) {
                  _this7.taiXiuMD5MiniGame.node.parent = _this7.miniGameNode;
                }
                _this7.taiXiuMD5MiniGame.show();
              }
            } else {
              App.instance.showErrLoading(App.instance.getTextLang("me11"));
            }
          });
        };
        _proto.actXoSoMiniGame = function actXoSoMiniGame() {
          BundleControl.loadPrefabPopup("prefabs/PopupXoSo", function (prefab) {
            var popup = instantiate(prefab).getComponent("PopupMiniGameXoSo");
            App.instance.miniGameNode.addChild(popup.node);
            popup.show();
          });
        };
        _proto.actGameHiLo = function actGameHiLo() {
          var _this8 = this;
          this.showLoading(true);
          MiniGameSignalRClient.getInstance().connectHub(function (success) {
            _this8.showLoading(false);
            if (success) {
              if (_this8.hiLoMiniGame == null || _this8.hiLoMiniGame.node == null) {
                _this8.openPrefabGame("Cao_Thap", "Cao_Thap", function (prefab) {
                  var node = instantiate(prefab);
                  node.parent = _this8.miniGameNode;
                  node.active = false;
                  _this8.hiLoMiniGame = node.getComponent(MiniGame);
                  _this8.hiLoMiniGame.show();
                });
              } else {
                if (_this8.hiLoMiniGame.node.parent === null) {
                  _this8.hiLoMiniGame.node.parent = _this8.miniGameNode;
                }
                _this8.hiLoMiniGame.show();
              }
            } else {
              App.instance.showErrLoading(App.instance.getTextLang("me11"));
            }
          });
        };
        _proto.actGameMiniPoker = function actGameMiniPoker() {
          var _this9 = this;
          this.showLoading(true);
          MiniGameSignalRClient.getInstance().connectHub(function (success) {
            _this9.showLoading(false);
            if (success) {
              if (_this9.miniPoker == null || _this9.miniPoker.node == null) {
                _this9.openPrefabGame("MiniPoker", "MiniPoker", function (prefab) {
                  var node = instantiate(prefab);
                  node.parent = _this9.miniGameNode;
                  node.active = false;
                  _this9.miniPoker = node.getComponent(MiniGame);
                  _this9.miniPoker.show();
                });
              } else {
                if (_this9.miniPoker.node.parent === null) {
                  _this9.miniPoker.node.parent = _this9.miniGameNode;
                }
                _this9.miniPoker.show();
              }
            } else {
              App.instance.showErrLoading(App.instance.getTextLang("me11"));
            }
          });
        };
        _proto.actGamePhucSinh = function actGamePhucSinh() {
          var _this10 = this;
          this.showLoading(true);
          MiniGameSignalRClient.getInstance().connectHub(function (success) {
            _this10.showLoading(false);
            if (success) {
              if (_this10.phucSinhMiniGame == null || _this10.phucSinhMiniGame.node == null) {
                _this10.openPrefabGame("PhucSinh", "PhucSinh", function (prefab) {
                  var node = instantiate(prefab);
                  node.parent = _this10.miniGameNode;
                  node.active = false;
                  _this10.phucSinhMiniGame = node.getComponent(MiniGame);
                  _this10.phucSinhMiniGame.show();
                });
              } else {
                if (_this10.phucSinhMiniGame.node.parent === null) {
                  _this10.phucSinhMiniGame.node.parent = _this10.miniGameNode;
                }
                _this10.phucSinhMiniGame.show();
              }
            } else {
              App.instance.showErrLoading(App.instance.getTextLang("me11"));
            }
          });
        };
        _proto.actXocDiaLive = function actXocDiaLive(isMD5) {
          var _this11 = this;
          if (isMD5 === void 0) {
            isMD5 = false;
          }
          App.instance.showLoading(true);
          XocDiaLiveSignalRClient.getInstance().connectHub(isMD5, function (success) {
            if (!success) {
              App.instance.showErrLoading(App.instance.getTextLang('me11'));
              return;
            }
            App.instance.showLoading(false);
            _this11.openPrefabGame("CasinoLive", "XocDiaLive", function (prefab) {
              App.instance.bigGameNode.removeAllChildren();
              var node = instantiate(prefab);
              // @ts-ignore
              node.getComponent("XocDiaLiveController").setupController(isMD5);
              node.active = true;
              App.instance.bigGameNode.addChild(node);
            });
          });
        };
        _proto.actOpenVirtualSports = function actOpenVirtualSports() {
          var _this12 = this;
          this.showLoading(true, -1);
          BundleControl.loadPrefabPopup("prefabs/SportVirtual/SportVirtual", function (prefab) {
            _this12.showLoading(false);
            var popup = instantiate(prefab).getComponent("SportVirtualController");
            App.instance.bigGameNode.addChild(popup.node);
          });
        };
        _proto.actCardGame = function actCardGame(gameId) {
          var _this13 = this;
          this.nodeRoom.removeAllChildren();
          App.instance.showLoading(true);
          CardGameSignalRClient.getInstance().connectHub(gameId, function (success) {
            App.instance.showLoading(false);
            if (success) {
              App.instance.showLoading(true);
              BundleControl.loadPrefabPopup("prefabs/RoomCards", function (prefab) {
                App.instance.showLoading(false);
                var roomCard = instantiate(prefab).getComponent("RoomCards");
                _this13.nodeRoom.addChild(roomCard.node);
                roomCard.setDataRoom(gameId);
              });
            } else {
              App.instance.showErrLoading(App.instance.getTextLang("me11"));
            }
          });
        };
        _proto.actGoToCasino = function actGoToCasino(gameId) {
          var _this14 = this;
          var hub;
          switch (gameId) {
            case Configs.InGameIds.Baccarat:
              hub = BaccaratSignalRClient.getInstance();
              break;
            case Configs.InGameIds.BlackJack:
              hub = BlackjackSignalRClient.getInstance();
              break;
            case Configs.InGameIds.RongHo:
              hub = DragonTigerSignalRClient.getInstance();
              break;
            case Configs.InGameIds.Roullete:
              hub = RouletteSignalRClient.getInstance();
              break;
            case Configs.InGameIds.Sicbo:
              hub = SicboSignalRClient.getInstance();
              break;
            case Configs.InGameIds.XocDia:
              hub = SedieSignalRClient.getInstance();
              break;
          }
          App.instance.showLoading(true);
          // @ts-ignore
          hub.connectHub(function (success) {
            App.instance.showLoading(false);
            if (success) {
              _this14.actGoToCasinoGame(gameId);
            } else {
              App.instance.showErrLoading(App.instance.getTextLang("me11"));
            }
          });
        };
        _proto.actGoToCasinoGame = function actGoToCasinoGame(gameID) {
          var _this15 = this;
          this.nodeRoom.removeAllChildren();
          BundleControl.loadPrefabPopup("prefabs/Casino/Lobby", function (prefab) {
            var popupCasino = instantiate(prefab).getComponent("Casino.Lobby");
            _this15.nodeRoom.addChild(popupCasino.node);
            popupCasino.setDataRoom(gameID);
          });
        };
        _proto.actGameXuatKich = function actGameXuatKich() {
          var _this16 = this;
          BundleControl.loadPrefabGame("XuatKich", "XuatKich", function (finish, total) {
            // this.showXuatKichLoadingProcess(true);
            // this.xuatKichSpriteProgress.fillRange = (finish / total);
            // this.xuatKichNodeSlider.progress = this.xuatKichSpriteProgress.fillRange;
            _this16.showLoading(true, -1);
          }, function (prefab, _bundle) {
            _this16.showLoading(false);
            // this.showXuatKichLoadingProcess(false);
            _this16.skillsGameNode.removeAllChildren();
            var node = instantiate(prefab);
            node.active = true;
            _this16.skillsGameNode.addChild(node);
          });
        };
        _proto.actGameLongVuong = function actGameLongVuong() {
          var _this17 = this;
          BundleControl.loadPrefabGame("LongVuong", "LongVuong", function (finish, total) {
            _this17.showLoading(true, -1);
          }, function (prefab, _bundle) {
            _this17.showLoading(false);
            _this17.skillsGameNode.removeAllChildren();
            var node = instantiate(prefab);
            node.active = true;
            _this17.skillsGameNode.addChild(node);
          });
        };
        _proto.actGamePhiDoi = function actGamePhiDoi() {
          var _this18 = this;
          BundleControl.loadPrefabGame("SpaceWar", "prefabs/SpaceWar", function (finish, total) {
            _this18.showLoading(true, -1);
          }, function (prefab, _bundle) {
            _this18.showLoading(false);
            _this18.skillsGameNode.removeAllChildren();
            var node = instantiate(prefab);
            node.active = true;
            _this18.skillsGameNode.addChild(node);
          });
        };
        _proto.actGameCaMap = function actGameCaMap() {
          var _this19 = this;
          BundleControl.loadPrefabGame("TheShark", "prefabs/TheShark", function (finish, total) {
            _this19.showLoading(true, -1);
          }, function (prefab, _bundle) {
            _this19.showLoading(false);
            _this19.skillsGameNode.removeAllChildren();
            var node = instantiate(prefab);
            node.active = true;
            _this19.skillsGameNode.addChild(node);
          });
        };
        _proto.actGameCaKiem = function actGameCaKiem() {
          var _this20 = this;
          BundleControl.loadPrefabGame("FishHunter", "prefabs/FishHunter", function (finish, total) {
            _this20.showLoading(true, -1);
          }, function (prefab, _bundle) {
            _this20.showLoading(false);
            _this20.skillsGameNode.removeAllChildren();
            var node = instantiate(prefab);
            node.active = true;
            _this20.skillsGameNode.addChild(node);
          });
        };
        _proto.actGameVuongQuoc = function actGameVuongQuoc() {
          var _this21 = this;
          var showError = function showError() {
            App.instance.showErrLoading(App.instance.getTextLang("me11"));
          };
          var connectHub = function connectHub(client) {
            return new Promise(function (resolve, reject) {
              client.connectHub(function (success) {
                App.instance.showLoading(false);
                success ? resolve() : reject();
              });
            });
          };
          connectHub(KingdomSignalRClient.getInstance()).then(function () {
            BundleControl.loadPrefabGame("Kingdom", "Kingdom", function (finish, total) {
              // @TODO with global loading
              _this21.showLoading(true, 0);
            }, function (prefab) {
              _this21.showLoading(false);
              if (_this21.slotGame[Configs.InGameIds.Kingdom]) {
                _this21.slotGame[Configs.InGameIds.Kingdom].setPosition(0, 0, 0);
              } else {
                var node = instantiate(prefab);
                _this21.slotGameNode.addChild(node);
                _this21.slotGame[Configs.InGameIds.Kingdom] = node;
              }
            });
          })["catch"](showError);
        };
        _proto.actGameSamTruyen = function actGameSamTruyen() {
          // const showError = () => {
          //     App.instance.showErrLoading(App.instance.getTextLang("me11"));
          // };
          //
          // const connectHub = (
          //     client: { connectHub: (cb: (success: boolean) => void) => void }
          // ): Promise<void> => {
          //     return new Promise((resolve, reject) => {
          //         client.connectHub((success: boolean) => {
          //             App.instance.showLoading(false);
          //             success ? resolve() : reject();
          //         });
          //     });
          // };
          // connectHub(SamTruyenNetWork)
          //     .then(() => {
          //         BundleControl.loadPrefabGame("SamTruyen", "SamTruyen", (finish, total) => {
          //             // @TODO with global loading
          //             this.showLoading(true, 0);
          //         },
          //             (prefab) => {
          //                 this.showLoading(false);
          //                 this.bigGameNode.removeAllChildren();
          //                 let node = instantiate(prefab);
          //                 node.active = true;
          //                 this.bigGameNode.addChild(node);
          //             }
          //         );
          //     })
          //     .catch(showError);
          // @TODO: Implement Sam Truyen game logic
        };
        _proto.actGameThuyCung = function actGameThuyCung() {
          var _this22 = this;
          var showError = function showError() {
            App.instance.showErrLoading(App.instance.getTextLang("me11"));
          };
          var connectHub = function connectHub(client) {
            return new Promise(function (resolve, reject) {
              client.connectHub(function (success) {
                App.instance.showLoading(false);
                success ? resolve() : reject();
              });
            });
          };
          connectHub(OceanSignalRClient.getInstance()).then(function () {
            BundleControl.loadPrefabGame("Ocean", "Ocean", function (finish, total) {
              // @TODO with global loading
              _this22.showLoading(true, 0);
            }, function (prefab) {
              _this22.showLoading(false);
              _this22.bigGameNode.removeAllChildren();
              var node = instantiate(prefab);
              node.active = true;
              _this22.bigGameNode.addChild(node);
            });
          })["catch"](showError);
        };
        _proto.actGameGaiNhay = function actGameGaiNhay() {
          var _this23 = this;
          var showError = function showError() {
            App.instance.showErrLoading(App.instance.getTextLang("me11"));
          };
          var connectHub = function connectHub(client) {
            return new Promise(function (resolve, reject) {
              client.connectHub(function (success) {
                App.instance.showLoading(false);
                success ? resolve() : reject();
              });
            });
          };
          connectHub(DQSignalRClient.getInstance()).then(function () {
            BundleControl.loadPrefabGame("DancingQueen", "DancingQueen", function (finish, total) {
              // @TODO with global loading
              _this23.showLoading(true, 0);
            }, function (prefab) {
              _this23.showLoading(false);
              _this23.bigGameNode.removeAllChildren();
              var node = instantiate(prefab);
              node.active = true;
              _this23.bigGameNode.addChild(node);
            });
          })["catch"](showError);
        };
        _proto.actGameThanTai = function actGameThanTai() {};
        _proto.actGameVuTruong = function actGameVuTruong() {
          // TODO
        };
        _proto.actGameRungVang = function actGameRungVang() {
          var _this24 = this;
          var showError = function showError() {
            App.instance.showErrLoading(App.instance.getTextLang("me11"));
          };
          var connectHub = function connectHub(client) {
            return new Promise(function (resolve, reject) {
              client.connectHub(function (success) {
                App.instance.showLoading(false);
                success ? resolve() : reject();
              });
            });
          };
          connectHub(ForestSignalRClient.getInstance()).then(function () {
            BundleControl.loadPrefabGame("Forest", "Forest", function (finish, total) {
              // @TODO with global loading
              _this24.showLoading(true, 0);
            }, function (prefab) {
              _this24.showLoading(false);
              _this24.bigGameNode.removeAllChildren();
              var node = instantiate(prefab);
              node.active = true;
              _this24.bigGameNode.addChild(node);
            });
          })["catch"](showError);
        };
        _proto.showToast = function showToast(msg) {
          var _this25 = this;
          this.alertToast.active = true;
          this.alertToast.getComponent(Label).string = msg;
          Tween.stopAllByTarget(this.alertToast);
          tween(this.alertToast).set({
            position: this.alertToast.position.set(this.alertToast.position.x, 0, 0)
          }).to(2.0, {
            position: this.alertToast.position.set(this.alertToast.position.x, 100, 0)
          }, {
            easing: easing.sineOut
          }).call(function () {
            _this25.alertToast.active = false;
          }).start();
        };
        _proto.setActiveGameById = function setActiveGameById(gameId, active) {
          var nodes = this.gameNodeMap.get(gameId);
          if (nodes) {
            nodes.forEach(function (node) {
              return node.active = active;
            });
          }
        };
        return App;
      }(Component), _class3.instance = null, _class3), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "canvas", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "designResolution", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return new Size(1920, 1080);
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "sprFrameAvatars", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return new Array();
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "listEmotionSpr", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "alertDialog", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "notificationDialog", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "confirmDialog", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "loadingNode", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "loadingLabel", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "bigGameNode", [_dec10], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "skillsGameNode", [_dec11], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "slotGameNode", [_dec12], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "miniGameNode", [_dec13], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "popupNode", [_dec14], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor15 = _applyDecoratedDescriptor(_class2.prototype, "nodeRoom", [_dec15], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor16 = _applyDecoratedDescriptor(_class2.prototype, "tipzoJackpotEventX2X6Node", [_dec16], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor17 = _applyDecoratedDescriptor(_class2.prototype, "tipzoMiniLiveNode", [_dec17], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor18 = _applyDecoratedDescriptor(_class2.prototype, "alertToast", [_dec18], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor19 = _applyDecoratedDescriptor(_class2.prototype, "allNodeGame", [_dec19], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor20 = _applyDecoratedDescriptor(_class2.prototype, "lblStatus", [_dec20], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor21 = _applyDecoratedDescriptor(_class2.prototype, "spriteProgress", [_dec21], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor22 = _applyDecoratedDescriptor(_class2.prototype, "nodeSlider", [_dec22], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor23 = _applyDecoratedDescriptor(_class2.prototype, "loadingProcess", [_dec23], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/AudioEngine.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _createForOfIteratorHelperLoose, cclegacy, _decorator, Node, AudioSource;
  return {
    setters: [function (module) {
      _createForOfIteratorHelperLoose = module.createForOfIteratorHelperLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      AudioSource = module.AudioSource;
    }],
    execute: function () {
      var _dec, _class, _class2;
      cclegacy._RF.push({}, "fe0f50B6WZF4Zb9Z1uKVRGO", "AudioEngine", undefined);
      var ccclass = _decorator.ccclass;
      var AudioEngine = exports('AudioEngine', (_dec = ccclass('AudioEngine'), _dec(_class = (_class2 = /*#__PURE__*/function () {
        function AudioEngine() {
          this._bgmSource = null;
          this._sfxSources = new Map();
          this._sfxIdCounter = 0;
        }
        AudioEngine.getInstance = function getInstance() {
          if (!this._instance) {
            this._instance = new AudioEngine();
          }
          return this._instance;
        }

        /** Initialize with an AudioSource for BGM */;
        var _proto = AudioEngine.prototype;
        _proto.init = function init(bgmSource) {
          this._bgmSource = bgmSource;
        }

        /** Play background music */;
        _proto.playMusic = function playMusic(clip, loop, volume) {
          if (loop === void 0) {
            loop = true;
          }
          if (volume === void 0) {
            volume = 1;
          }
          if (!this._bgmSource) {
            console.warn('[AudioManager] BGM AudioSource not initialized');
            return;
          }
          this._bgmSource.clip = clip;
          this._bgmSource.loop = loop;
          this._bgmSource.volume = volume;
          this._bgmSource.play();
        };
        _proto.stopMusic = function stopMusic() {
          var _this$_bgmSource;
          (_this$_bgmSource = this._bgmSource) == null || _this$_bgmSource.stop();
        };
        _proto.pauseMusic = function pauseMusic() {
          var _this$_bgmSource2;
          (_this$_bgmSource2 = this._bgmSource) == null || _this$_bgmSource2.pause();
        };
        _proto.resumeMusic = function resumeMusic() {
          var _this$_bgmSource3;
          (_this$_bgmSource3 = this._bgmSource) == null || _this$_bgmSource3.play();
        };
        _proto.setMusicVolume = function setMusicVolume(volume) {
          if (this._bgmSource) {
            this._bgmSource.volume = volume;
          }
        };
        _proto.isMusicPlaying = function isMusicPlaying() {
          var _this$_bgmSource$play, _this$_bgmSource4;
          return (_this$_bgmSource$play = (_this$_bgmSource4 = this._bgmSource) == null ? void 0 : _this$_bgmSource4.playing) != null ? _this$_bgmSource$play : false;
        }

        /** Play sound effect and return an ID to track it */;
        _proto.playEffect = function playEffect(clip, loop, volume) {
          var _this = this;
          if (loop === void 0) {
            loop = false;
          }
          if (volume === void 0) {
            volume = 1;
          }
          var node = new Node("SFX_" + this._sfxIdCounter);
          var audioSource = node.addComponent(AudioSource);
          audioSource.clip = clip;
          audioSource.loop = loop;
          audioSource.volume = volume;
          audioSource.play();
          var id = this._sfxIdCounter++;
          this._sfxSources.set(id, audioSource);
          audioSource.node.once(AudioSource.EventType.ENDED, function () {
            _this._sfxSources["delete"](id);
            node.destroy();
          });
          return id;
        };
        _proto.stopEffect = function stopEffect(id) {
          var source = this._sfxSources.get(id);
          if (source) {
            source.stop();
            source.node.destroy();
            this._sfxSources["delete"](id);
          }
        };
        _proto.stopAllEffects = function stopAllEffects() {
          for (var _iterator = _createForOfIteratorHelperLoose(this._sfxSources), _step; !(_step = _iterator()).done;) {
            var _step$value = _step.value,
              id = _step$value[0],
              source = _step$value[1];
            source.stop();
            source.node.destroy();
          }
          this._sfxSources.clear();
        };
        _proto.setEffectsVolume = function setEffectsVolume(volume) {
          for (var _iterator2 = _createForOfIteratorHelperLoose(this._sfxSources.values()), _step2; !(_step2 = _iterator2()).done;) {
            var source = _step2.value;
            source.volume = volume;
          }
        };
        _proto.pauseAllEffects = function pauseAllEffects() {
          for (var _iterator3 = _createForOfIteratorHelperLoose(this._sfxSources.values()), _step3; !(_step3 = _iterator3()).done;) {
            var source = _step3.value;
            source.pause();
          }
        };
        _proto.resumeAllEffects = function resumeAllEffects() {
          for (var _iterator4 = _createForOfIteratorHelperLoose(this._sfxSources.values()), _step4; !(_step4 = _iterator4()).done;) {
            var source = _step4.value;
            source.play();
          }
        };
        return AudioEngine;
      }(), _class2._instance = void 0, _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/AudioManager.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './BroadcastListener.ts', './SPUtils.ts', './Utils.ts'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, Node, AudioSource, game, warn, Component, BroadcastReceiver, SPUtils, Utils;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      AudioSource = module.AudioSource;
      game = module.game;
      warn = module.warn;
      Component = module.Component;
    }, function (module) {
      BroadcastReceiver = module.BroadcastReceiver;
    }, function (module) {
      SPUtils = module.SPUtils;
    }, function (module) {
      Utils = module.Utils;
    }],
    execute: function () {
      var _dec, _class, _class2;
      cclegacy._RF.push({}, "19e5fTaksJFVLR6B3lHt43L", "AudioManager", undefined);
      var ccclass = _decorator.ccclass;
      var AudioManager = exports('default', (_dec = ccclass('AudioManager'), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(AudioManager, _Component);
        function AudioManager() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _this.audioSource = null;
          _this.isOnMusic = true;
          _this.isOnSound = true;
          return _this;
        }
        AudioManager.getInstance = function getInstance() {
          if (!this.instance) {
            var node = new Node("AudioManager");
            var audioManager = node.addComponent(AudioManager);
            audioManager.audioSource = node.addComponent(AudioSource);
            game.addPersistRootNode(node);
            this.instance = audioManager;
          }
          return this.instance;
        };
        var _proto = AudioManager.prototype;
        _proto.start = function start() {
          var _this2 = this;
          // Lấy trạng thái ban đầu từ SPUtils
          this.isOnMusic = SPUtils.getMusicVolumn() > 0;
          this.isOnSound = SPUtils.getSoundVolumn() > 0;
          this.updateMusicVolume();
          BroadcastReceiver.register(BroadcastReceiver.ON_AUDIO_CHANGED, function () {
            _this2.isOnMusic = SPUtils.getMusicVolumn() > 0;
            _this2.isOnSound = SPUtils.getSoundVolumn() > 0;
            _this2.updateMusicVolume();
            if (!_this2.isOnSound) ;
          }, this);
        };
        _proto.updateMusicVolume = function updateMusicVolume() {
          if (this.audioSource) {
            this.audioSource.volume = this.isOnMusic ? 1 : 0;
          }
        };
        _proto.playEffect = function playEffect(audioClip, volume) {
          if (volume === void 0) {
            volume = 1;
          }
          if (!audioClip) {
            warn("AudioManager playEffect: audioClip is null");
            return;
          }
          if (this.isOnSound && this.audioSource) {
            this.audioSource.playOneShot(audioClip, volume);
          }
        };
        _proto.playBackgroundMusic = function playBackgroundMusic(audioClip, loop, volume) {
          if (loop === void 0) {
            loop = true;
          }
          if (volume === void 0) {
            volume = 1;
          }
          if (!audioClip) {
            warn("AudioManager playBackgroundMusic: audioClip is null");
            Utils.Log("AudioManager playBackgroundMusic: audioClip is null");
            return;
          }
          if (this.audioSource) {
            this.audioSource.stop();
            this.audioSource.clip = audioClip;
            this.audioSource.loop = loop;
            this.audioSource.volume = this.isOnMusic ? volume : 0;
            this.audioSource.play();
          }
        };
        _proto.toggleMusic = function toggleMusic() {
          this.isOnMusic = !this.isOnMusic;
          this.updateMusicVolume();
          SPUtils.setMusicVolumn(this.isOnMusic ? 1 : 0);
        };
        _proto.turnOnMusic = function turnOnMusic() {
          this.isOnMusic = true;
          this.updateMusicVolume();
          SPUtils.setMusicVolumn(1);
        };
        _proto.turnOffMusic = function turnOffMusic() {
          this.isOnMusic = false;
          this.updateMusicVolume();
          SPUtils.setMusicVolumn(0);
        };
        _proto.isMusicOn = function isMusicOn() {
          return this.isOnMusic;
        };
        _proto.isSoundOn = function isSoundOn() {
          return this.isOnSound;
        };
        return AudioManager;
      }(Component), _class2.instance = null, _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/AutoPlayAnimation.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, Sprite, assetManager, Texture2D, SpriteFrame, Component;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Sprite = module.Sprite;
      assetManager = module.assetManager;
      Texture2D = module.Texture2D;
      SpriteFrame = module.SpriteFrame;
      Component = module.Component;
    }],
    execute: function () {
      var _class;
      cclegacy._RF.push({}, "9b1dfTuVItMf57S8xQ6Xvpw", "AutoPlayAnimation", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var AutoPlayAnimation = exports('default', ccclass(_class = /*#__PURE__*/function (_Component) {
        _inheritsLoose(AutoPlayAnimation, _Component);
        function AutoPlayAnimation() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _this.sprite = null;
          _this.spriteFrames = [];
          _this.index = 0;
          _this.frameRate = 0.1;
          // 100ms mỗi frame
          _this.isPlaying = false;
          return _this;
        }
        var _proto = AutoPlayAnimation.prototype;
        _proto.onLoad = function onLoad() {
          this.sprite = this.getComponent(Sprite);
          this.loadAnimationFrames();
        };
        _proto.loadAnimationFrames = function loadAnimationFrames() {
          var _this2 = this;
          var bundle = assetManager.getBundle("TienLen");
          if (!bundle) {
            console.error("Không tìm thấy bundle 'TienLen'");
            return;
          }
          bundle.loadDir("res/win", Texture2D, function (err, textures) {
            if (err) {
              console.error("Lỗi khi tải ảnh:", err);
              return;
            }

            // Chuyển texture thành SpriteFrame
            _this2.spriteFrames = textures.map(function (texture) {
              var spriteFrame = new SpriteFrame();
              spriteFrame.texture = texture;
              return spriteFrame;
            });

            // Bắt đầu animation nếu node đang active
            if (_this2.node.active && _this2.spriteFrames.length > 0) {
              _this2.startAnimation();
            }
          });
        };
        _proto.startAnimation = function startAnimation() {
          if (this.isPlaying || this.spriteFrames.length === 0) return;
          this.isPlaying = true;
          this.index = 0; // Reset animation về frame đầu tiên
          this.schedule(this.updateAnimation, this.frameRate);
        };
        _proto.stopAnimation = function stopAnimation() {
          this.isPlaying = false;
          this.unschedule(this.updateAnimation);
        };
        _proto.updateAnimation = function updateAnimation() {
          if (!this.node.active) return; // Dừng cập nhật nếu node bị ẩn

          this.sprite.spriteFrame = this.spriteFrames[this.index];
          this.index = (this.index + 1) % this.spriteFrames.length;
        };
        _proto.onEnable = function onEnable() {
          if (this.spriteFrames.length > 0) {
            this.startAnimation(); // Khi node được kích hoạt, restart animation từ đầu
          }
        };

        _proto.onDisable = function onDisable() {
          this.stopAnimation(); // Khi node bị tắt, dừng animation
        };

        return AutoPlayAnimation;
      }(Component)) || _class);
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/BaccaratSignalRClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Config.ts', './Network.SignalRClient.ts', './App.ts'], function (exports) {
  var _inheritsLoose, cclegacy, Configs, SignalRClient, App;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      SignalRClient = module.default;
    }, function (module) {
      App = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "1bf4cZiL+ZK7aSZgDendKDU", "BaccaratSignalRClient", undefined);
      var BaccaratSignalRClient = exports('default', /*#__PURE__*/function (_SignalRClient) {
        _inheritsLoose(BaccaratSignalRClient, _SignalRClient);
        function BaccaratSignalRClient() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _SignalRClient.call.apply(_SignalRClient, [this].concat(args)) || this;
          _this.onSuccess = void 0;
          return _this;
        }
        BaccaratSignalRClient.getErrMsg = function getErrMsg(errCode) {
          return App.instance.getTextLang(("ca" + errCode).includes("ca-11000") ? "ca-110002" : "ca" + errCode);
        };
        BaccaratSignalRClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new BaccaratSignalRClient();
          }
          return this.instance;
        };
        var _proto = BaccaratSignalRClient.prototype;
        _proto.onstart = function onstart() {
          this.onSuccess(true);
        };
        _proto.onError = function onError() {
          this.onSuccess(false);
        };
        _proto.connectHub = function connectHub(onSuccess) {
          this.onSuccess = onSuccess;
          _SignalRClient.prototype.connect.call(this, Configs.App.DOMAIN_CONFIG['BaccaratHubUrl']);
        };
        return BaccaratSignalRClient;
      }(SignalRClient));
      BaccaratSignalRClient.instance = null;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/BannerSlider.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Sprite, SpriteFrame, CCInteger, Component, UIOpacity, tween;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Sprite = module.Sprite;
      SpriteFrame = module.SpriteFrame;
      CCInteger = module.CCInteger;
      Component = module.Component;
      UIOpacity = module.UIOpacity;
      tween = module.tween;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;
      cclegacy._RF.push({}, "082e3S9Bp1G25y/rb5BXfsN", "BannerSlider", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var BannerSlider = exports('default', (_dec = property([Node]), _dec2 = property([Sprite]), _dec3 = property(SpriteFrame), _dec4 = property(SpriteFrame), _dec5 = property(CCInteger), ccclass(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(BannerSlider, _Component);
        function BannerSlider() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "banners", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "dots", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "dotActive", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "dotInactive", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "interval", _descriptor5, _assertThisInitialized(_this));
          _this.currentIndex = 0;
          return _this;
        }
        var _proto = BannerSlider.prototype;
        _proto.onLoad = function onLoad() {
          this.schedule(this.nextSlide, this.interval);
          this.updateSlide();
        };
        _proto.nextSlide = function nextSlide() {
          this.currentIndex = (this.currentIndex + 1) % this.banners.length;
          this.updateSlide();
        };
        _proto.updateSlide = function updateSlide() {
          var _this2 = this;
          var _loop = function _loop() {
            var banner = _this2.banners[i];
            var isCurrent = i === _this2.currentIndex;
            var opacityComp = banner.getComponent(UIOpacity);
            if (!opacityComp) {
              opacityComp = banner.addComponent(UIOpacity);
            }
            opacityComp.opacity = isCurrent ? 0 : 255;
            banner.active = true;
            tween(opacityComp).to(0.5, {
              opacity: isCurrent ? 255 : 0
            }).call(function () {
              if (!isCurrent) banner.active = false;
            }).start();
            _this2.dots[i].spriteFrame = isCurrent ? _this2.dotActive : _this2.dotInactive;
          };
          for (var i = 0; i < this.banners.length; i++) {
            _loop();
          }
        };
        return BannerSlider;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "banners", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "dots", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "dotActive", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "dotInactive", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "interval", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 3;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/BannerView.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Utils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, PageView, Node, instantiate, Sprite, UITransform, Button, sys, Component, Utils;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      PageView = module.PageView;
      Node = module.Node;
      instantiate = module.instantiate;
      Sprite = module.Sprite;
      UITransform = module.UITransform;
      Button = module.Button;
      sys = module.sys;
      Component = module.Component;
    }, function (module) {
      Utils = module.Utils;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2, _class3;
      cclegacy._RF.push({}, "04d31/0tLZIxZRYB1PgOiqp", "BannerView", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var BannerView = exports('default', (_dec = ccclass('BannerView'), _dec2 = property(PageView), _dec3 = property(Node), _dec(_class = (_class2 = (_class3 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(BannerView, _Component);
        function BannerView() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "pageView", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "bannerTemplate", _descriptor2, _assertThisInitialized(_this));
          _this.currentIndex = 0;
          _this.totalPages = 0;
          _this.pageTimeouts = [];
          _this.autoScrollScheduled = false;
          return _this;
        }
        var _proto = BannerView.prototype;
        _proto.onLoad = function onLoad() {
          var _this$pageView;
          BannerView.instance = this;
          (_this$pageView = this.pageView) == null || _this$pageView.content.removeAllChildren();
        };
        _proto.showDetail = function showDetail(banners) {
          var _this2 = this;
          if (!this.pageView || !this.bannerTemplate) return;
          this.pageTimeouts = [];
          this.currentIndex = 0;
          banners.forEach(function (item) {
            var _item$TimeOut;
            if (!item.Release) return;
            var bannerNode = instantiate(_this2.bannerTemplate);
            bannerNode.active = true;
            var sprite = bannerNode.getComponent(Sprite);
            Utils.loadBannerFromUrl(sprite, item.ImgName, function () {
              var spriteFrame = sprite == null ? void 0 : sprite.spriteFrame;
              var transform = bannerNode.getComponent(UITransform);
              if (spriteFrame != null && spriteFrame.originalSize && transform) {
                transform.setContentSize(spriteFrame.originalSize);
              }
            });
            var button = bannerNode.getComponent(Button);
            if (button) {
              button.node.on('click', function () {
                return sys.openURL(item.EventUrl);
              }, _this2);
            }
            _this2.pageView.addPage(bannerNode);
            _this2.pageTimeouts.push((_item$TimeOut = item.TimeOut) != null ? _item$TimeOut : 2);
          });
          this.totalPages = this.pageView.getPages().length;
          if (this.totalPages > 1) {
            this.scheduleNextScroll();
          }
        };
        _proto.scheduleNextScroll = function scheduleNextScroll() {
          var _this$pageTimeouts$th,
            _this3 = this;
          if (this.autoScrollScheduled || !this.pageView) return;
          this.autoScrollScheduled = true;
          var timeout = (_this$pageTimeouts$th = this.pageTimeouts[this.currentIndex]) != null ? _this$pageTimeouts$th : 2;
          this.scheduleOnce(function () {
            _this3.currentIndex = (_this3.currentIndex + 1) % _this3.totalPages;
            _this3.pageView.scrollToPage(_this3.currentIndex, 0.3);
            _this3.autoScrollScheduled = false;
            _this3.scheduleNextScroll();
          }, timeout);
        };
        _proto.onDisable = function onDisable() {
          this.unscheduleAllCallbacks();
          this.autoScrollScheduled = false;
        };
        return BannerView;
      }(Component), _class3.instance = null, _class3), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "pageView", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "bannerTemplate", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/BaseSlotMachine.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './BaseSlotSymbol.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, _createForOfIteratorHelperLoose, _asyncToGenerator, _regeneratorRuntime, cclegacy, _decorator, Node, instantiate, Component, tween, BaseSlotSymbol, SymbolState;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
      _createForOfIteratorHelperLoose = module.createForOfIteratorHelperLoose;
      _asyncToGenerator = module.asyncToGenerator;
      _regeneratorRuntime = module.regeneratorRuntime;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      instantiate = module.instantiate;
      Component = module.Component;
      tween = module.tween;
    }, function (module) {
      BaseSlotSymbol = module.BaseSlotSymbol;
      SymbolState = module.SymbolState;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2, _descriptor3;
      cclegacy._RF.push({}, "f7ac3sU1/tDvY4vWXWo68CY", "BaseSlotMachine", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var BaseSlotMachine = exports('BaseSlotMachine', (_dec = ccclass('BaseSlotMachine'), _dec2 = property([Node]), _dec3 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(BaseSlotMachine, _Component);
        function BaseSlotMachine() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "reels", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "symbolTemplate", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "itemHeight", _descriptor3, _assertThisInitialized(_this));
          _this.spinConfig = void 0;
          _this.itemPosition = [];
          _this.listeners = void 0;
          return _this;
        }
        var _proto = BaseSlotMachine.prototype;
        /**
        * Sets the configuration for the slot machine
        * @param config - The spin configuration
        */
        _proto.setConfig = function setConfig(config) {
          this.spinConfig = config;
        }

        /**
         * Initializes the slot reels with symbols
         */;
        _proto.initializeReels = function initializeReels() {
          this.reels.forEach(function (reel) {
            return reel.removeAllChildren();
          });
          for (var i = 0; i < this.reels.length; i++) {
            var reel = this.reels[i];
            for (var j = 0; j < this.spinConfig.rowCount * 2 + this.spinConfig.symbolOffset; j++) {
              var item = instantiate(this.symbolTemplate);
              item.active = true;
              reel.addChild(item);
              item.setPosition(0, this.itemHeight / 2 + this.itemHeight * j);

              // This is just a placeholder that will be overridden by child classes
              this.initializeSymbol(item, j > 2);
            }
          }

          // Remove the template after we're done with it
          this.symbolTemplate.removeFromParent();
          this.symbolTemplate = null;

          // Setup item positions for easy access
          var rowCount = this.spinConfig.rowCount;
          var colCount = this.reels.length;
          for (var row = rowCount - 1; row >= 0; row--) {
            for (var col = 0; col < colCount; col++) {
              this.itemPosition.push(this.reels[col].children[row]);
            }
          }
        }

        /**
         * Method to be overridden by child classes to initialize a symbol
         * @param symbolNode - The symbol node to initialize
         * @param isBlur - Whether the symbol is blur
         */;
        /**
         * Starts the spinning animation with a given result
         * @param resultSpin - The result of the spin as a comma-separated string
         */
        _proto.startSpin = /*#__PURE__*/
        function () {
          var _startSpin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(resultSpin) {
            var _this2 = this;
            var matrix, _this$spinConfig, spinDuration, symbolOffset, delayReel, rowCount, elasticPercent, distance, reelCount, spinPromises, _loop, i;
            return _regeneratorRuntime().wrap(function _callee$(_context2) {
              while (1) switch (_context2.prev = _context2.next) {
                case 0:
                  matrix = resultSpin.split(",");
                  _this$spinConfig = this.spinConfig, spinDuration = _this$spinConfig.spinDuration, symbolOffset = _this$spinConfig.symbolOffset, delayReel = _this$spinConfig.delayReel, rowCount = _this$spinConfig.rowCount, elasticPercent = _this$spinConfig.elasticPercent;
                  distance = this.itemHeight * (rowCount + symbolOffset + elasticPercent / 100);
                  reelCount = this.reels.length;
                  spinPromises = [];
                  _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop(i) {
                    var column, items, j, id, symbol, spinPromise;
                    return _regeneratorRuntime().wrap(function _loop$(_context) {
                      while (1) switch (_context.prev = _context.next) {
                        case 0:
                          column = _this2.reels[i];
                          items = column.children; // Set the result symbols at the bottom of the reels
                          for (j = 0; j < rowCount; j++) {
                            id = parseInt(matrix[i + j * reelCount]);
                            symbol = items[column.children.length - 1 - j];
                            symbol.getComponent(BaseSlotSymbol).setIsBlur(false).setId(id.toString()).show();
                            //this.setSymbolId(items[column.childrenCount - 1 - j], id, false);
                          }
                          // Create a promise for each reel spin
                          spinPromise = new Promise(function (resolve) {
                            tween(column).delay(i * delayReel).to(spinDuration, {
                              y: -distance
                            }, {
                              easing: "quadOut"
                            }).by(0.2, {
                              y: _this2.itemHeight * elasticPercent / 100
                            }, {
                              easing: "quadInOut"
                            }).call(function () {
                              var _this2$listeners;
                              for (var _j = 0; _j < rowCount; _j++) {
                                var _id = parseInt(matrix[i + _j * reelCount]);
                                var _symbol = items[_this2.spinConfig.rowCount - 1 - _j];
                                _symbol.getComponent(BaseSlotSymbol).setIsBlur(false).setId(_id.toString()).show();
                              }
                              (_this2$listeners = _this2.listeners) == null || _this2$listeners.onReelCompleted == null || _this2$listeners.onReelCompleted();
                              column.y = 0;
                              resolve();
                            }).start();
                          });
                          spinPromises.push(spinPromise);
                        case 5:
                        case "end":
                          return _context.stop();
                      }
                    }, _loop);
                  });
                  i = 0;
                case 7:
                  if (!(i < reelCount)) {
                    _context2.next = 12;
                    break;
                  }
                  return _context2.delegateYield(_loop(i), "t0", 9);
                case 9:
                  i++;
                  _context2.next = 7;
                  break;
                case 12:
                  _context2.next = 14;
                  return Promise.all(spinPromises);
                case 14:
                case "end":
                  return _context2.stop();
              }
            }, _callee, this);
          }));
          function startSpin(_x) {
            return _startSpin.apply(this, arguments);
          }
          return startSpin;
        }()
        /**
         * Gets the item at a specific position
         * @param index - The index of the item (1-based)
         * @returns The node at the specified position
         */;

        _proto.getItemAtPosition = function getItemAtPosition(index) {
          return this.itemPosition[index - 1];
        }

        /**
         * Highlights specific items with winning positions
         * @param indexes - Array of indexes to highlight
         * @param prizeLines - Optional array of prize lines to show
         */;
        _proto.highlightItems = /*#__PURE__*/
        function () {
          var _highlightItems = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(indexes, prizeLines) {
            var _this3 = this;
            return _regeneratorRuntime().wrap(function _callee3$(_context4) {
              while (1) switch (_context4.prev = _context4.next) {
                case 0:
                  _context4.next = 2;
                  return Promise.all(indexes.map( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(i) {
                    var item;
                    return _regeneratorRuntime().wrap(function _callee2$(_context3) {
                      while (1) switch (_context3.prev = _context3.next) {
                        case 0:
                          item = _this3.getItemAtPosition(i);
                          _context3.next = 3;
                          return item.getComponent(BaseSlotSymbol).setState(SymbolState.HIGHLIGHT);
                        case 3:
                        case "end":
                          return _context3.stop();
                      }
                    }, _callee2);
                  }))));
                case 2:
                  this.resetAllItems();
                case 3:
                case "end":
                  return _context4.stop();
              }
            }, _callee3, this);
          }));
          function highlightItems(_x2, _x3) {
            return _highlightItems.apply(this, arguments);
          }
          return highlightItems;
        }()
        /**
        * Resets all items to their initial state
        */;

        _proto.resetAllItems = function resetAllItems() {
          for (var _iterator = _createForOfIteratorHelperLoose(this.itemPosition), _step; !(_step = _iterator()).done;) {
            var item = _step.value;
            item.getComponent(BaseSlotSymbol).setState(SymbolState.INIT).then();
          }
        };
        return BaseSlotMachine;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "reels", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "symbolTemplate", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "itemHeight", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/BaseSlotSymbol.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Sprite, SpriteAtlas, Animation, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Sprite = module.Sprite;
      SpriteAtlas = module.SpriteAtlas;
      Animation = module.Animation;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;
      cclegacy._RF.push({}, "647980fZBZIpbZtRv5BYgwH", "BaseSlotSymbol", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var SymbolState = exports('SymbolState', /*#__PURE__*/function (SymbolState) {
        SymbolState[SymbolState["INIT"] = 0] = "INIT";
        SymbolState[SymbolState["HIDE"] = 1] = "HIDE";
        SymbolState[SymbolState["HIGHLIGHT"] = 2] = "HIGHLIGHT";
        return SymbolState;
      }({}));
      var BaseSlotSymbol = exports('BaseSlotSymbol', (_dec = ccclass('BaseSlotSymbol'), _dec2 = property(Sprite), _dec3 = property(SpriteAtlas), _dec4 = property(Animation), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(BaseSlotSymbol, _Component);
        function BaseSlotSymbol() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "symbol", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "defaultAtlas", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "defaultAnimation", _descriptor3, _assertThisInitialized(_this));
          _this._stateHandler = void 0;
          _this._sId = void 0;
          _this._isBlur = void 0;
          return _this;
        }
        var _proto = BaseSlotSymbol.prototype;
        _proto.setId = function setId(value) {
          this._sId = value;
          return this;
        };
        _proto.getId = function getId() {
          return this._sId;
        };
        _proto.setIsBlur = function setIsBlur(value) {
          this._isBlur = value;
          return this;
        };
        _proto.getIsBlur = function getIsBlur() {
          return this._isBlur;
        };
        _proto.show = function show() {
          var spriteFrameName = "Item" + this.getId() + (this.getIsBlur() ? "-Blur" : "");
          this.symbol.spriteFrame = this.defaultAtlas.getSpriteFrame(spriteFrameName);
        };
        _proto.start = function start() {
          this.setState(SymbolState.INIT).then();
        };
        _proto.setState = function setState(state) {
          return this._stateHandler[state]();
        };
        _proto.setStateHandler = function setStateHandler(stateHandler) {
          this._stateHandler = stateHandler;
        };
        return BaseSlotSymbol;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "symbol", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "defaultAtlas", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "defaultAnimation", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/BgResizer.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, view, size, UITransform, Component, Size;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      view = module.view;
      size = module.size;
      UITransform = module.UITransform;
      Component = module.Component;
      Size = module.Size;
    }],
    execute: function () {
      var _class, _class2, _descriptor;
      cclegacy._RF.push({}, "cbf1dlYiXRG35Ei6K+I4cFm", "BgResizer", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var BgResizer = exports('default', ccclass(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(BgResizer, _Component);
        function BgResizer() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "designResolution", _descriptor, _assertThisInitialized(_this));
          _this.lastWitdh = 0;
          _this.lastHeight = 0;
          return _this;
        }
        var _proto = BgResizer.prototype;
        _proto.start = function start() {
          this.updateSize();
        };
        _proto.update = function update(dt) {
          this.updateSize();
        };
        _proto.updateSize = function updateSize() {
          var frameSize = view.getFrameSize();
          if (this.lastWitdh !== frameSize.width || this.lastHeight !== frameSize.height) {
            this.lastWitdh = frameSize.width;
            this.lastHeight = frameSize.height;
            if (this.designResolution.width / this.designResolution.height > frameSize.width / frameSize.height) {
              var height = this.designResolution.width * frameSize.height / frameSize.width;
              var width = height * this.designResolution.width / this.designResolution.height;
              var newDesignSize = size(width, height);
              this.getComponent(UITransform).setContentSize(newDesignSize);
            } else {
              var width = this.designResolution.height * frameSize.width / frameSize.height;
              var height = width * this.designResolution.height / this.designResolution.width;
              var newDesignSize = size(width, height);
              var newDesignSize = size(width, height);
              this.node.getComponent(UITransform).setContentSize(newDesignSize);
            }
          }
        };
        return BgResizer;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "designResolution", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return new Size(1920, 1080);
        }
      }), _class2)) || _class);
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/BlackjackSignalRClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Config.ts', './Network.SignalRClient.ts', './DragonTigerSignalRClient.ts'], function (exports) {
  var _inheritsLoose, cclegacy, Configs, SignalRClient, DragonTigerSignalRClient;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      SignalRClient = module.default;
    }, function (module) {
      DragonTigerSignalRClient = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "c9a40La6T1ETLQno8LUvZ3g", "BlackjackSignalRClient", undefined);
      var BlackjackSignalRClient = exports('default', /*#__PURE__*/function (_SignalRClient) {
        _inheritsLoose(BlackjackSignalRClient, _SignalRClient);
        function BlackjackSignalRClient() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _SignalRClient.call.apply(_SignalRClient, [this].concat(args)) || this;
          _this.onSuccess = void 0;
          return _this;
        }
        BlackjackSignalRClient.getErrMsg = function getErrMsg(errCode) {
          return DragonTigerSignalRClient.getErrMsg(errCode);
        };
        BlackjackSignalRClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new BlackjackSignalRClient();
          }
          return this.instance;
        };
        var _proto = BlackjackSignalRClient.prototype;
        _proto.onstart = function onstart() {
          this.onSuccess(true);
        };
        _proto.onError = function onError() {
          this.onSuccess(false);
        };
        _proto.connectHub = function connectHub(onSuccess) {
          this.onSuccess = onSuccess;
          _SignalRClient.prototype.connect.call(this, Configs.App.DOMAIN_CONFIG['BlackjackHubUrl']);
        };
        return BlackjackSignalRClient;
      }(SignalRClient));
      BlackjackSignalRClient.instance = null;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/BlickOpacity.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, UIOpacity, Tween, tween, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      UIOpacity = module.UIOpacity;
      Tween = module.Tween;
      tween = module.tween;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _class, _class2, _descriptor;
      cclegacy._RF.push({}, "96ce3FYGXFE/aNN2yS4qYfD", "BlickOpacity", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var BlinkOpacity = exports('default', (_dec = ccclass('BlinkOpacity'), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(BlinkOpacity, _Component);
        function BlinkOpacity() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "duration", _descriptor, _assertThisInitialized(_this));
          _this.blinkTween = null;
          return _this;
        }
        var _proto = BlinkOpacity.prototype;
        _proto.start = function start() {
          this.startBlink();
        };
        _proto.startBlink = function startBlink() {
          var opacity = this.node.getComponent(UIOpacity);
          if (!opacity) {
            console.warn('[BlinkOpacity] UIOpacity component is missing on node:', this.node.name);
            return;
          }
          Tween.stopAllByTarget(opacity);
          this.blinkTween = tween(opacity).to(this.duration, {
            opacity: 180
          }).to(this.duration, {
            opacity: 255
          }).repeatForever().start();
        };
        _proto.onDisable = function onDisable() {
          var opacity = this.node.getComponent(UIOpacity);
          if (opacity) {
            Tween.stopAllByTarget(opacity);
          }
        };
        return BlinkOpacity;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "duration", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0.5;
        }
      }), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/BlinkColor.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Color, Sprite, tween, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Color = module.Color;
      Sprite = module.Sprite;
      tween = module.tween;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2, _descriptor3;
      cclegacy._RF.push({}, "5d6efTjHMJF3qUHMF4KvbPW", "BlinkColor", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var BlinkColor = exports('default', (_dec = ccclass('BlinkColor'), _dec2 = property(Color), _dec3 = property(Color), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(BlinkColor, _Component);
        function BlinkColor() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "duration", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "startColor", _descriptor2, _assertThisInitialized(_this));
          // #b1b1b1
          _initializerDefineProperty(_this, "endColor", _descriptor3, _assertThisInitialized(_this));
          // #FFFFFF
          _this.blinkTween = null;
          return _this;
        }
        var _proto = BlinkColor.prototype;
        _proto.onLoad = function onLoad() {
          this.startBlinkEffect();
        };
        _proto.startBlinkEffect = function startBlinkEffect() {
          var _this2 = this;
          var sprite = this.node.getComponent(Sprite);
          if (!sprite) {
            console.warn('BlinkColor: Node needs a Sprite component to work');
            return;
          }

          // Set initial color
          sprite.color = this.startColor.clone();
          this.blinkTween = tween(this.node).repeatForever(tween().to(this.duration, {}, {
            onUpdate: function onUpdate(_target, ratio) {
              _this2.updateSpriteColor(ratio);
            }
          }).to(this.duration, {}, {
            onUpdate: function onUpdate(_target, ratio) {
              _this2.updateSpriteColor(1 - ratio);
            }
          })).start();
        };
        _proto.updateSpriteColor = function updateSpriteColor(ratio) {
          var sprite = this.node.getComponent(Sprite);
          if (!sprite) return;

          // Linear interpolation between start and end colors
          var currentColor = new Color(this.startColor.r + (this.endColor.r - this.startColor.r) * ratio, this.startColor.g + (this.endColor.g - this.startColor.g) * ratio, this.startColor.b + (this.endColor.b - this.startColor.b) * ratio);
          sprite.color = currentColor;
        };
        _proto.onDisable = function onDisable() {
          this.stopBlinkEffect();
        };
        _proto.stopBlinkEffect = function stopBlinkEffect() {
          if (this.blinkTween) {
            this.blinkTween.stop();
            this.blinkTween = null;
          }
        };
        return BlinkColor;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "duration", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0.5;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "startColor", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return new Color(177, 177, 177);
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "endColor", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return Color.WHITE.clone();
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/BlinkNode.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, UIOpacity, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      UIOpacity = module.UIOpacity;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _class, _class2, _descriptor;
      cclegacy._RF.push({}, "70dccydRS1OY6vBAQNdJKgp", "BlinkNode", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var BlinkNode = exports('default', (_dec = ccclass('BlinkNode'), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(BlinkNode, _Component);
        function BlinkNode() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "blinkSpeed", _descriptor, _assertThisInitialized(_this));
          _this.blinkTime = 0;
          _this.uiOpacity = null;
          return _this;
        }
        var _proto = BlinkNode.prototype;
        _proto.onLoad = function onLoad() {
          // Đảm bảo node có UIOpacity component
          this.uiOpacity = this.node.getComponent(UIOpacity);
          if (!this.uiOpacity) {
            this.uiOpacity = this.node.addComponent(UIOpacity);
          }
        };
        _proto.update = function update(dt) {
          this.blinkTime += dt * this.blinkSpeed * 2 * Math.PI;
          var visible = Math.sin(this.blinkTime) > 0;
          if (this.uiOpacity) {
            this.uiOpacity.opacity = visible ? 180 : 20;
          }
        };
        return BlinkNode;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "blinkSpeed", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 4;
        }
      }), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/BroadcastListener.ts", ['cc'], function (exports) {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "b253dIOgWhGEYohTrvICG7r", "BroadcastListener", undefined);
      var BroadcastListener = exports('BroadcastListener', function BroadcastListener(action, callback, target) {
        this.action = void 0;
        this.target = void 0;
        this.callback = void 0;
        this.action = action;
        this.target = target;
        this.callback = callback;
      });
      var BroadcastReceiver = exports('BroadcastReceiver', /*#__PURE__*/function () {
        function BroadcastReceiver() {}
        BroadcastReceiver.register = function register(action, callback, target) {
          this.listeners.push(new BroadcastListener(action, callback, target));
        };
        BroadcastReceiver.unRegisterByAction = function unRegisterByAction(action) {
          for (var i = 0; i < this.listeners.length; i++) {
            if (this.listeners[i].action == action) {
              this.listeners.splice(i--, 1);
            }
          }
        };
        BroadcastReceiver.unRegisterByTarget = function unRegisterByTarget(target) {
          for (var i = 0; i < this.listeners.length; i++) {
            if (this.listeners[i].target == target) {
              this.listeners.splice(i--, 1);
            }
          }
        };
        BroadcastReceiver.send = function send(action, data) {
          if (data === void 0) {
            data = null;
          }
          for (var i = 0; i < this.listeners.length; i++) {
            var listener = this.listeners[i];
            if (listener.action == action) {
              if (listener.target && listener.target instanceof Object && listener.target.node) {
                listener.callback(data);
              } else {
                this.listeners.splice(i--, 1);
              }
            }
          }
        };
        return BroadcastReceiver;
      }());
      BroadcastReceiver.UPDATE_MANAGE_GAME_CONFIG = "UPDATE_MANAGE_GAME_CONFIG";
      BroadcastReceiver.USER_LOGGED_IN = "USER_LOGGED_IN";
      BroadcastReceiver.USER_LOGOUT = "USER_LOGOUT";
      BroadcastReceiver.USER_UPDATE_COIN = "USER_UPDATE_COIN";
      BroadcastReceiver.USER_INFO_REFRESH = "USER_INFO_REFRESH";
      BroadcastReceiver.ON_AUDIO_CHANGED = "ON_AUDIO_CHANGED";
      BroadcastReceiver.listeners = new Array();
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/ButtonMiniGame.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Config.ts', './App.ts', './Utils.ts', './BundleControl.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, director, UIOpacity, tween, Tween, v3, easing, Component, instantiate, Label, Configs, App, Utils, BundleControl;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      director = module.director;
      UIOpacity = module.UIOpacity;
      tween = module.tween;
      Tween = module.Tween;
      v3 = module.v3;
      easing = module.easing;
      Component = module.Component;
      instantiate = module.instantiate;
      Label = module.Label;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Utils = module.Utils;
    }, function (module) {
      BundleControl = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3, _class3;
      cclegacy._RF.push({}, "c8018YcTdBMn7JBU3IXsvce", "ButtonMiniGame", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var ButtonMiniGame = exports('default', (_dec = ccclass('ButtonMiniGame'), _dec2 = property(Node), _dec3 = property(Node), _dec4 = property(Node), _dec(_class = (_class2 = (_class3 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(ButtonMiniGame, _Component);
        function ButtonMiniGame() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "button", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "panel", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "container", _descriptor3, _assertThisInitialized(_this));
          _this.systemEvent = null;
          return _this;
        }
        var _proto = ButtonMiniGame.prototype;
        _proto.onLoad = function onLoad() {
          ButtonMiniGame.instance = this;
          this.systemEvent = director.getScene();
          this.systemEvent.on('ShowMoneyAuto', this.showEffMoney, this);
          this.systemEvent.on('activeBlinkAuto', this.showEffectBlink, this);
        };
        _proto.show = function show() {
          this.panel.active = false;
          this.button.active = true;
        };
        _proto.showEffMoney = function showEffMoney(data) {
          var _this2 = this;
          var game = data.game,
            moneyStr = data.money;
          var money = parseInt(moneyStr);
          var cb = function cb(prefab) {
            var parent = _this2.container.getChildByName(game);
            if (parent) {
              console.log('parent', parent);
              var inst = instantiate(prefab);
              var lbl = inst.getComponent(Label);
              if (!lbl) return;
              lbl.node.setParent(parent.parent);
              lbl.node.setPosition(parent.position);
              lbl.string = "+" + Utils.formatMoney(Math.abs(money));
              tween(lbl.node).by(1.5, {
                position: v3(0, 120, 0)
              }).delay(1.5).call(function () {
                lbl.node.destroy();
              }).start();
            }
          };
          BundleControl.loadPrefabPopup('prefabs/TextWinMini', cb);
        };
        _proto.showEffectBlink = function showEffectBlink(data) {
          var parent = this.container.getChildByName(data.game);
          if (!parent) return;
          var opacity = parent.getComponent(UIOpacity);
          if (!opacity) return;
          if (data.active) {
            tween(opacity).to(0.5, {
              opacity: 100
            }).to(0.5, {
              opacity: 255
            }).union().repeatForever().start();
          } else {
            Tween.stopAllByTarget(opacity);
            opacity.opacity = 255;
          }
        };
        _proto.actButton = function actButton() {
          this.panel.active = true;
          this.button.active = false;
          var cont = this.panel.getChildByName('Container');
          tween(cont).set({
            angle: -180,
            scale: v3(0, 0, 1)
          }).to(0.3, {
            angle: 0,
            scale: v3(1, 1, 1)
          }, {
            easing: easing.sineOut
          }).start();
        };
        _proto.actHidden = function actHidden() {
          var _this3 = this;
          var cont = this.panel.getChildByName('Container');
          tween(cont).to(0.3, {
            angle: -180,
            scale: v3(0, 0, 1)
          }, {
            easing: easing.sineIn
          }).call(function () {
            _this3.panel.active = false;
            _this3.button.active = true;
          }).start();
        };
        _proto.actGame = function actGame(client, openFn, route) {
          if (!Configs.Login.IsLogin) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));
            return;
          }
          client.connectHub(function (success) {
            App.instance.showLoading(false);
            success ? openFn(route, route) : App.instance.showErrLoading(App.instance.getTextLang('me11'));
          });
          this.actHidden();
        };
        _proto.actGameTaiXiu = function actGameTaiXiu() {
          App.instance.openGame(Configs.InGameIds.TaiXiuMini);
          this.actHidden();
        };
        _proto.actGameTaiXiuMD5 = function actGameTaiXiuMD5() {
          App.instance.openGame(Configs.InGameIds.TaiXiuMD5);
          this.actHidden();
        };
        _proto.actXoSo = function actXoSo() {
          App.instance.openGame(Configs.InGameIds.XoSo);
          this.actHidden();
        };
        _proto.actVQMM = function actVQMM() {
          App.instance.actVQMM();
          this.actHidden();
        };
        _proto.actHiLo = function actHiLo() {
          App.instance.openGame(Configs.InGameIds.HiLo);
          this.actHidden();
        };
        _proto.actPhucSinh = function actPhucSinh() {
          App.instance.openGame(Configs.InGameIds.MiniPhucSinh);
          this.actHidden();
        };
        _proto.actMiniPoker = function actMiniPoker() {
          App.instance.openGame(Configs.InGameIds.MiniPoker);
          this.actHidden();
        };
        _proto.onDestroy = function onDestroy() {
          var _this$systemEvent, _this$systemEvent2;
          (_this$systemEvent = this.systemEvent) == null || _this$systemEvent.off('ShowMoneyAuto', this.showEffMoney, this);
          (_this$systemEvent2 = this.systemEvent) == null || _this$systemEvent2.off('activeBlinkAuto', this.showEffectBlink, this);
        };
        return ButtonMiniGame;
      }(Component), _class3.instance = null, _class3), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "button", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "panel", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "container", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/BuyChipPoker.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Utils.ts', './Config.ts', './CardGameSignalRClient.ts', './App.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, Toggle, Slider, Sprite, log, Component, Utils, Configs, CardGameSignalRClient, App;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
      Toggle = module.Toggle;
      Slider = module.Slider;
      Sprite = module.Sprite;
      log = module.log;
      Component = module.Component;
    }, function (module) {
      Utils = module.Utils;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      CardGameSignalRClient = module.default;
    }, function (module) {
      App = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7;
      cclegacy._RF.push({}, "59f87/gTNxJu62ld2z819Q6", "BuyChipPoker", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var BuyChipPoker = exports('default', (_dec = property(Label), _dec2 = property(Label), _dec3 = property(Label), _dec4 = property(Label), _dec5 = property(Toggle), _dec6 = property(Slider), _dec7 = property(Sprite), ccclass(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(BuyChipPoker, _Component);
        function BuyChipPoker() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "lblMin", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblMax", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblMoneyMe", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblMoneyBuy", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "togAuto", _descriptor5, _assertThisInitialized(_this));
          // @property
          // text: string = 'hello';
          // LIFE-CYCLE CALLBACKS:
          // onLoad () {}
          _initializerDefineProperty(_this, "slider", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "bgSlide", _descriptor7, _assertThisInitialized(_this));
          _this.moneyBuy = 0;
          _this.minBet = 0;
          _this.moneyMin = 0;
          _this.moneyMax = 0;
          _this.CurrencyID = 0;
          _this.isFromLobby = false;
          return _this;
        }
        var _proto = BuyChipPoker.prototype;
        _proto.start = function start() {};
        _proto.showWithData = function showWithData(money, isVip, isFromLobby) {
          this.isFromLobby = isFromLobby;
          this.CurrencyID = isVip;
          this.node.active = true;
          this.moneyMin = money * 20;
          this.moneyMax = money * 200;
          this.minBet = money;
          this.lblMin.string = Utils.formatNumber(this.moneyMin);
          this.lblMax.string = Utils.formatNumber(this.moneyMax);
          this.slider.progress = 0.5;
          this.lblMoneyMe.string = Utils.formatNumber(isVip == 1 ? Configs.Login.GoldBalance : Configs.Login.CoinBalance);
          this.bgSlide.fillRange = this.slider.progress;
          this.updateMoneyBuy();
        };
        _proto.onSliderChanged = function onSliderChanged(event) {
          // Print the slider's percentage (0-100)
          this.bgSlide.fillRange = this.slider.progress;
          this.updateMoneyBuy();
        };
        _proto.updateMoneyBuy = function updateMoneyBuy() {
          this.moneyBuy = this.moneyMin + Math.floor(this.slider.progress * (this.moneyMax - this.moneyMin));
          this.lblMoneyBuy.string = Utils.formatNumber(this.moneyBuy);
        };
        _proto.actCancel = function actCancel() {
          this.node.active = false;
        };
        _proto.actDongY = function actDongY() {
          var thiz = this;
          if (this.isFromLobby) {
            CardGameSignalRClient.getInstance().send('PlayNow', [this.minBet, this.CurrencyID, this.moneyBuy, this.togAuto.isChecked], function (data) {
              log(data);
              if (data == -1) {
                App.instance.ShowAlertDialog(App.instance.getTextLang("st12"));
              } else {
                thiz.node.active = false;
              }
            });
          } else {
            var zzz = [this.minBet, this.CurrencyID, this.moneyBuy, this.togAuto.isChecked];
            log("mua chip" + zzz);
            CardGameSignalRClient.getInstance().send('BuyIn', [this.minBet, this.CurrencyID, this.moneyBuy, this.togAuto.isChecked], function (data) {
              log(data);
              if (data == -1) {
                App.instance.ShowAlertDialog(App.instance.getTextLang("st12"));
              } else {
                thiz.node.active = false;
              }
            });
          }
        };
        _proto.actCong = function actCong() {
          var max = this.slider.progress + 0.2;
          if (max > 1) {
            max = 1;
          }
          this.slider.progress = max;
          this.bgSlide.fillRange = max;
          this.updateMoneyBuy();
        };
        _proto.actTru = function actTru() {
          var max = this.slider.progress - 0.2;
          if (max < 0) {
            max = 0;
          }
          this.slider.progress = max;
          this.bgSlide.fillRange = max;
          this.updateMoneyBuy();
        }

        // update (dt) {}
        ;

        return BuyChipPoker;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "lblMin", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "lblMax", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "lblMoneyMe", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "lblMoneyBuy", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "togAuto", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "slider", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "bgSlide", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/CaiShenSignalRClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Config.ts', './Network.SignalRClient.ts'], function (exports) {
  var _inheritsLoose, cclegacy, Configs, SignalRClient;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      SignalRClient = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "73848nfb8tFbrxGMcz9CjNV", "CaiShenSignalRClient", undefined);
      var CaiShenSignalRClient = exports('default', /*#__PURE__*/function (_SignalRClient) {
        _inheritsLoose(CaiShenSignalRClient, _SignalRClient);
        function CaiShenSignalRClient() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _SignalRClient.call.apply(_SignalRClient, [this].concat(args)) || this;
          _this.onSuccess = void 0;
          return _this;
        }
        CaiShenSignalRClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new CaiShenSignalRClient();
          }
          return this.instance;
        };
        var _proto = CaiShenSignalRClient.prototype;
        _proto.onstart = function onstart() {
          this.onSuccess(true);
        };
        _proto.onError = function onError() {
          this.onSuccess(false);
        };
        _proto.connectHub = function connectHub(onSuccess) {
          this.onSuccess = onSuccess;
          _SignalRClient.prototype.connect.call(this, Configs.App.DOMAIN_CONFIG['GodOfFortuneHubUrl']);
        };
        return CaiShenSignalRClient;
      }(SignalRClient));
      CaiShenSignalRClient.instance = null;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Canvas2Image.ts", ['cc'], function (exports) {
  var cclegacy, _decorator;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
    }],
    execute: function () {
      var _dec, _class;
      cclegacy._RF.push({}, "0515aC/I7xDIYg6mGILl68b", "Canvas2Image", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var Canvas2Image = exports('Canvas2Image', (_dec = ccclass('Canvas2Image'), _dec(_class = /*#__PURE__*/function () {
        function Canvas2Image() {}
        Canvas2Image.getInstance = function getInstance() {
          // check if support sth.
          var $support = function () {
            var canvas = document.createElement('canvas'),
              ctx = canvas.getContext('2d');
            return {
              canvas: !!ctx,
              imageData: !!ctx.getImageData,
              dataURL: !!canvas.toDataURL,
              btoa: !!window.btoa
            };
          }();
          var downloadMime = 'image/octet-stream';
          function scaleCanvas(canvas, width, height) {
            var w = canvas.width,
              h = canvas.height;
            if (width == undefined) {
              width = w;
            }
            if (height == undefined) {
              height = h;
            }
            var retCanvas = document.createElement('canvas');
            var retCtx = retCanvas.getContext('2d');
            retCanvas.width = width;
            retCanvas.height = height;
            retCtx.drawImage(canvas, 0, 0, w, h, 0, 0, width, height);
            return retCanvas;
          }
          function getDataURL(canvas, type, width, height) {
            canvas = scaleCanvas(canvas, width, height);
            return canvas.toDataURL(type);
          }
          function saveFile(strData, type, fileName) {
            // document.location.href = strData;
            fileDownload(strData, type, fileName);
          }
          function genImage(strData) {
            var img = document.createElement('img');
            img.src = strData;
            return img;
          }
          function fixType(type) {
            type = type.toLowerCase().replace(/jpg/i, 'jpeg');
            var r = type.match(/png|jpeg|bmp|gif/)[0];
            return 'image/' + r;
          }
          function encodeData(data) {
            if (!window.btoa) {
              throw 'btoa undefined';
            }
            var str = '';
            if (typeof data == 'string') {
              str = data;
            } else {
              for (var i = 0; i < data.length; i++) {
                str += String.fromCharCode(data[i]);
              }
            }
            return btoa(str);
          }
          function getImageData(canvas) {
            var w = canvas.width,
              h = canvas.height;
            return canvas.getContext('2d').getImageData(0, 0, w, h);
          }
          function makeURI(strData, type) {
            return 'data:' + type + ';base64,' + strData;
          }

          /**
           * create bitmap image
           * 按照规则生成图片响应头和响应体
           */
          var genBitmapImage = function genBitmapImage(oData) {
            //
            // BITMAPFILEHEADER: http://msdn.microsoft.com/en-us/library/windows/desktop/dd183374(v=vs.85).aspx
            // BITMAPINFOHEADER: http://msdn.microsoft.com/en-us/library/dd183376.aspx
            //

            var biWidth = oData.width;
            var biHeight = oData.height;
            var biSizeImage = biWidth * biHeight * 3;
            var bfSize = biSizeImage + 54; // total header size = 54 bytes

            //
            //  typedef struct tagBITMAPFILEHEADER {
            //  	WORD bfType;
            //  	DWORD bfSize;
            //  	WORD bfReserved1;
            //  	WORD bfReserved2;
            //  	DWORD bfOffBits;
            //  } BITMAPFILEHEADER;
            //
            var BITMAPFILEHEADER = [
            // WORD bfType -- The file type signature; must be "BM"
            0x42, 0x4D,
            // DWORD bfSize -- The size, in bytes, of the bitmap file
            bfSize & 0xff, bfSize >> 8 & 0xff, bfSize >> 16 & 0xff, bfSize >> 24 & 0xff,
            // WORD bfReserved1 -- Reserved; must be zero
            0, 0,
            // WORD bfReserved2 -- Reserved; must be zero
            0, 0,
            // DWORD bfOffBits -- The offset, in bytes, from the beginning of the BITMAPFILEHEADER structure to the bitmap bits.
            54, 0, 0, 0];

            //
            //  typedef struct tagBITMAPINFOHEADER {
            //  	DWORD biSize;
            //  	LONG  biWidth;
            //  	LONG  biHeight;
            //  	WORD  biPlanes;
            //  	WORD  biBitCount;
            //  	DWORD biCompression;
            //  	DWORD biSizeImage;
            //  	LONG  biXPelsPerMeter;
            //  	LONG  biYPelsPerMeter;
            //  	DWORD biClrUsed;
            //  	DWORD biClrImportant;
            //  } BITMAPINFOHEADER, *PBITMAPINFOHEADER;
            //
            var BITMAPINFOHEADER = [
            // DWORD biSize -- The number of bytes required by the structure
            40, 0, 0, 0,
            // LONG biWidth -- The width of the bitmap, in pixels
            biWidth & 0xff, biWidth >> 8 & 0xff, biWidth >> 16 & 0xff, biWidth >> 24 & 0xff,
            // LONG biHeight -- The height of the bitmap, in pixels
            biHeight & 0xff, biHeight >> 8 & 0xff, biHeight >> 16 & 0xff, biHeight >> 24 & 0xff,
            // WORD biPlanes -- The number of planes for the target device. This value must be set to 1
            1, 0,
            // WORD biBitCount -- The number of bits-per-pixel, 24 bits-per-pixel -- the bitmap
            // has a maximum of 2^24 colors (16777216, Truecolor)
            24, 0,
            // DWORD biCompression -- The type of compression, BI_RGB (code 0) -- uncompressed
            0, 0, 0, 0,
            // DWORD biSizeImage -- The size, in bytes, of the image. This may be set to zero for BI_RGB bitmaps
            biSizeImage & 0xff, biSizeImage >> 8 & 0xff, biSizeImage >> 16 & 0xff, biSizeImage >> 24 & 0xff,
            // LONG biXPelsPerMeter, unused
            0, 0, 0, 0,
            // LONG biYPelsPerMeter, unused
            0, 0, 0, 0,
            // DWORD biClrUsed, the number of color indexes of palette, unused
            0, 0, 0, 0,
            // DWORD biClrImportant, unused
            0, 0, 0, 0];
            var iPadding = (4 - biWidth * 3 % 4) % 4;
            var aImgData = oData.data;
            var strPixelData = '';
            var biWidth4 = biWidth << 2;
            var y = biHeight;
            var fromCharCode = String.fromCharCode;
            do {
              var iOffsetY = biWidth4 * (y - 1);
              var strPixelRow = '';
              for (var x = 0; x < biWidth; x++) {
                var iOffsetX = x << 2;
                strPixelRow += fromCharCode(aImgData[iOffsetY + iOffsetX + 2]) + fromCharCode(aImgData[iOffsetY + iOffsetX + 1]) + fromCharCode(aImgData[iOffsetY + iOffsetX]);
              }
              for (var c = 0; c < iPadding; c++) {
                strPixelRow += String.fromCharCode(0);
              }
              strPixelData += strPixelRow;
            } while (--y);
            var strEncoded = encodeData(BITMAPFILEHEADER.concat(BITMAPINFOHEADER)) + encodeData(strPixelData);
            return strEncoded;
          };

          /**
           * saveAsImage
           * @param canvasElement
           * @param {String} image type
           * @param {Number} [optional] png width
           * @param {Number} [optional] png height
           */
          var saveAsImage = function saveAsImage(canvas, width, height, type, fileName) {
            /**
             * canvas.toBlob 的第三个参数。当请求图片格式为image/jpeg或者image/webp时用来指定图片展示质量。
             * 如果这个参数的值不在指定类型与范围之内，则使用默认值，其余参数将被忽略。
             * 此处暂时默认设置为 1
             */
            var quality = 1.0;
            if ($support.canvas && $support.dataURL) {
              if (typeof canvas == "string") {
                canvas = document.getElementById(canvas);
              }
              if (type == undefined) {
                type = 'png';
              }
              type = fixType(type);
              if (/bmp/.test(type)) {
                var data = getImageData(scaleCanvas(canvas, width, height));
                var strData = genBitmapImage(data);
                saveFile(makeURI(strData, downloadMime), type.replace("image/", ""), fileName);
              } else {
                canvas = scaleCanvas(canvas, width, height);
                // 如果
                canvas.toBlob(function (blob) {
                  var url = URL.createObjectURL(blob);
                  saveFile(url, type.replace("image/", ""), fileName);
                }, type, quality);
              }
            }
          };
          var convertToImage = function convertToImage(canvas, width, height, type) {
            if ($support.canvas && $support.dataURL) {
              if (typeof canvas == "string") {
                canvas = document.getElementById(canvas);
              }
              if (type == undefined) {
                type = 'png';
              }
              type = fixType(type);
              if (/bmp/.test(type)) {
                var data = getImageData(scaleCanvas(canvas, width, height));
                var strData = genBitmapImage(data);
                return genImage(makeURI(strData, 'image/bmp'));
              } else {
                var strData = getDataURL(canvas, type, width, height);
                return genImage(strData);
              }
            }
          };
          var fileDownload = function fileDownload(downloadUrl, type, fileName) {
            var aLink = document.createElement('a');
            aLink.style.display = 'none';
            aLink.href = downloadUrl;
            aLink.download = fileName + "." + type;
            // 触发点击-然后移除
            document.body.appendChild(aLink);
            aLink.click();
            document.body.removeChild(aLink);
          };
          return {
            saveAsImage: saveAsImage,
            saveAsPNG: function saveAsPNG(canvas, width, height) {
              return saveAsImage(canvas, width, height, 'png', 'defaultpng');
            },
            saveAsJPEG: function saveAsJPEG(canvas, width, height) {
              return saveAsImage(canvas, width, height, 'jpeg', 'defaultjpg');
            },
            saveAsGIF: function saveAsGIF(canvas, width, height) {
              return saveAsImage(canvas, width, height, 'gif', 'defaultgif');
            },
            saveAsBMP: function saveAsBMP(canvas, width, height) {
              return saveAsImage(canvas, width, height, 'bmp', 'defaultbmp');
            },
            convertToImage: convertToImage,
            convertToPNG: function convertToPNG(canvas, width, height) {
              return convertToImage(canvas, width, height, 'png');
            },
            convertToJPEG: function convertToJPEG(canvas, width, height) {
              return convertToImage(canvas, width, height, 'jpeg');
            },
            convertToGIF: function convertToGIF(canvas, width, height) {
              return convertToImage(canvas, width, height, 'gif');
            },
            convertToBMP: function convertToBMP(canvas, width, height) {
              return convertToImage(canvas, width, height, 'bmp');
            }
          };
        };
        return Canvas2Image;
      }()) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/CanvasResizer.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Canvas, Size, view, ResolutionPolicy, size, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Canvas = module.Canvas;
      Size = module.Size;
      view = module.view;
      ResolutionPolicy = module.ResolutionPolicy;
      size = module.size;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor;
      cclegacy._RF.push({}, "aa068GO48lDfaOcgSDUt9s8", "CanvasResizer", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property,
        requireComponent = _decorator.requireComponent;
      var CanvasResizer = exports('default', (_dec = ccclass('CanvasResizer'), _dec2 = requireComponent(Canvas), _dec3 = property({
        type: Size
      }), _dec(_class = _dec2(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(CanvasResizer, _Component);
        function CanvasResizer() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "designResolution", _descriptor, _assertThisInitialized(_this));
          _this.lastWidth = 0;
          _this.lastHeight = 0;
          _this.canvas = null;
          return _this;
        }
        var _proto = CanvasResizer.prototype;
        _proto.onLoad = function onLoad() {
          this.canvas = this.getComponent(Canvas);
          this.updateCanvas();
          var aspectRatio = view.getFrameSize().width / view.getFrameSize().height;
          if (aspectRatio >= 16 / 9) {
            view.setDesignResolutionSize(this.designResolution.width, this.designResolution.height, ResolutionPolicy.FIXED_HEIGHT);
          } else {
            view.setDesignResolutionSize(this.designResolution.width, this.designResolution.height, ResolutionPolicy.FIXED_WIDTH);
          }
        };
        _proto.update = function update() {
          this.updateCanvas();
        };
        _proto.updateCanvas = function updateCanvas() {
          var frameSize = view.getFrameSize();
          if (this.lastWidth !== frameSize.width || this.lastHeight !== frameSize.height) {
            this.lastWidth = frameSize.width;
            this.lastHeight = frameSize.height;
            var newDesignSize;
            var targetRatio = this.designResolution.width / this.designResolution.height;
            var actualRatio = frameSize.width / frameSize.height;
            if (targetRatio > actualRatio) {
              newDesignSize = size(this.designResolution.width, this.designResolution.width * (frameSize.height / frameSize.width));
            } else {
              newDesignSize = size(this.designResolution.height * (frameSize.width / frameSize.height), this.designResolution.height);
            }
            view.setDesignResolutionSize(newDesignSize.width, newDesignSize.height, view.getResolutionPolicy());
          }
        };
        return CanvasResizer;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "designResolution", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return new Size(1920, 1080);
        }
      }), _class2)) || _class) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Capcha.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Sprite, CCBoolean, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Sprite = module.Sprite;
      CCBoolean = module.CCBoolean;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2;
      cclegacy._RF.push({}, "a9f46Fln8xGS5t19nmK1XR3", "Capcha", undefined);

      // import GateRequest, { STATE_REQUEST } from "../../lib/GateRequest";
      // import GameScene from "../../scene/GameScene";

      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var Capcha = exports('default', (_dec = ccclass("Capcha"), _dec2 = property(Sprite), _dec3 = property(CCBoolean), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(Capcha, _Component);
        function Capcha() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "capcha", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "isTelco", _descriptor2, _assertThisInitialized(_this));
          _this.capchaId = "";
          _this.mUrl = "";
          return _this;
        }
        var _proto = Capcha.prototype;
        _proto.start = function start() {
          this.refreshCapcha();
        };
        _proto.refreshCapcha = function refreshCapcha() {
          var url = "";
          if (this.isTelco) url = "";
          this.sendGetCaptcha(url);
        };
        _proto.getCapChaId = function getCapChaId() {
          return this.capchaId;
        };
        _proto.resetCapcha = function resetCapcha() {
          this.capcha.node.active = false;
        };
        _proto.sendGetCaptcha = function sendGetCaptcha(pUrl) {
          this.mUrl = pUrl;

          // GateRequest.get(
          //   pUrl,
          //   function (status, response) {
          //     if (status == STATE_REQUEST.SUCCESS && response) {
          //       let userConfig: JSON = JSON.parse(response);
          //       self.capchaId = userConfig[0];
          //       let dataImg = userConfig[1];
          //       dataImg = dataImg.replace(/\r\n/g, "");
          //       self.loadImgBinary(dataImg);
          //     }
          //   },
          //   GameScene.getInstance().mUserInfo.cookie
          // );
        };

        _proto.loadImgBinary = function loadImgBinary(pBinary) {
          var base64Data = "data:image/png;base64," + pBinary; //btoa(String.fromCharCode.apply(null, pBinary));
          var imgElement = new Image();
          imgElement.width = 130;
          imgElement.height = 60;
          imgElement.onload = function () {
            // let sprite = new Texture2D();
            // sprite.in
            // sprite.initWithElement(imgElement);
            // sprite.handleLoadedTexture();
            // let spriteFrame = new SpriteFrame(sprite);
            // self.capcha.node.active = true;
            // self.capcha.spriteFrame = spriteFrame;
          };
          imgElement.src = base64Data;
        };
        return Capcha;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "capcha", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "isTelco", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return false;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/CardGameSignalRClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Network.SignalRClient.ts', './Config.ts'], function (exports) {
  var _inheritsLoose, cclegacy, SignalRClient, Configs;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      SignalRClient = module.default;
    }, function (module) {
      Configs = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "13267czNC5EhIhqtMgnFnBx", "CardGameSignalRClient", undefined);
      var CardGameSignalRClient = exports('default', /*#__PURE__*/function (_SignalRClient) {
        _inheritsLoose(CardGameSignalRClient, _SignalRClient);
        function CardGameSignalRClient() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _SignalRClient.call.apply(_SignalRClient, [this].concat(args)) || this;
          _this.onSuccess = void 0;
          return _this;
        }
        CardGameSignalRClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new CardGameSignalRClient();
          }
          return this.instance;
        };
        var _proto = CardGameSignalRClient.prototype;
        _proto.onstart = function onstart() {
          this.onSuccess(true);
        };
        _proto.onError = function onError() {
          this.onSuccess(false);
        };
        _proto.connectHub = function connectHub(gameId, onSuccess) {
          if (this.connection && this.isConnected()) {
            this.close();
          }
          this.onSuccess = onSuccess;
          var host = "";
          switch (gameId) {
            case Configs.InGameIds.TLMN:
              host = Configs.App.DOMAIN_CONFIG['TlmnHubUrl'];
              break;
            case Configs.InGameIds.TLMNSolo:
              host = Configs.App.DOMAIN_CONFIG['TlmnSoloHubUrl'];
              break;
            case Configs.InGameIds.SamLoc:
              host = Configs.App.DOMAIN_CONFIG['SamLocHubUrl'];
              break;
            case Configs.InGameIds.SamLocSolo:
              host = Configs.App.DOMAIN_CONFIG['SamLocSoloHubUrl'];
              break;
            case Configs.InGameIds.BaCay:
              host = Configs.App.DOMAIN_CONFIG['BaCayHubUrl'];
              break;
            case Configs.InGameIds.Poker:
              host = Configs.App.DOMAIN_CONFIG['PokerHubUrl'];
              break;
            case Configs.InGameIds.MauBinh:
              host = Configs.App.DOMAIN_CONFIG['MauBinhHubUrl'];
              break;
            case Configs.InGameIds.Catte:
              host = Configs.App.DOMAIN_CONFIG['CatteHubUrl'];
              break;
            default:
              throw new Error("Unknown game ID: " + gameId);
          }
          _SignalRClient.prototype.connect.call(this, host);
        };
        return CardGameSignalRClient;
      }(SignalRClient));
      CardGameSignalRClient.instance = null;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/CardList.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './MCard.ts', './TLMNUtility.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Enum, v3, UITransform, Vec2, game, Game, Sprite, color, log, instantiate, size, Vec3, tween, Tween, Component, Card, TLMNUtility;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Enum = module.Enum;
      v3 = module.v3;
      UITransform = module.UITransform;
      Vec2 = module.Vec2;
      game = module.game;
      Game = module.Game;
      Sprite = module.Sprite;
      color = module.color;
      log = module.log;
      instantiate = module.instantiate;
      size = module.size;
      Vec3 = module.Vec3;
      tween = module.tween;
      Tween = module.Tween;
      Component = module.Component;
    }, function (module) {
      Card = module.default;
    }, function (module) {
      TLMNUtility = module.TLMNUtility;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6;
      cclegacy._RF.push({}, "cd61a/VUgRKLbZUbK6jXGFS", "CardList", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;

      // const AnchorType = Enum({
      //     LEFT: 0,
      //     CENTER: 1,
      //     RIGTH: 2
      // });
      var AnchorType = /*#__PURE__*/function (AnchorType) {
        AnchorType[AnchorType["LEFT"] = 0] = "LEFT";
        AnchorType[AnchorType["CENTER"] = 1] = "CENTER";
        AnchorType[AnchorType["RIGTH"] = 2] = "RIGTH";
        return AnchorType;
      }(AnchorType || {});
      var DirectionType = /*#__PURE__*/function (DirectionType) {
        DirectionType[DirectionType["HORIZONTAL"] = 0] = "HORIZONTAL";
        DirectionType[DirectionType["VERTICAL"] = 1] = "VERTICAL";
        return DirectionType;
      }(DirectionType || {});
      var PlayviewType = /*#__PURE__*/function (PlayviewType) {
        PlayviewType[PlayviewType["ME"] = 0] = "ME";
        PlayviewType[PlayviewType["OTHER"] = 1] = "OTHER";
        return PlayviewType;
      }(PlayviewType || {});
      var CartList = exports('default', (_dec = property(Node), _dec2 = property(Node), _dec3 = property({
        type: Enum(AnchorType)
      }), _dec4 = property({
        type: Enum(DirectionType)
      }), _dec5 = property({
        type: Enum(PlayviewType)
      }), ccclass(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(CartList, _Component);
        function CartList() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _this.deckPoint = v3(0, 0, 0);
          _this.cardList = [];
          _initializerDefineProperty(_this, "canTouch", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "cardClone", _descriptor2, _assertThisInitialized(_this));
          _this.cardFrameBack = void 0;
          _this.width = void 0;
          _this.height = void 0;
          _initializerDefineProperty(_this, "cardFrames", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "anchorType", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "direction", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "playeviewType", _descriptor6, _assertThisInitialized(_this));
          _this.isbackground = false;
          _this.tlmnUtil = new TLMNUtility();
          _this.isTypeSortRank = true;
          _this.arrCardOld = [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0, 1, 2, 3, 4, 5, 6, 7];
          return _this;
        }
        var _proto = CartList.prototype;
        _proto.init = function init(pointDec, cardCl, framCardBack, cardFrame) {
          this.cardFrameBack = framCardBack;
          this.cardClone = cardCl;
          var worldPos = pointDec.getComponent(UITransform).convertToWorldSpaceAR(Vec2.ZERO);
          this.deckPoint = this.node.getComponent(UITransform).convertToNodeSpaceAR(worldPos);
          this.cardFrames = cardFrame;
        };
        _proto.start = function start() {
          // this.linkCard = App.instance.linkCard;
          this.width = this.node.getComponent(UITransform).width;
          this.height = this.node.getComponent(UITransform).height;
          game.on(Game.EVENT_HIDE, this.onGamePause, this);
          game.on(Game.EVENT_SHOW, this.onGameResume, this);
        };
        _proto.onGamePause = function onGamePause() {
          this.isbackground = true;
          console.log("Game is paused, moving to background");
          // Xử lý khi game bị đưa xuống nền
        };

        _proto.onGameResume = function onGameResume() {
          this.isbackground = false;
          console.log("Game is resumed, coming back from background");
          // Xử lý khi game quay lại từ nền
        };

        _proto.update = function update(deltaTime) {};
        _proto.removeAll = function removeAll() {
          this.cardList = [];
          this.node.removeAllChildren();
        }

        // addCard(cardNode: any) {
        //     // if (!this.cardSize) {
        //     //     this.cardSize = size(card.touchRect.width, card.touchRect.height);
        //     //     if (this.cardSize.height > this.getContentSize().height) {
        //     //         var ratio = this.getContentSize().height / this.cardSize.height;
        //     //         this.cardSize.width *= ratio;
        //     //         this.cardSize.height *= ratio;
        //     //     }
        //     // }
        //     // if (card.touchRect.height > this.cardSize.height) {
        //     //     card.setScale(this.cardSize.height / card.touchRect.height);
        //     // }
        //     // card.cardIndex = this.cardList.length;
        //     //card.origin = p(0, 0);
        //      card.canTouch = false;
        //     cardNode.parent =  this.node;
        //    var card = cardNode.getComponent(Card);
        //    card.initCard("",null,this);
        //     this.cardList.push(card);
        // }
        ;

        _proto.onSelected = function onSelected(card, isSelected) {};
        _proto.removeCard = function removeCard(cards) {
          var arrCard = [];
          for (var i = 0; i < cards.length; i++) {
            var rank = cards[i].rank;
            var suit = cards[i].suit;
            for (var j = 0; j < this.cardList.length; j++) {
              var card = this.cardList[j];
              if (card.rank == rank && card.suit == suit) {
                // var p = this.node.getComponent(UITransform).convertToWorldSpaceAR(card.node.getPosition());
                // card.setPosition(p);
                card.canTouch = false;
                // card.node.retain();
                // card.node.removeFromParent(true);
                arrCard.push(card);
                this.cardList.splice(j, 1);
                break;
              }
            }
          }
          return arrCard;
        };
        _proto.removeCardWithID = function removeCardWithID(ids) {
          var arrCard = [];
          for (var i = 0; i < ids.length; i++) {
            for (var j = 0; j < this.cardList.length; j++) {
              var card = this.cardList[j];
              if (card.idCard == ids[i]) {
                // var p = this.node.getComponent(UITransform).convertToWorldSpaceAR(card.node.getPosition());
                // card.setPosition(p);
                card.canTouch = false;
                // card.node.retain();
                // card.node.removeFromParent(true);
                arrCard.push(card);
                this.cardList.splice(j, 1);
              }
            }
          }
          this.reOrder();
          return arrCard;
        };
        _proto.getCardSelected = function getCardSelected() {
          var cardSelected = [];
          for (var i = 0; i < this.cardList.length; i++) {
            if (this.cardList[i].isSelect) {
              cardSelected.push(this.cardList[i]);
            }
          }
          return cardSelected;
        };
        _proto.getCardsByArray = function getCardsByArray(ids) {
          var cardSelected = [];
          for (var j = 0; j < ids.length; j++) {
            for (var i = 0; i < this.cardList.length; i++) {
              if (this.cardList[i].idCard == ids[j]) {
                cardSelected.push(this.cardList[i]);
                break;
              }
            }
          }
          return cardSelected;
        };
        _proto.swapCardLeft = function swapCardLeft(index) {
          if (index > 0) {
            var cardMove = this.cardList[index];
            var cardSwap = this.cardList[index - 1];
            this.swapCard(cardMove, cardSwap);
          }
        };
        _proto.swapCardRight = function swapCardRight(index) {
          if (index < this.cardList.length - 1) {
            var cardMove = this.cardList[index];
            var cardSwap = this.cardList[index + 1];
            this.swapCard(cardMove, cardSwap);
          }
        };
        _proto.swapCard = function swapCard(card1, card2) {
          var _origin = card1.origin;
          var _cardIndex = card1.cardIndex;
          card1.origin = card2.origin;
          card1.cardIndex = card2.cardIndex;
          card2.origin = _origin;
          card2.cardIndex = _cardIndex;
          card2.moveToOriginPosition();
          card1.moveToOriginPosition();
          this.cardList[card1.cardIndex] = card1;
          this.cardList[card2.cardIndex] = card2;
        };
        _proto.reOrder = function reOrder() {
          var _this2 = this;
          if (this.cardList.length < 1) {
            return;
          }
          var tranfromCard = this.cardList[0].node;
          var cardWith = this.height * tranfromCard.getComponent(UITransform).width / tranfromCard.getComponent(UITransform).height;
          var distanceX = (this.node.getComponent(UITransform).width - cardWith) / (this.cardList.length - 1);
          if (distanceX > cardWith) {
            distanceX = cardWith;
          }
          distanceX = 2 / 3 * cardWith;
          var _loop = function _loop() {
              var element = _this2.cardList[index];
              // element.cardDistance = distanceX;

              Tween.stopAllByTarget(element.node);
              posOrigin = new Vec3(index * distanceX + cardWith / 2, _this2.height / 2, 0);
              element.cardIndex = index;
              element.origin = posOrigin;
              tween(element.node).to(0.2, {
                position: element.origin
              }).call(function () {
                element.node.getComponent(Card).isSelect = false;
                element.node.setSiblingIndex(element.cardIndex);
              }).start();
            },
            posOrigin;
          for (var index = 0; index < this.cardList.length; index++) {
            _loop();
          }
        };
        _proto.reOrderSibingIndex = function reOrderSibingIndex() {
          for (var index = 0; index < this.cardList.length; index++) {
            var element = this.cardList[index];
            element.node.setSiblingIndex(element.cardIndex);
          }
        };
        _proto.onFinishDealCard = function onFinishDealCard() {};
        _proto.deactiveCard = function deactiveCard() {
          this.cardList.forEach(function (element) {
            //  log("mo card");
            element.node.getComponent(Sprite).color = color(127, 127, 127, 255);
          });
        };
        _proto.onStartDealOneCard = function onStartDealOneCard() {};
        _proto.dealCards = function dealCards(cards, animation) {
          var _this3 = this;
          log("dealCards");
          var thiz = this;
          var cardClone = this.cardClone;
          var tranfromCard = cardClone;
          var cardWith = this.height * tranfromCard.getComponent(UITransform).width / tranfromCard.getComponent(UITransform).height;
          this.removeAll();
          var distanceX = (this.node.getComponent(UITransform).width - cardWith) / (cards.length - 1);
          if (distanceX > cardWith) {
            distanceX = cardWith;
          }
          distanceX = 2 / 3 * cardWith;
          var y = thiz.height / 2;
          for (var i = 0; i < cards.length; i++) {
            (function () {
              var inew = i;
              var cardNode = instantiate(cardClone);
              var card = cardNode.getComponent(Card);
              thiz.cardList.push(card);
              cardNode.parent = thiz.node;
              cardNode.setPosition(thiz.deckPoint);
              card.cardDistance = distanceX;
              cardNode.getComponent(UITransform).setContentSize(size(cardWith, thiz.height));
              var posOrigin = new Vec3(inew * distanceX + cardWith / 2, y, 0);
              card.initCard(thiz.getCardWithId(cards[inew]), cards[inew], thiz, posOrigin, animation ? false : _this3.canTouch, inew);
              if (animation && !_this3.isbackground) {
                card.sprite.spriteFrame = thiz.cardFrameBack;
                card.node.setScale(v3(-1, 1, 1));
                var t1 = tween(card.node).delay(0.02 * inew).call(function () {
                  card.node.active = true;
                  thiz.onStartDealOneCard();
                });
                var t2 = tween(card.node).to(0.25, {
                  position: posOrigin
                });
                var t3 = tween(card.node).to(0.1, {
                  // Bind position
                  scale: new Vec3(0, card.node.scale.y, card.node.scale.z)
                }).call(function () {
                  setTimeout(function () {
                    card.updateFrameCard();
                  }, 0);
                });
                var t4 = tween(card.node).delay(0.1).to(0.1, {
                  // Bind position
                  scale: new Vec3(1, card.node.scale.y, card.node.scale.z)
                }).call(function () {
                  card.canTouch = thiz.canTouch;
                  if (inew == cards.length - 1) {
                    thiz.onFinishDealCard();
                  }
                });
                tween(card.node).sequence(t1, t2, t3, t4).start();
              } else {
                card.node.active = true;
                card.updateFrameCard();
                card.canTouch = thiz.canTouch;
                card.node.setPosition(posOrigin);
                log("finihs delcar " + inew + "=---" + (cards.length - 1));
                if (inew == cards.length - 1) {
                  log("finihs delcar");
                  thiz.onFinishDealCard();
                }
              }
            })();
          }
        };
        _proto.reArrangeCards = function reArrangeCards(sortFunc) {
          if (this.isTypeSortRank) {
            if (!sortFunc) {
              this.cardList.sort(function (a, b) {
                return a.rank - b.rank;
              });
            } else {
              this.cardList.sort(sortFunc);
            }
            this.reOrder();
          } else {
            var cardNew = [];
            this.cardList.forEach(function (element) {
              cardNew.push({
                rank: element.rank,
                suit: element.suit
              });
            });
            var cardOrder = this.tlmnUtil.orderCard(cardNew);

            // this.cardList = this.tlmnUtil.orderCard(this.cardList);

            this.cardList.sort(function (a, b) {
              return cardOrder.findIndex(function (i) {
                return a.rank == i.rank && a.suit == i.suit;
              }) - cardOrder.findIndex(function (i) {
                return b.rank == i.rank && b.suit == i.suit;
              });
            });
            // if (!sortFunc) {
            //     this.cardList.sort(function (a, b) {
            //         return a.rank - b.rank;
            //     });
            // } else {
            //     this.cardList.sort(sortFunc);
            // }
            this.reOrder();
          }
          this.isTypeSortRank = !this.isTypeSortRank;
        };
        _proto.getCardWithId = function getCardWithId(cardIdOld) {
          var cardId = this.arrCardOld[cardIdOld];
          var rank = Math.floor(cardId / 4) + 1;
          var suit = cardId % 4;
          return {
            rank: rank,
            suit: suit
          };
        };
        _proto.getArrCardObject = function getArrCardObject(arrID) {
          var _this4 = this;
          var arr = [];
          arrID.forEach(function (element) {
            arr.push(_this4.getCardWithId(element));
          });
          return arr;
        };
        _proto.addCardsNode = function addCardsNode(cards, animation) {
          if (cards == undefined) {
            return;
          }
          console.log("addCardsNode");
          var thiz = this;
          var tranfromCard = cards[0].node;
          var cardWith = 84;
          var cardHeight = 120;
          this.removeAll();
          var distanceX = (this.node.getComponent(UITransform).width - cardWith) / (cards.length - 1);
          if (distanceX > cardWith) {
            distanceX = cardWith;
          }
          var distanceY = 0.33 * cardHeight;
          // var yyyy = (this.node.getComponent(UITransform).contentSize.height - 2/3*cardHeight  ) / (cards.length-1);
          // if (distanceY > yyyy) {
          //     distanceY = yyyy;
          // }

          if (this.playeviewType == PlayviewType.OTHER) {
            distanceX = 1 / 3 * cardWith;
          }
          var y = thiz.height / 2;
          for (var i = 0; i < cards.length; i++) {
            // this.reorderChild(this.cardList[i], i);

            (function () {
              var inew = i;
              var card = cards[inew];
              var cardNode = card.node;
              thiz.cardList.push(card);
              var posWoar = card.node.getParent().getComponent(UITransform).convertToWorldSpaceAR(card.node.getPosition());
              console.log("posWourld" + posWoar);
              var pold = thiz.node.getComponent(UITransform).convertToNodeSpaceAR(posWoar);
              console.log("posLocasl" + pold);
              cardNode.parent = thiz.node;
              cardNode.setPosition(pold);
              card.cardDistance = distanceX;
              cardNode.setContentSize(size(cardWith, cardHeight));
              var posOrigin = new Vec3(inew * distanceX + cardWith / 2, y, 0);
              if (thiz.anchorType == AnchorType.CENTER) {
                posOrigin = v3(inew * distanceX + cardWith / 2 - (distanceX * cards.length + 1 / 3 * cardWith) / 2, posOrigin.y, 0);
              }
              if (thiz.direction == DirectionType.VERTICAL) {
                posOrigin = new Vec3(thiz.width / 2, inew * distanceY, 0);
                cardNode.setContentSize(size(thiz.width, cardHeight));
                if (thiz.anchorType == AnchorType.CENTER) {
                  posOrigin = new Vec3(thiz.width / 2, -inew * distanceY - cardHeight / 2 + (distanceY * cards.length + (1 - 0.33) * cardHeight) / 2, 0);
                }
              }
              if (animation && !thiz.isbackground) {
                Tween.stopAllByTarget(card.node);
                tween(card.node).to(0.25, {
                  position: posOrigin
                }).start();
              } else {
                card.node.setPosition(posOrigin);
              }
            })();
          }
        };
        _proto.addCards = function addCards(cards, isReconnectt, nodeFrom) {
          var _this5 = this;
          var thiz = this;
          var animation = false;
          if (nodeFrom != null) {
            animation = true;
          }
          if (isReconnectt) {
            animation = false;
          }
          var cardClone = this.cardClone;
          var cardWith = 84;
          var cardHeight = 120;
          // var cardHeight = this.width * tranfromCard.contentSize.height /tranfromCard.contentSize.width;
          this.removeAll();
          var distanceX = (this.node.getComponent(UITransform).width - cardWith) / (cards.length - 1);
          if (distanceX > cardWith) {
            distanceX = cardWith;
          }
          var distanceY = 0.33 * cardHeight;
          // var yyyy = (this.node.getComponent(UITransform).contentSize.height - 2/3*cardHeight  ) / (cards.length-1);
          // if (distanceY > yyyy) {
          //     distanceY = yyyy;
          // }

          if (this.playeviewType == PlayviewType.OTHER) {
            distanceX = 1 / 3 * cardWith;
          }
          var y = thiz.height / 2;
          var startX = 0 - cardWith / 2;
          for (var i = 0; i < cards.length; i++) {
            // this.reorderChild(this.cardList[i], i);

            (function () {
              var inew = i;
              var cardNode = instantiate(cardClone);
              var card = cardNode.getComponent(Card);
              thiz.cardList.push(card);
              cardNode.parent = thiz.node;
              card.cardDistance = distanceX;
              cardNode.getComponent(UITransform).setContentSize(size(cardWith, cardHeight));
              var posOrigin = new Vec3(inew * distanceX + cardWith / 2, y, 0);
              if (thiz.anchorType == AnchorType.CENTER) {
                posOrigin = v3(inew * distanceX + cardWith / 2 - (distanceX * cards.length + 1 / 3 * cardWith) / 2, posOrigin.y, 0);
              }
              if (thiz.anchorType == AnchorType.RIGTH) {
                var posX = startX - i * distanceX;
                posOrigin = v3(posX, y, 0);
                // posOrigin = v3( -inew * distanceX + cardWith / 2 ,y,0);
                cardNode.setSiblingIndex(-(inew + 1));
              }
              if (thiz.direction == DirectionType.VERTICAL) {
                posOrigin = new Vec3(thiz.width / 2, inew * distanceY, 0);
                cardNode.getComponent(UITransform).setContentSize(size(thiz.width, cardHeight));
                if (thiz.anchorType == AnchorType.CENTER) {
                  posOrigin = new Vec3(thiz.width / 2, -inew * distanceY - cardHeight / 2 + (distanceY * cards.length + (1 - 0.33) * cardHeight) / 2, 0);
                }
              }
              card.initCard(thiz.getCardWithId(cards[inew]), cards[inew], thiz, posOrigin, _this5.canTouch, inew);
              card.updateFrameCard();
              card.node.active = true;
              if (animation) {
                var posWoar = nodeFrom.getParent().getComponent(UITransform).convertToWorldSpaceAR(nodeFrom.getPosition());
                var pold = thiz.node.getComponent(UITransform).convertToNodeSpaceAR(posWoar);
                cardNode.setPosition(pold);
                Tween.stopAllByTarget(card.node);
                tween(card.node).to(0.25, {
                  position: posOrigin
                }).start();
              } else {
                card.node.setPosition(posOrigin);
              }
              card.node.setPosition(posOrigin);
            })();
          }
        }

        // update (dt) {}
        ;

        return CartList;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "canTouch", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return true;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "cardClone", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "cardFrames", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "anchorType", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return AnchorType.CENTER;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "direction", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return DirectionType.HORIZONTAL;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "playeviewType", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return PlayviewType.OTHER;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/CardOnTable.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './CardList.ts'], function (exports) {
  var _inheritsLoose, cclegacy, CartList;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      CartList = module.default;
    }],
    execute: function () {
      var _class;
      cclegacy._RF.push({}, "f8273cQ5yxAf5qKrUDRcZb0", "CardOnTable", undefined);
      var _cc$_decorator = cc._decorator,
        ccclass = _cc$_decorator.ccclass,
        property = _cc$_decorator.property;
      var CardOnTable = exports('default', ccclass(_class = /*#__PURE__*/function (_CartList) {
        _inheritsLoose(CardOnTable, _CartList);
        function CardOnTable() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _CartList.call.apply(_CartList, [this].concat(args)) || this;
          _this.cardList = [];
          _this.arrr = null;
          _this.isReconnectt = void 0;
          _this.isNode = void 0;
          _this.fromNode = void 0;
          return _this;
        }
        var _proto = CardOnTable.prototype;
        _proto.start = function start() {
          _CartList.prototype.start.call(this);
          this.node.setContentSize(cc.size(500, 120));
          if (!this.arrr) return;
          if (this.isNode) {
            this.addCardsNode(this.arrr, !this.isReconnectt);
          } else {
            this.addCards(this.arrr, this.isReconnectt, this.fromNode);
          }
        };
        _proto.addCardOntable = function addCardOntable(arr, isReconnect, _isNode, fromNode) {
          this.arrr = arr;
          this.isReconnectt = isReconnect;
          this.isNode = _isNode;
          this.fromNode = fromNode;
        };
        _proto.deactiveCard = function deactiveCard() {
          this.cardList.forEach(function (element) {
            cc.log("mo card");
            element.node.color = cc.color(127, 127, 127, 255);
          });
        };
        _proto.update = function update(deltaTime) {};
        return CardOnTable;
      }(CartList)) || _class);
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Casino.Hover.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Casino.Lobby.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, game, Component, CasinoLobby;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      game = module.game;
      Component = module.Component;
    }, function (module) {
      CasinoLobby = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;
      cclegacy._RF.push({}, "f10e7KUUodPV7TYiv3TqdLg", "Casino.Hover", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property,
        menu = _decorator.menu;
      var CasinoHoverEffect = exports('default', (_dec = menu("Casino/Hover"), _dec2 = property([Node]), ccclass(_class = _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(CasinoHoverEffect, _Component);
        function CasinoHoverEffect() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "nodeGates", _descriptor, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = CasinoHoverEffect.prototype;
        _proto.onLoad = function onLoad() {
          var _this2 = this;
          this.nodeGates.forEach(function (node) {
            var hoverType = CasinoLobby.instance.isTableVip ? "hover" : "hoverNormal";
            var hoverChild = node.getChildByName(hoverType);
            if (!hoverChild) {
              return;
            }
            node.on(Node.EventType.MOUSE_ENTER, function () {
              _this2.setCursor("pointer");
              hoverChild.active = true;
            });
            node.on(Node.EventType.MOUSE_LEAVE, function () {
              hoverChild.active = false;
              _this2.setCursor("default");
            });
          });
        };
        _proto.setCursor = function setCursor(type) {
          var canvas = game.canvas || document.getElementById("GameCanvas");
          if (canvas && canvas.style) {
            canvas.style.cursor = type;
          }
        };
        return CasinoHoverEffect;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "nodeGates", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _class2)) || _class) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Casino.HoverButton.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, game, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      game = module.game;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;
      cclegacy._RF.push({}, "4e6ceS9NnJC+otEP2xXCyJH", "Casino.HoverButton", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property,
        menu = _decorator.menu;
      var HoverEffect = exports('default', (_dec = menu("Common/HoverEffect"), _dec2 = property(Node), ccclass(_class = _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(HoverEffect, _Component);
        function HoverEffect() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "hoverImage", _descriptor, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = HoverEffect.prototype;
        _proto.onLoad = function onLoad() {
          if (!this.hoverImage) {
            this.hoverImage = this.node.getChildByName("hover");
          }
          if (this.hoverImage && this.hoverImage.isValid) {
            this.hoverImage.active = false;
          }
          this.node.on(Node.EventType.MOUSE_ENTER, this.onHoverIn, this);
          this.node.on(Node.EventType.MOUSE_LEAVE, this.onHoverOut, this);
        };
        _proto.isDisabled = function isDisabled() {
          var _disableNode$active;
          var disableNode = this.node.getChildByName("disable");
          return (_disableNode$active = disableNode == null ? void 0 : disableNode.active) != null ? _disableNode$active : false;
        };
        _proto.onHoverIn = function onHoverIn() {
          if (this.isDisabled()) return;
          if (this.hoverImage && this.hoverImage.isValid) {
            this.hoverImage.active = true;
          }
          game.canvas.style.cursor = "pointer";
        };
        _proto.onHoverOut = function onHoverOut() {
          if (this.isDisabled()) return;
          if (this.hoverImage && this.hoverImage.isValid) {
            this.hoverImage.active = false;
          }
          game.canvas.style.cursor = "default";
        };
        _proto.onDestroy = function onDestroy() {
          this.node.off(Node.EventType.MOUSE_ENTER, this.onHoverIn, this);
          this.node.off(Node.EventType.MOUSE_LEAVE, this.onHoverOut, this);
        };
        return HoverEffect;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "hoverImage", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _class2)) || _class) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Casino.Lobby.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './BroadcastListener.ts', './Casino.PopupRank.ts', './Config.ts', './DragonTigerSignalRClient.ts', './BlackjackSignalRClient.ts', './BaccaratSignalRClient.ts', './SedieSignalRClient.ts', './SicboSignalRClient.ts', './RouletteSignalRClient.ts', './App.ts', './ChatHubSignalRClient.ts', './Utils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, Node, EditBox, Prefab, Button, instantiate, RichText, Component, UIOpacity, BroadcastReceiver, CasinoPopupRank, Configs, DragonTigerSignalRClient, BlackjackSignalRClient, BaccaratSignalRClient, SedieSignalRClient, SicboSignalRClient, RouletteSignalRClient, App, ChatHubSignalRClient, Utils;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
      Node = module.Node;
      EditBox = module.EditBox;
      Prefab = module.Prefab;
      Button = module.Button;
      instantiate = module.instantiate;
      RichText = module.RichText;
      Component = module.Component;
      UIOpacity = module.UIOpacity;
    }, function (module) {
      BroadcastReceiver = module.BroadcastReceiver;
    }, function (module) {
      CasinoPopupRank = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      DragonTigerSignalRClient = module.default;
    }, function (module) {
      BlackjackSignalRClient = module.default;
    }, function (module) {
      BaccaratSignalRClient = module.default;
    }, function (module) {
      SedieSignalRClient = module.default;
    }, function (module) {
      SicboSignalRClient = module.default;
    }, function (module) {
      RouletteSignalRClient = module.default;
    }, function (module) {
      App = module.default;
    }, function (module) {
      ChatHubSignalRClient = module.default;
    }, function (module) {
      Utils = module.Utils;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _class3;
      cclegacy._RF.push({}, "bc0f9jvHWlBoaaCdea6AQM4", "Casino.Lobby", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property,
        menu = _decorator.menu;
      var CasinoLobby = exports('default', (_dec = menu("Casino/Lobby"), _dec2 = property(Label), _dec3 = property([Node]), _dec4 = property([Node]), _dec5 = property(Node), _dec6 = property(Node), _dec7 = property(Node), _dec8 = property(Node), _dec9 = property(EditBox), _dec10 = property(Prefab), ccclass(_class = _dec(_class = (_class2 = (_class3 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(CasinoLobby, _Component);
        function CasinoLobby() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "labelGameName", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "listRoomVip", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "listRoomNormal", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerVIP", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerNormal", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "contentMsg", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "itemMsg", _descriptor7, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "editBoxChat", _descriptor8, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "popupGuide", _descriptor9, _assertThisInitialized(_this));
          _this.gameID = 0;
          _this.chatChannel = "";
          _this.hub = null;
          _this.guideText = "";
          _this.popupRank = null;
          _this.isTableVip = true;
          return _this;
        }
        var _proto = CasinoLobby.prototype;
        _proto.start = function start() {
          CasinoLobby.instance = this;
          BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);
        };
        _proto.setDataRoom = function setDataRoom(gameID) {
          var _this2 = this;
          this.gameID = gameID;
          this.popupRank = this.node.getComponentInChildren(CasinoPopupRank);
          this.popupRank.gameId = gameID;
          this.labelGameName.string = Configs.InGameIds.getGameName(gameID).toUpperCase();
          this.chatChannel = Configs.InGameIds.getChatChannelName(gameID);
          switch (gameID) {
            case Configs.InGameIds.RongHo:
              this.hub = DragonTigerSignalRClient.getInstance();
              break;
            case Configs.InGameIds.XocDia:
              this.hub = SedieSignalRClient.getInstance();
              break;
            case Configs.InGameIds.BlackJack:
              this.hub = BlackjackSignalRClient.getInstance();
              break;
            case Configs.InGameIds.Baccarat:
              this.hub = BaccaratSignalRClient.getInstance();
              break;
            case Configs.InGameIds.Sicbo:
              this.hub = SicboSignalRClient.getInstance();
              break;
            case Configs.InGameIds.Roullete:
              this.hub = RouletteSignalRClient.getInstance();
              break;
            default:
              return;
          }
          var dataVip = Configs.App.G88_CONFIG["ListRoomVip"][this.gameID];
          var dataNormal = Configs.App.G88_CONFIG["ListRoomNormal"][this.gameID];
          var _loop = function _loop(i0) {
            if (dataVip[i0].IsLock) {
              _this2.listRoomVip[i0].getComponent(UIOpacity).opacity = 130;
            } else {
              _this2.listRoomVip[i0].on("click", function () {
                _this2.actJoinRoom(dataVip[i0].Value, 1);
                _this2.isTableVip = true;
              });
            }
          };
          for (var i0 = 0; i0 < this.listRoomVip.length; i0++) {
            _loop(i0);
          }
          var _loop2 = function _loop2(i1) {
            if (dataNormal[i1].IsLock) {
              _this2.listRoomNormal[i1].getComponent(UIOpacity).opacity = 130;
            } else {
              _this2.listRoomNormal[i1].on("click", function () {
                _this2.actJoinRoom(dataNormal[i1].Value, 0);
                _this2.isTableVip = false;
              });
            }
          };
          for (var i1 = 0; i1 < this.listRoomNormal.length; i1++) {
            _loop2(i1);
          }
          this.hub.send('EnterGame', [Configs.Login.CurrencyID], function (data) {
            if (data.c < 0) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang("me" + data.c));
              return;
            }
            var lastRoomValue = parseInt(Utils.getStorageKey("last_open_casino_room_value"));
            var lastRoomCurrency = parseInt(Utils.getStorageKey("last_open_casino_room_currency"));
            if (lastRoomValue > 0 && lastRoomCurrency >= 0) {
              _this2.isTableVip = lastRoomCurrency == 1;
              _this2.actJoinRoom(lastRoomValue, lastRoomCurrency);
            }
          });
          this.contentMsg.removeAllChildren();
          ChatHubSignalRClient.getInstance().registerChat(this.chatChannel, function (response) {
            if (_this2.editBoxChat == null) return;
            if (response.c < 0) {
              _this2.editBoxChat.placeholderLabel.string = App.instance.getTextLang('me50') + (" " + Utils.formatNumber(response.p[0]));
              _this2.editBoxChat.placeholderLabel.enableWrapText = true;
              _this2.editBoxChat.enabled = false;
              _this2.editBoxChat.node.getComponentInChildren(Button).enabled = false;
              return;
            }
            _this2.editBoxChat.placeholderLabel.string = App.instance.getTextLang("TLN_ENTER_CHAT");
            _this2.editBoxChat.enabled = true;
            _this2.editBoxChat.node.getComponentInChildren(Button).enabled = true;
          });
          ChatHubSignalRClient.getInstance().receiveChat(function (response) {
            for (var i = 0; i < response.length; i++) {
              var data = response[i];
              if (data.i !== _this2.chatChannel) {
                return;
              }
              _this2.editBoxChat.string = "";
              var item = instantiate(_this2.itemMsg);
              if (data.v >= 6) {
                item.getComponent(RichText).string = "<color=#ffffff>" + data.c + "</color>";
              } else if (data.a + ":" + data.p === Configs.Login.AccountID + ":" + Configs.Login.PortalID) {
                item.getComponent(RichText).string = "<color=#fff600>" + data.n + ": </c><color=#ffffff>" + data.c + "</color>";
              } else {
                item.getComponent(RichText).string = "<color=#3c91e6>" + data.n + ": </c><color=#ffffff>" + data.c + "</color>";
              }
              _this2.contentMsg.addChild(item);
            }
          });
        };
        _proto.showVIP = function showVIP(toggle) {
          if (toggle.isChecked == false) return;
          this.containerVIP.active = true;
          this.containerNormal.active = false;
          this.popupRank.loadDataGold();
        };
        _proto.showNormal = function showNormal(toggle) {
          if (toggle.isChecked == false) return;
          this.containerVIP.active = false;
          this.containerNormal.active = true;
          this.popupRank.loadDataSilver();
        };
        _proto.actBack = function actBack() {
          this.hub.send('ExitGame', [], function (_data) {});
          ChatHubSignalRClient.getInstance().unRegisterChat(this.chatChannel, function (_response) {});
          this.node.destroy();
          BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);
          Utils.setStorageValue("last_open_game_id", "");
          Utils.setStorageValue("last_open_casino_room_value", "");
          Utils.setStorageValue("last_open_casino_room_currency", "");
        };
        _proto.onDestroy = function onDestroy() {
          this.hub.dontReceive();
          ChatHubSignalRClient.getInstance().dontReceive();
        };
        _proto.actJoinRoom = function actJoinRoom(roomValue, currency) {
          var _this3 = this;
          if (currency === 0 && roomValue > Configs.Login.CoinBalance || currency === 1 && roomValue > Configs.Login.GoldBalance) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang("ca-10005"));
            return;
          }
          var bundleName = "";
          var prefabName = "";
          var playComponent = "";
          switch (this.gameID) {
            case Configs.InGameIds.RongHo:
              bundleName = "RongHo";
              prefabName = "res/prefabs/Play";
              playComponent = "RongHo.Play";
              break;
            case Configs.InGameIds.XocDia:
              bundleName = "XocDia";
              prefabName = "res/prefabs/Play";
              playComponent = "XocDia.Play";
              break;
            case Configs.InGameIds.BlackJack:
              bundleName = "BlackJack";
              prefabName = "res/prefabs/Play";
              playComponent = "BlackJack.Play";
              break;
            case Configs.InGameIds.Baccarat:
              bundleName = "Baccarat";
              prefabName = "res/prefabs/Play";
              playComponent = "Baccarat.Play";
              break;
            case Configs.InGameIds.Sicbo:
              bundleName = "Sicbo";
              prefabName = "res/prefabs/Play";
              playComponent = "Sicbo.Play";
              break;
            case Configs.InGameIds.Roullete:
              bundleName = "Roulette";
              prefabName = "res/prefabs/Play";
              playComponent = "Roulette.Play";
              break;
            default:
              return;
          }
          App.instance.openPrefabGame(bundleName, prefabName, function (prefab) {
            var playCasino = instantiate(prefab).getComponent(playComponent);
            Utils.setStorageValue("last_open_game_id", _this3.gameID.toString());
            Utils.setStorageValue("last_open_casino_room_value", roomValue.toString());
            Utils.setStorageValue("last_open_casino_room_currency", currency.toString());
            // @ts-ignore
            playCasino.init(roomValue, currency);
            App.instance.bigGameNode.addChild(playCasino.node);
          });
        };
        _proto.sendMessage = function sendMessage() {
          var _this4 = this;
          var content = this.editBoxChat.string;
          if (content == "") {
            return;
          }
          ChatHubSignalRClient.getInstance().sendChat(this.chatChannel, content, function (_response) {
            _this4.editBoxChat.string = "";
          });
        };
        _proto.actPopupGuide = function actPopupGuide() {
          switch (this.gameID) {
            case Configs.InGameIds.RongHo:
              this.guideText = App.instance.getTextLang("ca259");
              break;
            case Configs.InGameIds.XocDia:
              this.guideText = App.instance.getTextLang("ca249");
              break;
            case Configs.InGameIds.BlackJack:
              this.guideText = App.instance.getTextLang("ca257");
              break;
            case Configs.InGameIds.Baccarat:
              this.guideText = App.instance.getTextLang("ca222") + '\n\n' + App.instance.getTextLang("ca223") + '\n\n' + App.instance.getTextLang("ca224");
              break;
            case Configs.InGameIds.Sicbo:
              this.guideText = App.instance.getTextLang("ca244") + '\n\n' + App.instance.getTextLang("ca245") + '\n\n' + App.instance.getTextLang("ca246");
              break;
            case Configs.InGameIds.Roullete:
              this.guideText = App.instance.getTextLang("ca258");
              break;
            default:
              return;
          }
          var guide = instantiate(this.popupGuide);
          guide.getComponentInChildren(RichText).string = this.guideText;
          App.instance.popupNode.addChild(guide);
        };
        return CasinoLobby;
      }(Component), _class3.instance = null, _class3), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "labelGameName", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "listRoomVip", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "listRoomNormal", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "containerVIP", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "containerNormal", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "contentMsg", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "itemMsg", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "editBoxChat", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "popupGuide", [_dec10], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Casino.Player.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Utils.ts', './App.ts', './Language.LanguageManager.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Label, Sprite, Color, v3, UIOpacity, tween, Animation, Component, Utils, App, LanguageManager;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Label = module.Label;
      Sprite = module.Sprite;
      Color = module.Color;
      v3 = module.v3;
      UIOpacity = module.UIOpacity;
      tween = module.tween;
      Animation = module.Animation;
      Component = module.Component;
    }, function (module) {
      Utils = module.Utils;
    }, function (module) {
      App = module.default;
    }, function (module) {
      LanguageManager = module.LanguageManager;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _class3;
      cclegacy._RF.push({}, "03a1d5SBUNObKxFLLu/9Qj3", "Casino.Player", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property,
        menu = _decorator.menu;
      var CasinoPlayer = exports('default', (_dec = menu("Casino/Player"), _dec2 = property(Node), _dec3 = property(Label), _dec4 = property(Label), _dec5 = property(Sprite), _dec6 = property(Node), _dec7 = property(Node), _dec8 = property(Node), _dec9 = property(Node), _dec10 = property(Node), _dec11 = property(Node), ccclass(_class = _dec(_class = (_class2 = (_class3 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(CasinoPlayer, _Component);
        function CasinoPlayer() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "infoContainer", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblNickname", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblCoin", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "sprAvatar", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "avatarNode", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "chatMsg", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "boxWin", _descriptor7, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "jackpot", _descriptor8, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "readyNode", _descriptor9, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "registerQuitNode", _descriptor10, _assertThisInitialized(_this));
          _this.id = "";
          _this.avatar = "";
          _this.balance = 0;
          _this.isWin = false;
          _this.nickname = "";
          _this.coinChangeQueue = [];
          _this.isProcessingQueue = false;
          return _this;
        }
        var _proto = CasinoPlayer.prototype;
        _proto.start = function start() {
          CasinoPlayer.instance = this;
        };
        _proto.leave = function leave() {
          this.id = "";
          this.nickname = "";
          this.unscheduleAllCallbacks();
          this.infoContainer.active = false;
          this.isWin = false;
        };
        _proto.set = function set(data) {
          this.id = data.AccountId;
          this.lblNickname.string = data.Nickname;
          this.nickname = data.Nickname;
          this.avatar = data.AvatarId;
          this.sprAvatar.spriteFrame = App.instance.getAvatarSpriteFrame(this.avatar);
          this.balance = data.Balance;
          this.setCoin(data.Balance);
          this.isWin = false;
          this.infoContainer.active = true;
        };
        _proto.setCoin = function setCoin(coin) {
          if (this.balance !== 0 && this.balance !== coin) {
            var diff = Math.abs(coin - this.balance);
            var isIncrease = coin > this.balance;
            this.coinChangeQueue.push({
              diff: diff,
              isIncrease: isIncrease
            });
            this.processCoinChangeQueue();
          }
          this.balance = coin;
          this.lblCoin.string = Utils.formatNumber(this.balance);
        };
        _proto.processCoinChangeQueue = function processCoinChangeQueue() {
          var _this2 = this;
          if (this.isProcessingQueue || this.coinChangeQueue.length === 0) {
            return;
          }
          this.isProcessingQueue = true;
          var item = this.coinChangeQueue.shift();
          if (item) {
            this.displayCoinChange(item.diff, item.isIncrease);
          }
          setTimeout(function () {
            _this2.isProcessingQueue = false;
            _this2.processCoinChangeQueue();
          }, 200);
        };
        _proto.showChatMsg = function showChatMsg(content) {
          var _this3 = this;
          if (content.indexOf("E__") === 0) {
            this.displayEmotion(parseInt(content.replace("E__", "")));
            return;
          }
          this.chatMsg.active = true;
          this.chatMsg.getComponentInChildren(Label).string = content;
          this.scheduleOnce(function () {
            _this3.chatMsg.active = false;
          }, 5);
        };
        _proto.createCoinNode = function createCoinNode(amount) {
          var node = new Node();
          var label = node.addComponent(Label);
          label.string = amount;
          label.font = LanguageManager.instance.getFont();
          label.isBold = true;
          label.fontSize = 30;
          label.color = Color.YELLOW;
          node.position = v3(0, -15, 0);
          node.scale = v3(0.6, 0.6, 0.6);
          node.active = true;
          this.node.addChild(node);
          return node;
        };
        _proto.displayCoinChange = function displayCoinChange(amount, isAdd) {
          if (isAdd === void 0) {
            isAdd = true;
          }
          var node = this.createCoinNode((isAdd ? '+' : '-') + Utils.formatNumber(amount));
          node.setScale(v3(0, 0, 0));
          node.setPosition(v3(0, 0, 0));
          var opacityComp = node.getComponent(UIOpacity) || node.addComponent(UIOpacity);
          opacityComp.opacity = 255;
          tween(node).to(0.3, {
            scale: v3(1, 1, 1)
          }, {
            easing: 'backOut'
          }).to(1.2, {
            position: v3(0, 60, 0)
          }, {
            easing: 'sineOut'
          }).call(function () {
            tween(opacityComp).to(0.4, {
              opacity: 0
            }, {
              easing: 'fade'
            }).call(function () {
              return node.destroy();
            }).start();
          }).start();
        };
        _proto.displayEmotion = function displayEmotion(id) {
          var node = new Node();
          var sprite = node.addComponent(Sprite);
          sprite.spriteFrame = App.instance.listEmotionSpr[id] || App.instance.listEmotionSpr[0];
          node.position = v3(0, -15, 0);
          node.scale = v3(0.6, 0.6, 0.6);
          node.active = true;
          this.node.addChild(node);
          var opacityComp = node.getComponent(UIOpacity) || node.addComponent(UIOpacity);
          tween(node).to(0.3, {
            scale: v3(1, 1, 1)
          }, {
            easing: 'backOut'
          }).to(1.2, {
            position: v3(0, 60, 0)
          }, {
            easing: 'sineOut'
          }).call(function () {
            tween(opacityComp).to(0.4, {
              opacity: 0
            }, {
              easing: 'fade'
            }).call(function () {
              return node.destroy();
            }).start();
          }).call(function () {
            return node.destroy();
          }).start();
        };
        _proto.activeJackpot = function activeJackpot() {
          this.jackpot.active = true;
          this.jackpot.setScale(v3(0.1, 0.1, 0.1));
          tween(this.jackpot).to(0.5, {
            scale: v3(1.2, 1.2, 1.2)
          }).to(0.5, {
            scale: v3(1, 1, 1)
          }).start();
        };
        _proto.stopJackpot = function stopJackpot() {
          this.jackpot.active = false;
        };
        _proto.showReady = function showReady() {
          this.readyNode.active = true;
        };
        _proto.hideReady = function hideReady() {
          this.readyNode.active = false;
        };
        _proto.showRegisterQuit = function showRegisterQuit() {
          this.registerQuitNode.active = true;
        };
        _proto.hideRegisterQuit = function hideRegisterQuit() {
          this.registerQuitNode.active = false;
        };
        _proto.showWinAnimation = function showWinAnimation() {
          var anim = this.node.getComponentInChildren(Animation) || this.avatarNode.getComponentInChildren(Animation);
          if (anim) {
            anim.node.active = true;
            anim.play();
          }
        };
        _proto.hideWinAnimation = function hideWinAnimation() {
          var anim = this.node.getComponentInChildren(Animation) || this.avatarNode.getComponentInChildren(Animation);
          if (anim) {
            anim.node.active = false;
            anim.stop();
          }
        };
        return CasinoPlayer;
      }(Component), _class3.instance = null, _class3), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "infoContainer", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "lblNickname", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "lblCoin", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "sprAvatar", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "avatarNode", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "chatMsg", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "boxWin", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "jackpot", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "readyNode", [_dec10], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "registerQuitNode", [_dec11], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Casino.PopupRank.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Dialog.ts', './App.ts', './Config.ts', './Http.ts', './Utils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, SpriteFrame, CCInteger, instantiate, Label, Sprite, Dialog, App, Configs, Http, Utils;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      SpriteFrame = module.SpriteFrame;
      CCInteger = module.CCInteger;
      instantiate = module.instantiate;
      Label = module.Label;
      Sprite = module.Sprite;
    }, function (module) {
      Dialog = module.default;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      Utils = module.Utils;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _class3;
      cclegacy._RF.push({}, "421953NgA5H5ZrjRaKBnVAR", "Casino.PopupRank", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property,
        menu = _decorator.menu;
      var CasinoPopupRank = exports('default', (_dec = menu("Casino/PopupRank"), _dec2 = property(Node), _dec3 = property(Node), _dec4 = property(Node), _dec5 = property(Node), _dec6 = property(Node), _dec7 = property(SpriteFrame), _dec8 = property(SpriteFrame), _dec9 = property(CCInteger), _dec10 = property(Node), ccclass(_class = _dec(_class = (_class2 = (_class3 = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(CasinoPopupRank, _Dialog);
        function CasinoPopupRank() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Dialog.call.apply(_Dialog, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "item_top1", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "item_top2", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "item_top3", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "item", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "items", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "sprFrameGold", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "sprFrameCoin", _descriptor7, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "gameId", _descriptor8, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "checkmarkToggle", _descriptor9, _assertThisInitialized(_this));
          _this.isGold = true;
          return _this;
        }
        var _proto = CasinoPopupRank.prototype;
        _proto.onLoad = function onLoad() {
          CasinoPopupRank.instance = this;
        };
        _proto.showDetail = function showDetail(currency, gameId) {
          // For Popup Only
          if (gameId) {
            this.gameId = gameId;
          }
          this.isGold = currency == 1;
          this.loadData();
          this.show();
        };
        _proto.onToggleCurrency = function onToggleCurrency() {
          this.isGold = !this.isGold;
          if (this.checkmarkToggle) {
            this.checkmarkToggle.active = this.isGold == false;
          }
          this.loadData();
        };
        _proto.dismiss = function dismiss() {
          _Dialog.prototype.dismiss.call(this);
        };
        _proto.start = function start() {
          if (this.checkmarkToggle) {
            this.loadDataGold();
          }
        };
        _proto.loadDataGold = function loadDataGold() {
          // For Lobby Only
          this.isGold = true;
          this.checkmarkToggle.active = false;
          this.loadData();
        };
        _proto.loadDataSilver = function loadDataSilver() {
          // For Lobby Only
          this.isGold = false;
          this.checkmarkToggle.active = true;
          this.loadData();
        };
        _proto.loadData = function loadData() {
          var _this2 = this;
          App.instance.showLoading(true);
          this.items.removeAllChildren();
          var params = {
            currencyID: Configs.Login.CurrencyID,
            gameId: this.gameId,
            roomType: this.isGold ? 1 : 0
          };
          Http.get(Configs.App.DOMAIN_CONFIG['GetLeaderBoardUrl'], params, function (status, res) {
            if (status === 200) {
              var data = res.d;
              for (var i = 0; i < data.length; i++) {
                var node = instantiate(_this2.item);
                if (i == 0) {
                  node = instantiate(_this2.item_top1);
                } else if (i == 1) {
                  node = instantiate(_this2.item_top2);
                } else if (i == 2) {
                  node = instantiate(_this2.item_top3);
                } else {
                  node.getChildByName("rank").getComponent(Label).string = (i + 1).toString();
                }
                if (node.getChildByName("avatar")) {
                  node.getChildByName("avatar").getComponent(Sprite).spriteFrame = App.instance.getAvatarSpriteFrame(data[i].avatar);
                }
                node.getChildByName("nickname").getComponent(Label).string = data[i].nickname;
                node.getChildByName("coin").getChildByName("text").getComponent(Label).string = _this2.checkmarkToggle ? Utils.formatMoney(data[i].totalMoneyWins, true) : Utils.formatNumber(data[i].totalMoneyWins);
                node.getChildByName("coin").getChildByName("coin").getComponent(Sprite).spriteFrame = _this2.isGold ? _this2.sprFrameGold : _this2.sprFrameCoin;
                _this2.items.addChild(node);
              }
            }
            App.instance.showLoading(false);
          });
        };
        return CasinoPopupRank;
      }(Dialog), _class3.instance = void 0, _class3), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "item_top1", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "item_top2", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "item_top3", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "item", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "items", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "sprFrameGold", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "sprFrameCoin", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "gameId", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0;
        }
      }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "checkmarkToggle", [_dec10], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/ChatHubSignalRClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Network.SignalRClient.ts', './Config.ts'], function (exports) {
  var _inheritsLoose, cclegacy, SignalRClient, Configs;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      SignalRClient = module.default;
    }, function (module) {
      Configs = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "7fb47E4qV5Lzq6ETph0pLE9", "ChatHubSignalRClient", undefined);
      var ChatHubSignalRClient = exports('default', /*#__PURE__*/function (_SignalRClient) {
        _inheritsLoose(ChatHubSignalRClient, _SignalRClient);
        function ChatHubSignalRClient() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _SignalRClient.call.apply(_SignalRClient, [this].concat(args)) || this;
          _this.onSuccess = void 0;
          return _this;
        }
        ChatHubSignalRClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new ChatHubSignalRClient();
          }
          return this.instance;
        };
        var _proto = ChatHubSignalRClient.prototype;
        _proto.onstart = function onstart() {
          this.onSuccess(true);
        };
        _proto.onError = function onError() {
          this.onSuccess(false);
        };
        _proto.connectHub = function connectHub(onSuccess) {
          this.onSuccess = onSuccess;
          _SignalRClient.prototype.connect.call(this, Configs.App.DOMAIN_CONFIG['ChatHubUrl']);
        };
        _proto.ensureConnected = function ensureConnected(callback) {
          if (this.isConnected()) {
            callback();
            return;
          }
          if (this.isConnecting()) {
            setTimeout(this.ensureConnected.bind(this, callback), 500);
            return;
          }
          this.connectHub(function (success) {
            if (success) {
              callback();
            } else {
              console.error("Failed to connect to ChatHub");
            }
          });
        };
        _proto.sendChat = function sendChat(channelID, message, callback) {
          var _this2 = this;
          this.ensureConnected(function () {
            _this2.send("sendMessage", [{
              ChannelID: channelID,
              Message: message
            }], callback);
          });
        };
        _proto.receiveChat = function receiveChat(callback) {
          var _this3 = this;
          this.ensureConnected(function () {
            _this3.receive("receiveMessage", callback);
          });
        };
        _proto.receiveNotify = function receiveNotify(callback) {
          var _this4 = this;
          this.ensureConnected(function () {
            _this4.receive("notifyMessage", callback);
          });
        };
        _proto.registerChat = function registerChat(channelID, callback) {
          var _this5 = this;
          this.ensureConnected(function () {
            _this5.send("registerChat", [{
              ChannelID: channelID
            }], callback);
          });
        };
        _proto.unRegisterChat = function unRegisterChat(channelID, callback) {
          var _this6 = this;
          this.ensureConnected(function () {
            _this6.send("unRegisterChat", [{
              ChannelID: channelID
            }], callback);
          });
        };
        _proto.receiveTIP = function receiveTIP(callback) {
          var _this7 = this;
          this.ensureConnected(function () {
            _this7.receive("receiveTipMessage", callback);
          });
        };
        _proto.sendTIP = function sendTIP(channelID, message, callback) {
          var _this8 = this;
          this.ensureConnected(function () {
            _this8.send("tipAccount", [{
              ChannelID: channelID,
              Message: message
            }], callback);
          });
        };
        return ChatHubSignalRClient;
      }(SignalRClient));
      ChatHubSignalRClient.instance = null;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/ChatInGame.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './App.ts', './Config.ts', './RouletteSignalRClient.ts', './BlackjackSignalRClient.ts', './SedieSignalRClient.ts', './BaccaratSignalRClient.ts', './DragonTigerSignalRClient.ts', './SicboSignalRClient.ts', './CardGameSignalRClient.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, EditBox, Component, instantiate, Label, Sprite, App, Configs, RouletteSignalRClient, BlackjackSignalRClient, SedieSignalRClient, BaccaratSignalRClient, DragonTigerSignalRClient, SicboSignalRClient, CardGameSignalRClient;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      EditBox = module.EditBox;
      Component = module.Component;
      instantiate = module.instantiate;
      Label = module.Label;
      Sprite = module.Sprite;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      RouletteSignalRClient = module.default;
    }, function (module) {
      BlackjackSignalRClient = module.default;
    }, function (module) {
      SedieSignalRClient = module.default;
    }, function (module) {
      BaccaratSignalRClient = module.default;
    }, function (module) {
      DragonTigerSignalRClient = module.default;
    }, function (module) {
      SicboSignalRClient = module.default;
    }, function (module) {
      CardGameSignalRClient = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6;
      cclegacy._RF.push({}, "1d920P1okFOTKIdqTRdb9+G", "ChatInGame", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var ChatInGame = exports('default', (_dec = property(Node), _dec2 = property(EditBox), _dec3 = property(Node), _dec4 = property(Node), _dec5 = property(Node), _dec6 = property(Node), ccclass(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(ChatInGame, _Component);
        function ChatInGame() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "itemTemplate", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbAmount", _descriptor2, _assertThisInitialized(_this));
          _this.dictChatQuick = {};
          _initializerDefineProperty(_this, "noteText", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "noteIcon", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "emotionTemplate", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "emotionContainer", _descriptor6, _assertThisInitialized(_this));
          _this.gameID = 7;
          return _this;
        }
        var _proto = ChatInGame.prototype;
        _proto.onLoad = function onLoad() {
          this.edbAmount.node.on('return', this.sendMessage, this);
          this.noteText.active = false;
          this.noteIcon.active = true;
          /// DANH SACH CHAT KHAI BAO O DUOI COPY LEN DANG VI DU TLMN
          this.dictChatQuick = {
            "7": ["Hellloooooo", "Quit...", "Thank you vinamilk", "Sorry baby", App.instance.getTextLang("chat1"), App.instance.getTextLang("chat20"),
            //"Thối heo rồi :(",
            App.instance.getTextLang("chat21"),
            //"Cóng đê",
            App.instance.getTextLang("chat15"),
            //"Quất thôi, sao phải xoắn",
            App.instance.getTextLang("chat16"),
            //"Hết xiền rùi",
            App.instance.getTextLang("chat17"),
            //"Hên vãi",
            App.instance.getTextLang("chat18"),
            //"Quá nhọ",
            App.instance.getTextLang("chat2"),
            //"Bài chán vãi",
            "hihi!", "Hazzz!"],
            "1": ["Helllooo", "Quit...", "Thank you", "Sorry baby", App.instance.getTextLang("chat1"),
            // Nhanh lên ông ơi
            App.instance.getTextLang("chat2"),
            // "Bài chán vãi",
            App.instance.getTextLang("chat3"),
            //"Quá ngon, quá nguy hiểm",
            App.instance.getTextLang("chat4"),
            //"Đánh biên đê",
            App.instance.getTextLang("chat5"),
            //"Góp gà ăn to nào",
            App.instance.getTextLang("chat6"),
            //"10 Át cụ",
            App.instance.getTextLang("chat7"),
            //"1 Tịt",
            App.instance.getTextLang("chat8"),
            //"5 Nửa đời",
            App.instance.getTextLang("chat9"),
            //"Phát lương",
            App.instance.getTextLang("chat10") //"Cả làng sang tiền"
            ],

            // 3 cay khai bao 
            "13": ["Hellloooooo", "Quit...", "Thank you vinamilk", "Sorry baby", App.instance.getTextLang("chat1"),
            //"Nhanh lên ông ơi",
            App.instance.getTextLang("chat13"),
            //"Xoắn gì, tố đi",
            App.instance.getTextLang("chat14"),
            //"Bao nhiêu cũng chơi",
            App.instance.getTextLang("chat15"),
            //"Quất thôi, sao phải xoắn",
            App.instance.getTextLang("chat16"),
            //"Hết xiền rùi",
            App.instance.getTextLang("chat17"),
            //"Hên vãi",
            App.instance.getTextLang("chat18"),
            //"Quá nhọ",
            App.instance.getTextLang("chat19"),
            //"Thêm tiền đi",
            "hihi!", "Hazzz!"],
            // poker
            "15": ["Hellloooooo", "Quit...", "Thank you vinamilk", "Sorry baby", App.instance.getTextLang("chat1"),
            //"Nhanh lên ông ơi",
            App.instance.getTextLang("chat22"),
            //"Thắng cả làng",
            App.instance.getTextLang("chat21"),
            //"Cóng đê",
            App.instance.getTextLang("chat23"),
            //"Tứ quý đây",
            App.instance.getTextLang("chat16"),
            //"Hết xiền rùi",
            App.instance.getTextLang("chat17"),
            //"Hên vãi",
            App.instance.getTextLang("chat18"),
            //"Quá nhọ",
            App.instance.getTextLang("chat2"),
            //"Bài chán vãi",
            "hihi!", "Hazzz!"],
            //SAM
            "9": ["Hellloooooo", App.instance.getTextLang("chat24"),
            //"Cứ từ từ!",
            App.instance.getTextLang("chat18"),
            //"Quá nhọ",
            App.instance.getTextLang("chat25"),
            //"Thắng vào mắt",
            App.instance.getTextLang("chat1"),
            //"Nhanh lên ông ơi",
            App.instance.getTextLang("chat26"),
            //"Sập dập mặt!",
            App.instance.getTextLang("chat27"),
            //"Đời quá đen",
            App.instance.getTextLang("chat28"),
            //"Làm giàu hơi khó",
            App.instance.getTextLang("chat16"),
            //"Hết xiền rùi",
            App.instance.getTextLang("chat17"),
            //"Hên vãi",
            "Thank youuu", "OMG!", App.instance.getTextLang("chat29"),
            //"Rồng cuốn cmnr!",
            "hihi!", "Hazzz!"],
            // MAU BINH
            "57": ["Helllooo", "hihi!", "Haizzz!", App.instance.getTextLang("chat73"), App.instance.getTextLang("chat74"), App.instance.getTextLang("chat75"), App.instance.getTextLang("chat76"), App.instance.getTextLang("chat77"), App.instance.getTextLang("chat78"), App.instance.getTextLang("chat79")],
            // CATTE
            "45": [App.instance.getTextLang("chat37"),
            //"Thánh Blackjack đến đây!",
            App.instance.getTextLang("chat38"),
            //"Bài vi diệu vãi!",
            App.instance.getTextLang("chat39"),
            //"Củ đậu rau má thằng chia bài",
            App.instance.getTextLang("chat33"),
            //"Thôi xong rồi T_T",
            App.instance.getTextLang("chat40"),
            //"Khổ quá, sướng không chịu nổi",
            App.instance.getTextLang("chat41"),
            //"Thêm bài đi còn chờ gì nữa",
            App.instance.getTextLang("chat17"),
            //"Hên vãi",
            App.instance.getTextLang("chat42"),
            //"Đừng có thêm nữa, nín thở bóp cò đi",
            "OMG!", "Quit!", "hihi!", "Hazzz!"],
            "49": [App.instance.getTextLang("chat43"),
            //"Thánh Roulette đến đây!",
            App.instance.getTextLang("chat44"),
            //"Cò quay vi diệu vãi!",
            App.instance.getTextLang("chat45"),
            //"Đen thôi, đỏ quên đi!",
            App.instance.getTextLang("chat46"),
            //"Quay đều quay đều",
            App.instance.getTextLang("chat47"),
            //"Game này hay vãi",
            App.instance.getTextLang("chat33"),
            //"Thôi xong rồi T_T",
            App.instance.getTextLang("chat40"),
            //"Khổ quá, sướng không chịu nổi",
            App.instance.getTextLang("chat48"),
            //"Đặt cửa anh em ơi",
            App.instance.getTextLang("chat17"),
            //"Hên vãi",
            "I'm quit!", "OMG!", "Bye bye!", "hihi!", "Hazzz!"
            // 
            ],

            "53": ["Helllooo", App.instance.getTextLang("chat48"),
            //"Đặt cửa anh em ơi!",
            App.instance.getTextLang("chat49"),
            //"1000% Rồng!",
            App.instance.getTextLang("chat50"),
            //"1000% Hổ!",
            App.instance.getTextLang("chat51"),
            //"Gẫy cầu rồi...",
            App.instance.getTextLang("chat33"),
            //"Thôi xong rồi T_T",
            App.instance.getTextLang("chat45"),
            //"Đen thôi! Đỏ quên đi",
            "Bye bye!!!!!!", App.instance.getTextLang("chat17"),
            //"Hên vãi",
            "OMG!", "Quit!", "hihi!", "Hazzz!"],
            "43": ["Helllooo", App.instance.getTextLang("chat48"),
            //"Đặt cửa anh em ơi!",
            App.instance.getTextLang("chat63"),
            //"Điêu vãi!",
            App.instance.getTextLang("chat39"),
            //"Củ đậu rau má thằng chia bài",
            App.instance.getTextLang("chat64"),
            //"Player, Banker gì cũng chén hết!",
            App.instance.getTextLang("chat65"),
            //"Thà cược nhầm còn hơn cược sót",
            "Bye bye, I'm quit!", App.instance.getTextLang("chat40") //"Khổ quá, sướng không chịu nổi",
            ],

            "47": ["Helllooo", App.instance.getTextLang("chat18"),
            //"Quá nhọ",
            App.instance.getTextLang("chat52"),
            //"Chẵn nè!",
            App.instance.getTextLang("chat53"),
            //"Lẻ rồi!",
            App.instance.getTextLang("chat54"),
            //"Tứ đỏ nhé anh em!",
            App.instance.getTextLang("chat55"),
            //"Chẵn hay Lẻ đây?",
            App.instance.getTextLang("chat56"),
            //"Tất tay Lẻ nào!",
            App.instance.getTextLang("chat57"),
            //"Tất tay Chẵn đi!",
            App.instance.getTextLang("chat1"),
            //"Nhanh lên ông ơi",
            App.instance.getTextLang("chat58"),
            //"1000% Lẻ",
            App.instance.getTextLang("chat17"),
            //"Hên vãi",
            App.instance.getTextLang("chat59"),
            //"Đánh hay đấy!",
            App.instance.getTextLang("chat60"),
            //"Tứ xanh!",
            App.instance.getTextLang("chat61"),
            //"1000% Chẵn",
            App.instance.getTextLang("chat62") //"Đánh to vào anh em ơi!"
            ],

            "51": ["Helllooo", "hihi!", "Haizzz!", App.instance.getTextLang("chat67"), App.instance.getTextLang("chat68"), App.instance.getTextLang("chat69"), App.instance.getTextLang("chat70"), App.instance.getTextLang("chat71"), App.instance.getTextLang("chat33"), App.instance.getTextLang("chat17"), App.instance.getTextLang("chat45")]
          };
          this.emotionContainer.removeAllChildren();
        };
        _proto.start = function start() {
          var _this2 = this;
          var _loop = function _loop() {
            var element = _this2.dictChatQuick[_this2.gameID.toString()][index];
            var item = instantiate(_this2.itemTemplate);
            item.active = true;
            item.parent = _this2.itemTemplate.parent;
            item.children[0].getComponent(Label).string = element;
            item.on("click", function () {
              _this2.hiddenBoxChat();
              _this2.sendSignal(element);
            });
          };
          for (var index = 0; index < this.dictChatQuick[this.gameID.toString()].length; index++) {
            _loop();
          }
          var listEmotion = App.instance.listEmotionSpr;
          var _loop2 = function _loop2(_index) {
            var element = listEmotion[_index];
            var item = instantiate(_this2.emotionTemplate);
            item.active = true;
            item.parent = _this2.emotionContainer;
            item.getComponent(Sprite).spriteFrame = element;
            item.on("click", function () {
              _this2.sendEmotion('E__' + _index);
            });
          };
          for (var _index = 0; _index < listEmotion.length; _index++) {
            _loop2(_index);
          }
        };
        _proto.sendSignal = function sendSignal(content) {
          switch (this.gameID) {
            case Configs.InGameIds.TLMN:
            case Configs.InGameIds.TLMNSolo:
            case Configs.InGameIds.SamLoc:
            case Configs.InGameIds.SamLocSolo:
            case Configs.InGameIds.Poker:
            case Configs.InGameIds.MauBinh:
            case Configs.InGameIds.BaCay:
            case Configs.InGameIds.Catte:
              CardGameSignalRClient.getInstance().send('SendMessage', [content], function (_data) {});
              break;
            case Configs.InGameIds.Sicbo:
              SicboSignalRClient.getInstance().send('SendMessage', [content], function (_data) {});
              break;
            case Configs.InGameIds.RongHo:
              DragonTigerSignalRClient.getInstance().send('SendMessage', [content], function (_data) {});
              break;
            case Configs.InGameIds.Baccarat:
              BaccaratSignalRClient.getInstance().send('SendMessage', [content], function (_data) {});
              break;
            case Configs.InGameIds.XocDia:
              SedieSignalRClient.getInstance().send('SendMessage', [content], function (_data) {});
              break;
            case Configs.InGameIds.BlackJack:
              BlackjackSignalRClient.getInstance().send('SendMessage', [content], function (_data) {});
              break;
            case Configs.InGameIds.Roullete:
              RouletteSignalRClient.getInstance().send('SendMessage', [content], function (_data) {});
              break;
          }
        };
        _proto.show = function show(gameID) {
          this.gameID = gameID;
          if (gameID == Configs.InGameIds.TLMNSolo) {
            this.gameID = Configs.InGameIds.TLMN;
          }
          if (gameID == Configs.InGameIds.SamLocSolo) {
            this.gameID = Configs.InGameIds.SamLoc;
          }
          if (gameID == Configs.InGameIds.Catte) {
            this.gameID = Configs.InGameIds.Catte;
          }
          this.node.active = true;
        };
        _proto.actIcon = function actIcon() {
          this.noteIcon.active = !this.noteIcon.active;
          this.noteText.active = !this.noteIcon.active;
        };
        _proto.hiddenBoxChat = function hiddenBoxChat() {
          App.instance.inactivityTimer = 0;
          this.node.active = false;
        };
        _proto.sendEmotion = function sendEmotion(data) {
          this.hiddenBoxChat();
          this.sendSignal(data);
        };
        _proto.sendMessage = function sendMessage() {
          this.hiddenBoxChat();
          var content = this.edbAmount.string;
          if (content == "") {
            return;
          }
          this.edbAmount.string = "";
          this.sendSignal(content);
        };
        return ChatInGame;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "itemTemplate", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "edbAmount", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "noteText", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "noteIcon", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "emotionTemplate", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "emotionContainer", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Config.ts", ['cc', './Language.LanguageManager.ts'], function (exports) {
  var cclegacy, LanguageManager;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      LanguageManager = module.LanguageManager;
    }],
    execute: function () {
      cclegacy._RF.push({}, "104ab8qLihIAK88jUhtIzJy", "Config", undefined);
      var Configs;
      (function (_Configs) {
        var Login = /*#__PURE__*/function () {
          function Login() {}
          Login.clear = function clear() {
            this.AccountID = 0;
            this.CurrencyID = 1;
            this.Username = "";
            this.Password = "";
            this.Nickname = "";
            this.Avatar = "";
            this.CoinBalance = 0;
            this.GoldBalance = 0;
            this.IsLogin = false;
            this.ConfirmStatus = 0;
            this.SecurityStatus = 0;
            this.AccessToken = "";
            this.SessionKey = "";
            this.CreateTime = "";
            this.Birthday = "";
            this.IpAddress = "";
            this.VipPoint = 0;
            this.VipPointLevel = 0;
            this.VipPointSave = 0;
            this.Mail = "";
            this.MobilePhone = "";
            this.TeleSafe = "";
          };
          Login.set = function set(data) {
            this.AccountID = data['accountID'];
            this.Nickname = data['nickname'];
            this.Username = data['username'];
            this.Avatar = data['avatar'];
            this.CoinBalance = data['coinBalance'];
            this.GoldBalance = data['goldBalance'];
            this.IpAddress = data['clientIP'];
            this.CreateTime = data['activatedTime'];
            this.Birthday = data['birthday'];
            this.VipPoint = data['vipPoint'];
            this.VipPointLevel = data['vipLevel'];
            this.ConfirmStatus = data['confirmStatus'];
            this.SecurityStatus = data['securityStatus'];
            this.CurrencyID = data['currencyID'];
            this.Mail = data['email'];
            this.MobilePhone = data['mobile'];
            this.TeleSafe = data['teleSafe'];
            this.PortalID = data['portalID'];
          };
          return Login;
        }();
        Login.AccountID = 0;
        Login.CurrencyID = 1;
        Login.Username = "";
        Login.Password = "";
        Login.Nickname = "";
        Login.Avatar = "";
        Login.CoinBalance = 0;
        Login.GoldBalance = 0;
        Login.IsLogin = false;
        Login.ConfirmStatus = 0;
        /**
         * 0: Chưa confirm gì <br/>
         * 1: Confirm Mobile <br/>
         * 2: Confirm Email <br/>
         * 3: Confirm Telesafe <br/>
         * 4: Confirm Email và Mobile <br/>
         * 5: confirm Telesafe và Mobile <br/>
         * 6: confirm Telesafe và Email <br/>
         * 7: confirm Telesafe Email và Mobile <br/>
         */
        Login.SecurityStatus = 0;
        Login.AccessToken = "";
        Login.SessionKey = "";
        Login.CreateTime = "";
        Login.Birthday = "";
        Login.IpAddress = "";
        Login.VipPoint = 0;
        Login.VipPointLevel = 0;
        Login.VipPointSave = 0;
        Login.Mail = "";
        Login.MobilePhone = "";
        Login.TeleSafe = "";
        Login.PortalID = 0;
        _Configs.Login = Login;
        var SMSService = function SMSService() {};
        SMSService.FORGOT_PASSWORD = 11;
        SMSService.LOGIN_BY_OTP = 12;
        SMSService.CHANGE_PASSWORD = 13;
        SMSService.CONFIRM_PHONE = 14;
        SMSService.CHANGE_PHONE = 15;
        SMSService.ACTIVE_LOGIN_OTP = 16;
        SMSService.SAFE_BALANCE = 17;
        SMSService.MANAGE_GAME = 18;
        SMSService.BUY_CARD = 19;
        SMSService.CHECK_CARD = 20;
        SMSService.EXCHANGE_BALANCE = 21;
        SMSService.VERIFY_PHONE = 22;
        _Configs.SMSService = SMSService;
        var OTPType = function OTPType() {};
        OTPType.AppOTP = 1;
        OTPType.SmsOTP = 2;
        OTPType.TeleSafe = 3;
        OTPType.Telegram = 4;
        _Configs.OTPType = OTPType;
        var App = /*#__PURE__*/function () {
          function App() {}
          App.init = function init() {};
          return App;
        }();
        App.G88_BUNDLE_ID = "test.hot.cc";
        App.G88_VERSION = "0.1.9";
        App.DOMAIN_CONFIG = [];
        App.G88_CONFIG = {};
        App.GAME_AVAILABLE_IDS = [];
        App.GAME_BLOCKED_IDS = [];
        _Configs.App = App;
        var GameAvailableIds = /*#__PURE__*/function () {
          function GameAvailableIds() {}
          GameAvailableIds.isGameAvailable = function isGameAvailable(gameId) {
            var _config$IsAvaiable;
            var config = Configs.App.GAME_AVAILABLE_IDS.find(function (item) {
              return item.GameId === gameId;
            });
            return (_config$IsAvaiable = config == null ? void 0 : config.IsAvaiable) != null ? _config$IsAvaiable : false;
          };
          return GameAvailableIds;
        }();
        GameAvailableIds.None = 0;
        GameAvailableIds.BaCay = 1;
        GameAvailableIds.Poker = 13;
        GameAvailableIds.TLMN = 7;
        GameAvailableIds.XiTo = 5;
        GameAvailableIds.MauBinh = 9;
        GameAvailableIds.SamLoc = 15;
        GameAvailableIds.TLMNSolo = 33;
        GameAvailableIds.SamLocSolo = 35;
        GameAvailableIds.BaiCao = 37;
        GameAvailableIds.Lieng = 17;
        GameAvailableIds.Catte = 57;
        GameAvailableIds.Tala = 3;
        GameAvailableIds.TalaSolo = 39;
        GameAvailableIds.SlotTournament = 230;
        GameAvailableIds.VQMM = 111;
        GameAvailableIds.LuckyWild = 121;
        GameAvailableIds.Lottery = 113;
        GameAvailableIds.BanCa = 301;
        GameAvailableIds.TieuLongNgu = 302;
        GameAvailableIds.BanCaCooming = 991;
        GameAvailableIds.Shark = 605;
        GameAvailableIds.Sortie = 607;
        GameAvailableIds.SpaceWar = 609;
        GameAvailableIds.MultiLuckyDiceLive = 1001;
        GameAvailableIds.LuckyDiceMd5Live = 1002;
        GameAvailableIds.CrabfishLive = 1003;
        GameAvailableIds.SedieLive = 1004;
        GameAvailableIds.XocXoc = 25;
        GameAvailableIds.SoDo = 401;
        GameAvailableIds.Sicbo = 403;
        GameAvailableIds.NewSicbo = 51;
        GameAvailableIds.Roulette = 405;
        GameAvailableIds.NewRoulette = 49;
        GameAvailableIds.Baccarat = 43;
        GameAvailableIds.Blackjack = 45;
        GameAvailableIds.Sedie = 47;
        GameAvailableIds.DragonTiger = 53;
        GameAvailableIds.CrabFish = 55;
        GameAvailableIds.PokerTournament = 501;
        GameAvailableIds.TournamentGoOn = 503;
        GameAvailableIds.TournamentSam = 505;
        GameAvailableIds.TournamentOTT = 407;
        GameAvailableIds.MutilSlot = 990;
        GameAvailableIds.Kingdom = 201;
        GameAvailableIds.Olympia = 203;
        GameAvailableIds.Dancing = 205;
        GameAvailableIds.Ocean = 207;
        GameAvailableIds.Forest = 211;
        GameAvailableIds.GodOfFortune = 213;
        GameAvailableIds.Disco = 215;
        GameAvailableIds.PowerBall = 601;
        GameAvailableIds.MegaMillions = 603;
        GameAvailableIds.Keno = 611;
        GameAvailableIds.SportLive = 701;
        GameAvailableIds.SportVirtual = 703;
        GameAvailableIds.ESport = 705;
        GameAvailableIds.CockFighting = 707;
        GameAvailableIds.FantasySport = 709;
        GameAvailableIds.FantasySportSkill = 7090;
        GameAvailableIds.TradingPro = 119;
        GameAvailableIds.LuckyDiceMd5 = 123;
        GameAvailableIds.ComingSoon = 999;
        GameAvailableIds.MiniPoker = 101;
        GameAvailableIds.TaiXiu = 103;
        GameAvailableIds.HiLo = 105;
        GameAvailableIds.BauCua = 107;
        GameAvailableIds.PhucSinh = 109;
        GameAvailableIds.OTT = 115;
        GameAvailableIds.ABC = 1151;
        _Configs.GameAvailableIds = GameAvailableIds;
        var InGameIds = /*#__PURE__*/function () {
          function InGameIds() {}
          InGameIds.getGameName = function getGameName(gameId) {
            var _idToLangKey;
            var idToLangKey = (_idToLangKey = {}, _idToLangKey[InGameIds.BaCay] = 'na1', _idToLangKey[InGameIds.Poker] = 'na2', _idToLangKey[InGameIds.TLMN] = 'na3', _idToLangKey[InGameIds.SamLoc] = 'na4', _idToLangKey[InGameIds.TLMNSolo] = 'na5', _idToLangKey[InGameIds.SamLocSolo] = 'na6', _idToLangKey[InGameIds.MauBinh] = 'na7', _idToLangKey[InGameIds.Kingdom] = 'na8', _idToLangKey[InGameIds.SamTruyen] = 'na9', _idToLangKey[InGameIds.ThuyCung] = 'na10', _idToLangKey[InGameIds.GaiNhay] = 'na11', _idToLangKey[InGameIds.XocDia] = 'na13', _idToLangKey[InGameIds.BlackJack] = 'na14', _idToLangKey[InGameIds.Baccarat] = 'na15', _idToLangKey[InGameIds.Roullete] = 'na16', _idToLangKey[InGameIds.Sicbo] = 'na17', _idToLangKey[InGameIds.RongHo] = 'na18', _idToLangKey[InGameIds.CaKiem] = 'na19', _idToLangKey[InGameIds.MiniPoker] = 'na22', _idToLangKey[InGameIds.TaiXiuMini] = 'na21', _idToLangKey[InGameIds.MiniPhucSinh] = 'na23', _idToLangKey[InGameIds.BauCua] = 'na24', _idToLangKey[InGameIds.HiLo] = 'na25', _idToLangKey[InGameIds.OTT] = 'na26', _idToLangKey[InGameIds.LuckyWild] = 'na27', _idToLangKey[InGameIds.XoSo] = 'na28', _idToLangKey[InGameIds.SoDo] = 'na29', _idToLangKey[InGameIds.Catte] = 'na30', _idToLangKey);
            var langKey = idToLangKey[gameId];
            if (langKey) {
              return LanguageManager.instance.getString(langKey);
            }
            return "Unknown";
          };
          InGameIds.getChatChannelName = function getChatChannelName(gameId) {
            switch (gameId) {
              case InGameIds.MauBinh:
                return "maubinh_lobby";
              case InGameIds.SamLoc:
                return "loc_lobby";
              case InGameIds.TLMN:
                return "tlmn_dl_lobby";
              case InGameIds.Poker:
                return "poker_lobby";
              case InGameIds.TLMNSolo:
                return "tlmn_dl_solo_lobby";
              case InGameIds.SamLocSolo:
                return "loc_solo_lobby";
              case InGameIds.Catte:
                return "catte_lobby";
              case InGameIds.RongHo:
                return "dragontiger_lobby";
              case Configs.InGameIds.XocDia:
                return "sedie_lobby";
              case Configs.InGameIds.BlackJack:
                return "blackjack_lobby";
              case Configs.InGameIds.Baccarat:
                return "baccarat_lobby";
              case Configs.InGameIds.Sicbo:
                return "casinosicbo_lobby";
              case Configs.InGameIds.Roullete:
                return "roulette_lobby";
            }
          };
          return InGameIds;
        }();
        InGameIds.None = 0;
        InGameIds.BaCay = 1;
        InGameIds.TaLa = 3;
        InGameIds.XiTo = 5;
        InGameIds.TLMN = 7;
        InGameIds.MauBinh = 9;
        InGameIds.TLMB = 11;
        InGameIds.Poker = 13;
        InGameIds.SamLoc = 15;
        InGameIds.Lieng = 17;
        InGameIds.Chan = 19;
        InGameIds.DanhGaBaCay = 21;
        InGameIds.DanhBienBaCay = 23;
        InGameIds.TLMNNhatAnTat = 27;
        InGameIds.CoTuong = 29;
        InGameIds.CoUp = 31;
        InGameIds.TLMNSolo = 33;
        InGameIds.SamLocSolo = 35;
        InGameIds.BaiCao = 37;
        InGameIds.BaiCaoBien = 39;
        InGameIds.TaLaSolo = 41;
        InGameIds.Baccarat = 43;
        InGameIds.BlackJack = 45;
        InGameIds.XocDia = 47;
        InGameIds.Roullete = 49;
        InGameIds.Sicbo = 51;
        InGameIds.RongHo = 53;
        InGameIds.Catte = 57;
        InGameIds.MiniPoker = 101;
        InGameIds.HiLo = 105;
        InGameIds.MiniPhucSinh = 107;
        InGameIds.BauCua = 109;
        InGameIds.LuckyWild = 111;
        InGameIds.OTT = 113;
        InGameIds.XoSo = 115;
        InGameIds.TaiXiuMini = 117;
        InGameIds.Trading = 119;
        InGameIds.Keno = 121;
        InGameIds.Kingdom = 201;
        InGameIds.SamTruyen = 203;
        InGameIds.GaiNhay = 205;
        InGameIds.ThuyCung = 207;
        InGameIds.DaoVang = 209;
        InGameIds.RungVang = 211;
        InGameIds.ThanTai = 213;
        InGameIds.VuTruong = 215;
        InGameIds.TourPoker = 401;
        InGameIds.TourTLMN = 403;
        InGameIds.TourSamLoc = 405;
        InGameIds.TourOTT = 407;
        InGameIds.Sports = 501;
        InGameIds.PowerBall = 503;
        InGameIds.MegaMillion = 504;
        InGameIds.VirtualSports = 505;
        InGameIds.ESports = 507;
        InGameIds.FantasySport = 509;
        InGameIds.CaKiem = 601;
        InGameIds.TLN = 603;
        InGameIds.CaMap = 605;
        InGameIds.XuatKich = 607;
        InGameIds.PhiDoi = 609;
        //Not true
        InGameIds.SoDo = 0;
        InGameIds.LongVuong = 1;
        InGameIds.ABC = 2;
        InGameIds.TaiXiuLive = 1001;
        InGameIds.TaiXiuMD5Live = 1002;
        InGameIds.TaiXiuMD5 = 123;
        InGameIds.XocDiaLive = 59;
        InGameIds.XocdiaMd5Live = 61;
        InGameIds.CrabFishLive = 63;
        InGameIds.DragonTigerLive = 65;
        InGameIds.RouletteLive = 67;
        InGameIds.BaccaratLive = 69;
        InGameIds.SicboLive = 71;
        _Configs.InGameIds = InGameIds;
      })(Configs || (Configs = {}));
      var Configs$1 = exports('default', Configs);
      Configs.App.init();
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/ConfirmDialog.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Dialog.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, Dialog;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
    }, function (module) {
      Dialog = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;
      cclegacy._RF.push({}, "1e62bvjcqlAM6jYCVmvxJl0", "ConfirmDialog", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var ConfirmDialog = exports('default', (_dec = ccclass('ConfirmDialog'), _dec2 = property(Label), _dec(_class = (_class2 = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(ConfirmDialog, _Dialog);
        function ConfirmDialog() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Dialog.call.apply(_Dialog, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "lblMessage", _descriptor, _assertThisInitialized(_this));
          _this.onDismissed = null;
          _this.isConfirmed = false;
          _this.isClickdConfirm = false;
          return _this;
        }
        var _proto = ConfirmDialog.prototype;
        _proto.showMsg = function showMsg(msg, onDismissed) {
          this.isConfirmed = false;
          this.onDismissed = onDismissed != null ? onDismissed : null;
          this.lblMessage.string = msg;
          _Dialog.prototype.show.call(this);
        };
        _proto.show3 = function show3(msg, confirmTitle, onDismissed) {
          this.show4(msg, null, confirmTitle, onDismissed);
        };
        _proto.show4 = function show4(msg, doneTitle, confirmTitle, onDismissed) {
          this.isClickdConfirm = false;
          // this.lblDone.string = !doneTitle ? "Hủy" : doneTitle;
          // this.lblConfirm.string = !confirmTitle ? "Đồng ý" : confirmTitle;
          this.onDismissed = onDismissed;
          this.lblMessage.string = msg;
          _Dialog.prototype.show.call(this);
        };
        _proto.actConfirm = function actConfirm() {
          this.isConfirmed = true;
          this.dismiss();
        };
        _proto._onDismissed = function _onDismissed() {
          var _this$onDismissed;
          _Dialog.prototype._onDismissed.call(this);
          (_this$onDismissed = this.onDismissed) == null || _this$onDismissed.call(this, this.isConfirmed);
        };
        return ConfirmDialog;
      }(Dialog), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "lblMessage", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Dialog.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, director, Canvas, UITransform, UIOpacity, tween, v3, easing, Tween, EditBox, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      director = module.director;
      Canvas = module.Canvas;
      UITransform = module.UITransform;
      UIOpacity = module.UIOpacity;
      tween = module.tween;
      v3 = module.v3;
      easing = module.easing;
      Tween = module.Tween;
      EditBox = module.EditBox;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2;
      cclegacy._RF.push({}, "1282aEqzZdEqbK3w8qZxGrp", "Dialog", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var Dialog = exports('default', (_dec = ccclass('Dialog'), _dec2 = property(Node), _dec3 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(Dialog, _Component);
        function Dialog() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _this.isAnimated = true;
          _initializerDefineProperty(_this, "bg", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "container", _descriptor2, _assertThisInitialized(_this));
          _this.showScale = 1.0;
          _this.startScale = 0.7;
          return _this;
        }
        var _proto = Dialog.prototype;
        _proto.show = function show() {
          var _director$getScene$ge,
            _this2 = this;
          this.node.setSiblingIndex(this.node.parent.children.length - 1);
          if (!this.bg) this.bg = this.node.getChildByName("Bg");
          if (!this.container) this.container = this.node.getChildByName("Container");
          this.node.active = true;
          this.isAnimated = false;

          // Set size for bg
          var canvasNode = (_director$getScene$ge = director.getScene().getComponentInChildren(Canvas)) == null ? void 0 : _director$getScene$ge.node;
          if (canvasNode) {
            var _canvasNode$getCompon;
            var canvasSize = (_canvasNode$getCompon = canvasNode.getComponent(UITransform)) == null ? void 0 : _canvasNode$getCompon.contentSize;
            var bgTransform = this.bg.getComponent(UITransform);
            if (canvasSize && bgTransform) {
              bgTransform.setContentSize(canvasSize);
            }
          }

          // Animate bg opacity
          var bgOpacity = this.bg.getComponent(UIOpacity);
          if (bgOpacity) {
            bgOpacity.opacity = 0;
            tween(bgOpacity).to(0.2, {
              opacity: 128
            }).start();
          }

          // Animate container
          var containerOpacity = this.container.getComponent(UIOpacity);
          if (containerOpacity) {
            containerOpacity.opacity = 0;
          }
          this.container.setScale(this.startScale, this.startScale, 1);
          tween(this.container).parallel(tween().to(0.3, {
            scale: v3(this.showScale, this.showScale, 1)
          }, {
            easing: easing.backOut
          }), containerOpacity ? tween(containerOpacity).to(0.3, {
            opacity: 255
          }) : tween()).call(function () {
            return _this2._onShowed();
          }).start();

          // const transform = this.node.getComponent(UITransform);
          // if (transform) {
          //     transform.priority = 9999;
          // }

          // this.node.setSiblingIndex(0);
        };

        _proto.dismiss = function dismiss() {
          var _this3 = this;
          if (!this.isAnimated) return;
          if (!this.bg) this.bg = this.node.getChildByName("Bg");
          if (!this.container) this.container = this.node.getChildByName("Container");
          if (!this.bg || !this.container) return;
          Tween.stopAllByTarget(this.bg);
          Tween.stopAllByTarget(this.container);
          this.isAnimated = false;
          var bgOpacity = this.bg.getComponent(UIOpacity);
          if (bgOpacity) {
            tween(bgOpacity).to(0.2, {
              opacity: 0
            }).start();
          }
          var containerOpacity = this.container.getComponent(UIOpacity);
          if (containerOpacity) {
            containerOpacity.opacity = 255;
          }
          tween(this.container).to(0.3, {
            scale: v3(0.8, 0.8, 1)
          }, {
            easing: easing.backIn
          }).call(function () {
            if (containerOpacity) containerOpacity.opacity = 150;
            _this3._onDismissed();
          }).start();
        };
        _proto._onShowed = function _onShowed() {
          this.isAnimated = true;
          var edits = this.node.getComponentsInChildren(EditBox);
          edits.forEach(function (edit) {
            return edit.tabIndex = 0;
          });
        };
        _proto._onDismissed = function _onDismissed() {
          var edits = this.node.getComponentsInChildren(EditBox);
          edits.forEach(function (edit) {
            return edit.tabIndex = -1;
          });
          this.node.active = false;
          this.isAnimated = true;
        };
        return Dialog;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "bg", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "container", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/DQSignalRClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Config.ts', './Network.SignalRClient.ts'], function (exports) {
  var _inheritsLoose, cclegacy, Configs, SignalRClient;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      SignalRClient = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "cdd8eNukeRBYqAycvInhHmC", "DQSignalRClient", undefined);
      var DQSignalRClient = exports('default', /*#__PURE__*/function (_SignalRClient) {
        _inheritsLoose(DQSignalRClient, _SignalRClient);
        function DQSignalRClient() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _SignalRClient.call.apply(_SignalRClient, [this].concat(args)) || this;
          _this.onSuccess = void 0;
          return _this;
        }
        DQSignalRClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new DQSignalRClient();
          }
          return this.instance;
        };
        var _proto = DQSignalRClient.prototype;
        _proto.onstart = function onstart() {
          this.onSuccess(true);
        };
        _proto.onError = function onError() {
          this.onSuccess(false);
        };
        _proto.connectHub = function connectHub(onSuccess) {
          this.onSuccess = onSuccess;
          _SignalRClient.prototype.connect.call(this, Configs.App.DOMAIN_CONFIG['DancingHubUrl']);
        };
        return DQSignalRClient;
      }(SignalRClient));
      DQSignalRClient.instance = null;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/DragonTigerSignalRClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Config.ts', './App.ts', './Network.SignalRClient.ts'], function (exports) {
  var _inheritsLoose, cclegacy, Configs, App, SignalRClient;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      App = module.default;
    }, function (module) {
      SignalRClient = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "15bbbb2y89DvLcxeeMFrH5i", "DragonTigerSignalRClient", undefined);
      var DragonTigerSignalRClient = exports('default', /*#__PURE__*/function (_SignalRClient) {
        _inheritsLoose(DragonTigerSignalRClient, _SignalRClient);
        function DragonTigerSignalRClient() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _SignalRClient.call.apply(_SignalRClient, [this].concat(args)) || this;
          _this.onSuccess = void 0;
          return _this;
        }
        DragonTigerSignalRClient.getErrMsg = function getErrMsg(errCode) {
          return App.instance.getTextLang(("ca" + errCode).includes("ca-11000") ? "ca-110001" : "ca" + errCode);
        };
        DragonTigerSignalRClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new DragonTigerSignalRClient();
          }
          return this.instance;
        };
        var _proto = DragonTigerSignalRClient.prototype;
        _proto.onstart = function onstart() {
          this.onSuccess(true);
        };
        _proto.onError = function onError() {
          this.onSuccess(false);
        };
        _proto.connectHub = function connectHub(onSuccess) {
          this.onSuccess = onSuccess;
          _SignalRClient.prototype.connect.call(this, Configs.App.DOMAIN_CONFIG['DragonTigerHubUrl']);
        };
        return DragonTigerSignalRClient;
      }(SignalRClient));
      DragonTigerSignalRClient.instance = null;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/DropdownCalendarLobby.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Label, instantiate, UIOpacity, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Label = module.Label;
      instantiate = module.instantiate;
      UIOpacity = module.UIOpacity;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;
      cclegacy._RF.push({}, "4df750olNFIuZrkWoA4jWe1", "DropdownCalendarLobby", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property,
        menu = _decorator.menu;
      var DropdownCalendarLobby = exports('DropdownCalendarLobby', (_dec = ccclass('DropdownCalendarLobby'), _dec2 = menu("CustomUI/DropdownCalendar"), _dec3 = property(Node), _dec4 = property(Label), _dec5 = property(Node), _dec6 = property(Label), _dec7 = property(Node), _dec(_class = _dec2(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(DropdownCalendarLobby, _Component);
        function DropdownCalendarLobby() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "calendarPanel", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "selectedDateLabel", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "dayContainer", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "headerLabel", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "dayTemplate", _descriptor5, _assertThisInitialized(_this));
          _this.currentDate = new Date();
          _this._listener = {};
          return _this;
        }
        var _proto = DropdownCalendarLobby.prototype;
        _proto.start = function start() {
          this.calendarPanel.active = false;
          this.updateCalendar();
          this.selectedDateLabel.string = this.formatDate(this.currentDate);
        };
        _proto.onEnable = function onEnable() {};
        _proto.setListener = function setListener(listener) {
          this._listener = listener;
        };
        _proto.toggleCalendar = function toggleCalendar() {
          this.calendarPanel.active = !this.calendarPanel.active;
        };
        _proto.updateCalendar = function updateCalendar() {
          var _this2 = this;
          var year = this.currentDate.getFullYear();
          var month = this.currentDate.getMonth();
          var firstDay = new Date(year, month, 1).getDay();
          var daysInMonth = new Date(year, month + 1, 0).getDate();
          this.headerLabel.string = this.formatDate(this.currentDate);
          this.dayContainer.removeAllChildren();
          for (var i = 0; i < firstDay; i++) {
            var emptyNode = instantiate(this.dayTemplate);
            emptyNode.active = true;
            emptyNode.getComponent(UIOpacity).opacity = 0;
            this.dayContainer.addChild(emptyNode);
          }
          var _loop = function _loop(day) {
            var dayNode = instantiate(_this2.dayTemplate);
            dayNode.active = true;
            dayNode.getComponent(UIOpacity).opacity = 255;
            dayNode.on(Node.EventType.TOUCH_START, function () {
              _this2.selectDate(day, dayNode);
            });
            if (_this2.currentDate.getDate() == day) {
              dayNode.children[0].active = true;
            }
            var label = dayNode.getComponentInChildren(Label);
            label.string = day.toString().padStart(2, '0');
            _this2.dayContainer.addChild(dayNode);
          };
          for (var day = 1; day <= daysInMonth; day++) {
            _loop(day);
          }
        };
        _proto.selectDate = function selectDate(day, tempNode) {
          this.dayContainer.children.forEach(function (element) {
            element.children[0].active = false;
          });
          tempNode.children[0].active = true;
          this.currentDate.setDate(day);
          this.selectedDateLabel.string = this.formatDate(this.currentDate);
          this._listener.onChangeDate && this._listener.onChangeDate(this.currentDate);
        };
        _proto.changeMonth = function changeMonth(delta) {
          this.currentDate.setMonth(this.currentDate.getMonth() + delta);
          this.updateCalendar();
        };
        _proto.formatDate = function formatDate(date) {
          var year = date.getFullYear();
          var month = (date.getMonth() + 1).toString().padStart(2, '0'); // Ensure two digits
          var day = date.getDate().toString().padStart(2, '0'); // Ensure two digits
          return day + "-" + month + "-" + year; // Format YYYY-MM-DD in local time
        };

        _proto.onClickNavigate = function onClickNavigate(button, step) {
          this.changeMonth(parseInt(step));
        };
        return DropdownCalendarLobby;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "calendarPanel", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "selectedDateLabel", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "dayContainer", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "headerLabel", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "dayTemplate", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/DualCircleWave.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Component, UIOpacity, Vec3, tween;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Component = module.Component;
      UIOpacity = module.UIOpacity;
      Vec3 = module.Vec3;
      tween = module.tween;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6;
      cclegacy._RF.push({}, "d7c3dS4MXdLILml/ekUUoh1", "DualCircleWave", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var DualCircleWave = exports('DualCircleWave', (_dec = ccclass('DualCircleWave'), _dec2 = property(Node), _dec3 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(DualCircleWave, _Component);
        function DualCircleWave() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "circle1", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "circle2", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "startScale", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "endScale", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "duration", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "overlapRatio", _descriptor6, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = DualCircleWave.prototype;
        // Tỉ lệ chồng lấn giữa 2 hiệu ứng
        _proto.onLoad = function onLoad() {
          this.startWave();
        };
        _proto.startWave = function startWave() {
          var overlapTime = this.duration * this.overlapRatio;
          this.loopWave(this.circle1, 0);
          this.loopWave(this.circle2, this.duration * (1 - this.overlapRatio));
        };
        _proto.loopWave = function loopWave(circle, initialDelay) {
          var _this2 = this;
          var animate = function animate() {
            if (!circle) return;

            // Lấy hoặc thêm component UIOpacity để tween opacity
            var uiOpacity = circle.getComponent(UIOpacity);
            if (!uiOpacity) {
              uiOpacity = circle.addComponent(UIOpacity);
            }

            // Thiết lập lại trạng thái ban đầu
            var startScaleVec3 = new Vec3(_this2.startScale, _this2.startScale, _this2.startScale);
            var endScaleVec3 = new Vec3(_this2.endScale, _this2.endScale, _this2.endScale);
            circle.setScale(startScaleVec3);
            uiOpacity.opacity = 255;
            circle.active = true;
            var fadeStartTime = _this2.duration * 0.7;

            // Tween scale trước
            tween(circle).to(fadeStartTime, {
              scale: endScaleVec3
            }, {
              easing: 'sineOut'
            }).call(function () {
              // Sau khi scale xong, bắt đầu tween opacity
              tween(uiOpacity).to(_this2.duration - fadeStartTime, {
                opacity: 0
              }, {
                easing: 'sineOut'
              }).call(function () {
                animate(); // Lặp lại hiệu ứng
              }).start();
            }).start();
          };
          this.scheduleOnce(animate, initialDelay);
        };
        return DualCircleWave;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "circle1", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "circle2", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "startScale", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0.9;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "endScale", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 1.1;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "duration", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 1;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "overlapRatio", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0.3;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/EditboxFormat.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Utils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, EditBox, sys, Component, Utils;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      EditBox = module.EditBox;
      sys = module.sys;
      Component = module.Component;
    }, function (module) {
      Utils = module.Utils;
    }],
    execute: function () {
      var _dec, _class, _class2, _descriptor;
      cclegacy._RF.push({}, "163ebbctahNOYnSeq2OeDZe", "EditboxFormat", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var EditboxFormat = exports('default', (_dec = ccclass('EditboxFormat'), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(EditboxFormat, _Component);
        function EditboxFormat() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _this.edit = null;
          _initializerDefineProperty(_this, "isMutiple", _descriptor, _assertThisInitialized(_this));
          _this.number = 0;
          return _this;
        }
        var _proto = EditboxFormat.prototype;
        _proto.onLoad = function onLoad() {
          this.edit = this.getComponent(EditBox);
        };
        _proto.onChanged = function onChanged() {
          var temp = Utils.ToInt(this.edit.string);
          temp = Math.abs(temp);
          this.edit.string = Utils.ToVND(temp);
          if (sys.isBrowser) {
            this.edit.focus();
          }
        };
        _proto.onFormatName = function onFormatName() {
          this.edit.string = Utils.formatName(this.edit.string);
          if (sys.isBrowser) {
            this.edit.focus();
          }
        };
        _proto.onFormatNameMark = function onFormatNameMark() {
          this.edit.string = Utils.formatNameBank(this.edit.string);
          if (sys.isBrowser) {
            this.edit.focus();
          }
        };
        _proto.onEnded = function onEnded() {
          var _this2 = this;
          setTimeout(function () {
            var temp = Utils.ToInt(_this2.edit.string);
            if (_this2.isMutiple && temp > 1000) {
              var hs = 1000;
              if (temp % hs !== 0) {
                temp -= temp % hs;
              }
            }
            temp = Math.abs(temp);
            _this2.edit.string = Utils.ToVND(temp);
          }, 200);
        };
        return EditboxFormat;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "isMutiple", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return false;
        }
      }), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/EventBus.ts", ['cc'], function (exports) {
  var cclegacy, EventTarget;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
      EventTarget = module.EventTarget;
    }],
    execute: function () {
      cclegacy._RF.push({}, "647264mKUVISqlUYHGPXQZI", "EventBus", undefined);
      var eventBus = exports('default', new EventTarget());
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/EventIcon.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, SpriteFrame, Sprite, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      SpriteFrame = module.SpriteFrame;
      Sprite = module.Sprite;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;
      cclegacy._RF.push({}, "337e6Ml+AxCJpv8gmnHCv9m", "EventIcon", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var EventIcon = exports('EventIcon', (_dec = ccclass('EventIcon'), _dec2 = property(SpriteFrame), _dec3 = property(SpriteFrame), _dec4 = property(SpriteFrame), _dec5 = property(SpriteFrame), _dec6 = property(SpriteFrame), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(EventIcon, _Component);
        function EventIcon() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "iconX6", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "iconX5", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "iconX4", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "iconX3", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "iconX2", _descriptor5, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = EventIcon.prototype;
        _proto.onLoad = function onLoad() {
          this.node.getComponent(Sprite).spriteFrame = null;
        };
        _proto.setIcon = function setIcon(multiplier, nextJackpot) {
          if (nextJackpot === 0) {
            switch (multiplier) {
              case 2:
                this.node.getComponent(Sprite).spriteFrame = this.iconX2;
                break;
              case 3:
                this.node.getComponent(Sprite).spriteFrame = this.iconX3;
                break;
              case 4:
                this.node.getComponent(Sprite).spriteFrame = this.iconX4;
                break;
              case 5:
                this.node.getComponent(Sprite).spriteFrame = this.iconX5;
                break;
              case 6:
                this.node.getComponent(Sprite).spriteFrame = this.iconX6;
                break;
            }
            return;
          }
          this.node.getComponent(Sprite).spriteFrame = null;
        };
        return EventIcon;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "iconX6", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "iconX5", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "iconX4", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "iconX3", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "iconX2", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/EventX6Anim.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, UIOpacity, tween, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      UIOpacity = module.UIOpacity;
      tween = module.tween;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2, _descriptor3;
      cclegacy._RF.push({}, "e3c90BtxllAlJJaYUqkv72R", "EventX6Anim", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var EventX6Anim = exports('default', (_dec = ccclass('EventX6Anim'), _dec2 = property({
        type: Node
      }), _dec3 = property({
        type: Node
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(EventX6Anim, _Component);
        function EventX6Anim() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "sprite1", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "sprite2", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "duration", _descriptor3, _assertThisInitialized(_this));
          _this.isVisible = true;
          return _this;
        }
        var _proto = EventX6Anim.prototype;
        _proto.onLoad = function onLoad() {
          this.schedule(this.toggleSprites.bind(this), 0.5);
        };
        _proto.toggleSprites = function toggleSprites() {
          this.isVisible = !this.isVisible;
          this.fadeSprite(this.sprite1, this.isVisible, 0);
          this.fadeSprite(this.sprite2, this.isVisible, 0.15);
        };
        _proto.fadeSprite = function fadeSprite(node, show, delay) {
          if (delay === void 0) {
            delay = 0;
          }
          if (!node) return;
          var opacityComp = node.getComponent(UIOpacity);
          if (!opacityComp) {
            opacityComp = node.addComponent(UIOpacity);
          }
          var start = opacityComp.opacity;
          var end = show ? 255 : 0;
          var temp = {
            value: start
          };
          tween(temp).delay(delay).to(this.duration, {
            value: end
          }, {
            easing: 'quadInOut',
            onUpdate: function onUpdate() {
              opacityComp.opacity = Math.round(temp.value);
            }
          }).start();
        };
        return EventX6Anim;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "sprite1", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "sprite2", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "duration", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0.2;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/FilterCategory.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9;
      cclegacy._RF.push({}, "b0d34SSjDhC87lShqPCVY3s", "FilterCategory", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var FilterCategory = exports('default', (_dec = ccclass('FilterCategory'), _dec2 = property({
        type: Node
      }), _dec3 = property({
        type: Node
      }), _dec4 = property({
        type: Node
      }), _dec5 = property({
        type: Node
      }), _dec6 = property({
        type: Node
      }), _dec7 = property({
        type: Node
      }), _dec8 = property({
        type: Node
      }), _dec9 = property({
        type: Node
      }), _dec10 = property({
        type: Node
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(FilterCategory, _Component);
        function FilterCategory() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "nodeCategory", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "nodeGameCard", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "nodeGameCasino", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "nodeGameSkill", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "nodeSlot", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "nodeLottery", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "nodeSport", _descriptor7, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "nodeLive", _descriptor8, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "btnBack", _descriptor9, _assertThisInitialized(_this));
          _this.gameNodes = [];
          return _this;
        }
        var _proto = FilterCategory.prototype;
        _proto.start = function start() {
          var _this2 = this;
          this.gameNodes = [this.nodeGameCard, this.nodeSlot, this.nodeGameCasino, this.nodeGameSkill, this.nodeLive, this.nodeLottery, this.nodeSport];
          this.gameNodes.forEach(function (node) {
            return node.active = false;
          });
          this.nodeCategory.children.forEach(function (child, index) {
            child.on(Node.EventType.TOUCH_END, function () {
              // if (!Configs.Login.IsLogin) {
              //     App.instance.popupLoginForm.active = true;
              // } else {
              //     this.showGameNode(index);
              // }
              _this2.showGameNode(index);
            }, _this2);
          });
        };
        _proto.showGameNode = function showGameNode(index) {
          this.nodeCategory.active = false;
          this.gameNodes.forEach(function (node) {
            return node.active = false;
          });
          if (this.gameNodes[index]) {
            this.gameNodes[index].active = true;
          }
          this.btnBack.active = true;
        };
        _proto.goBack = function goBack() {
          this.nodeCategory.active = true;
          this.gameNodes.forEach(function (node) {
            return node.active = false;
          });
          this.btnBack.active = false;
        };
        return FilterCategory;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "nodeCategory", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "nodeGameCard", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "nodeGameCasino", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "nodeGameSkill", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "nodeSlot", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "nodeLottery", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "nodeSport", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "nodeLive", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "btnBack", [_dec10], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/FishHunterPhotonClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './PhotonClient.ts', './Config.ts'], function (exports) {
  var _inheritsLoose, cclegacy, PhotonClient, Configs;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      PhotonClient = module.PhotonClient;
    }, function (module) {
      Configs = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "19d40lweuJNvLwr4fO0VsmM", "FishHunterPhotonClient", undefined);
      var EOperationSubCodes = /*#__PURE__*/function (EOperationSubCodes) {
        EOperationSubCodes[EOperationSubCodes["Login"] = 1] = "Login";
        EOperationSubCodes[EOperationSubCodes["GetCaptcha"] = 2] = "GetCaptcha";
        EOperationSubCodes[EOperationSubCodes["CashInGold"] = 3] = "CashInGold";
        EOperationSubCodes[EOperationSubCodes["CashOutGold"] = 4] = "CashOutGold";
        EOperationSubCodes[EOperationSubCodes["JoinRoom"] = 5] = "JoinRoom";
        EOperationSubCodes[EOperationSubCodes["LeaveRoom"] = 6] = "LeaveRoom";
        EOperationSubCodes[EOperationSubCodes["OtherJoinRoom"] = 7] = "OtherJoinRoom";
        EOperationSubCodes[EOperationSubCodes["CreateFighter"] = 8] = "CreateFighter";
        EOperationSubCodes[EOperationSubCodes["RemoveFighter"] = 9] = "RemoveFighter";
        EOperationSubCodes[EOperationSubCodes["ChangeGun"] = 10] = "ChangeGun";
        EOperationSubCodes[EOperationSubCodes["PlayerShooting"] = 11] = "PlayerShooting";
        EOperationSubCodes[EOperationSubCodes["PlayerShotFish"] = 12] = "PlayerShotFish";
        EOperationSubCodes[EOperationSubCodes["UseTarget"] = 13] = "UseTarget";
        EOperationSubCodes[EOperationSubCodes["GetDoubleCanPlay"] = 14] = "GetDoubleCanPlay";
        EOperationSubCodes[EOperationSubCodes["PlayDouble"] = 15] = "PlayDouble";
        EOperationSubCodes[EOperationSubCodes["Chat"] = 21] = "Chat";
        EOperationSubCodes[EOperationSubCodes["ShowCommandMessage"] = 22] = "ShowCommandMessage";
        EOperationSubCodes[EOperationSubCodes["GetRoomInfo"] = 23] = "GetRoomInfo";
        EOperationSubCodes[EOperationSubCodes["GetCurrentJackpot"] = 24] = "GetCurrentJackpot";
        EOperationSubCodes[EOperationSubCodes["CashInHistory"] = 25] = "CashInHistory";
        EOperationSubCodes[EOperationSubCodes["CashOutHistory"] = 26] = "CashOutHistory";
        EOperationSubCodes[EOperationSubCodes["GetTopJackpot"] = 27] = "GetTopJackpot";
        EOperationSubCodes[EOperationSubCodes["PlayGameHistory"] = 28] = "PlayGameHistory";
        EOperationSubCodes[EOperationSubCodes["GetTopPlayer"] = 29] = "GetTopPlayer";
        EOperationSubCodes[EOperationSubCodes["Ping"] = 30] = "Ping";
        EOperationSubCodes[EOperationSubCodes["Pong"] = 31] = "Pong";
        EOperationSubCodes[EOperationSubCodes["CashoutMin"] = 32] = "CashoutMin";
        return EOperationSubCodes;
      }(EOperationSubCodes || {});
      var EParameterCodes = /*#__PURE__*/function (EParameterCodes) {
        EParameterCodes[EParameterCodes["OperationSubCode"] = 0] = "OperationSubCode";
        EParameterCodes[EParameterCodes["LoginMessage"] = 1] = "LoginMessage";
        EParameterCodes[EParameterCodes["LoginResponse"] = 2] = "LoginResponse";
        EParameterCodes[EParameterCodes["FishConfigsResponse"] = 3] = "FishConfigsResponse";
        EParameterCodes[EParameterCodes["GunConfigsResponse"] = 4] = "GunConfigsResponse";
        EParameterCodes[EParameterCodes["PingResponse"] = 5] = "PingResponse";
        EParameterCodes[EParameterCodes["PongMessage"] = 6] = "PongMessage";
        EParameterCodes[EParameterCodes["CreateFishResponse"] = 7] = "CreateFishResponse";
        EParameterCodes[EParameterCodes["RemoveSingleFishResponse"] = 8] = "RemoveSingleFishResponse";
        EParameterCodes[EParameterCodes["ClientParameterConfig"] = 10] = "ClientParameterConfig";
        EParameterCodes[EParameterCodes["JoinRoomResponse"] = 11] = "JoinRoomResponse";
        EParameterCodes[EParameterCodes["OtherJoinRoomResponse"] = 12] = "OtherJoinRoomResponse";
        EParameterCodes[EParameterCodes["LeaveRoomResponse"] = 13] = "LeaveRoomResponse";
        EParameterCodes[EParameterCodes["RoomInfoResponse"] = 15] = "RoomInfoResponse";
        EParameterCodes[EParameterCodes["ExchangeMessage"] = 16] = "ExchangeMessage";
        EParameterCodes[EParameterCodes["CashInResponse"] = 17] = "CashInResponse";
        EParameterCodes[EParameterCodes["CashOutResponse"] = 18] = "CashOutResponse";
        EParameterCodes[EParameterCodes["ExChangeHistoryResponse"] = 19] = "ExChangeHistoryResponse";
        EParameterCodes[EParameterCodes["TopJackpotResponse"] = 20] = "TopJackpotResponse";
        EParameterCodes[EParameterCodes["PlayHistoryResponse"] = 21] = "PlayHistoryResponse";
        EParameterCodes[EParameterCodes["CaptchaResponse"] = 22] = "CaptchaResponse";
        EParameterCodes[EParameterCodes["ChangeGunMessage"] = 23] = "ChangeGunMessage";
        EParameterCodes[EParameterCodes["ChangeGunResponse"] = 24] = "ChangeGunResponse";
        EParameterCodes[EParameterCodes["ShootingMessage"] = 25] = "ShootingMessage";
        EParameterCodes[EParameterCodes["ShootingResponse"] = 26] = "ShootingResponse";
        EParameterCodes[EParameterCodes["FishShotMessage"] = 27] = "FishShotMessage";
        EParameterCodes[EParameterCodes["HeadShotResponse"] = 28] = "HeadShotResponse";
        EParameterCodes[EParameterCodes["TimeToUse"] = 29] = "TimeToUse";
        EParameterCodes[EParameterCodes["DoubleConfigsResponse"] = 30] = "DoubleConfigsResponse";
        EParameterCodes[EParameterCodes["DoubleValuesCanPlay"] = 31] = "DoubleValuesCanPlay";
        EParameterCodes[EParameterCodes["DoubleMessage"] = 32] = "DoubleMessage";
        EParameterCodes[EParameterCodes["DoubleMessageResponse"] = 33] = "DoubleMessageResponse";
        EParameterCodes[EParameterCodes["ChatMessage"] = 38] = "ChatMessage";
        EParameterCodes[EParameterCodes["ChatResponse"] = 39] = "ChatResponse";
        EParameterCodes[EParameterCodes["ErrorCode"] = 40] = "ErrorCode";
        EParameterCodes[EParameterCodes["CurrencyId"] = 41] = "CurrencyId";
        EParameterCodes[EParameterCodes["CurrentJackpot"] = 42] = "CurrentJackpot";
        EParameterCodes[EParameterCodes["AccountId"] = 43] = "AccountId";
        EParameterCodes[EParameterCodes["PortalId"] = 44] = "PortalId";
        EParameterCodes[EParameterCodes["CashoutMinResponse"] = 45] = "CashoutMinResponse";
        return EParameterCodes;
      }(EParameterCodes || {});
      var FishHunterPhotonClient = exports('FishHunterPhotonClient', /*#__PURE__*/function (_PhotonClient) {
        _inheritsLoose(FishHunterPhotonClient, _PhotonClient);
        function FishHunterPhotonClient() {
          return _PhotonClient.apply(this, arguments) || this;
        }
        FishHunterPhotonClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new FishHunterPhotonClient();
          }
          return this.instance;
        };
        var _proto = FishHunterPhotonClient.prototype;
        _proto.connect = function connect() {
          _PhotonClient.prototype.connect.call(this, Configs.App.DOMAIN_CONFIG['FishHunterServerUrl']);
        };
        return FishHunterPhotonClient;
      }(PhotonClient));
      FishHunterPhotonClient.instance = void 0;
      FishHunterPhotonClient.EOperationSubCodes = EOperationSubCodes;
      FishHunterPhotonClient.EParameterCodes = EParameterCodes;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/FloatButton.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, EventHandler, Vec3, Node, UITransform, clamp, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      EventHandler = module.EventHandler;
      Vec3 = module.Vec3;
      Node = module.Node;
      UITransform = module.UITransform;
      clamp = module.clamp;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;
      cclegacy._RF.push({}, "389c8VcxbxLpqxdjGt+Pnf9", "FloatButton", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var FloatButton = exports('default', (_dec = ccclass('FloatButton'), _dec2 = property([EventHandler]), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(FloatButton, _Component);
        function FloatButton() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "onClick", _descriptor, _assertThisInitialized(_this));
          _this._startPos = new Vec3();
          _this._offset = new Vec3();
          _this._touchMoved = false;
          return _this;
        }
        var _proto = FloatButton.prototype;
        _proto.onLoad = function onLoad() {
          this.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this);
          this.node.on(Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
          this.node.on(Node.EventType.TOUCH_END, this.onTouchEnd, this);
          this.node.on(Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);
        };
        _proto.distance2Point = function distance2Point(p1, p2) {
          return Vec3.distance(p1, p2);
        };
        _proto.onTouchStart = function onTouchStart(event) {
          var touchLoc = event.getUILocation();
          var parent = this.node.parent;
          if (!parent) return;
          var localPos = parent.getComponent(UITransform).convertToNodeSpaceAR(new Vec3(touchLoc.x, touchLoc.y, 0));
          this._offset = this.node.position.clone().subtract(localPos);
          this._startPos.set(this.node.position);
          this._touchMoved = false;
        };
        _proto.onTouchMove = function onTouchMove(event) {
          var touchLoc = event.getUILocation();
          var parent = this.node.parent;
          if (!parent) return;
          var localPos = parent.getComponent(UITransform).convertToNodeSpaceAR(new Vec3(touchLoc.x, touchLoc.y, 0));
          var newPos = localPos.add(this._offset);
          var parentTransform = parent.getComponent(UITransform);
          var thisTransform = this.node.getComponent(UITransform);
          var halfParentW = parentTransform.width / 2;
          var halfParentH = parentTransform.height / 2;
          var halfNodeW = thisTransform.width / 2;
          var halfNodeH = thisTransform.height / 2;
          newPos.x = clamp(newPos.x, -halfParentW + halfNodeW, halfParentW - halfNodeW);
          newPos.y = clamp(newPos.y, -halfParentH + halfNodeH, halfParentH - halfNodeH);
          this.node.setPosition(newPos);
          this._touchMoved = true;
        };
        _proto.onTouchEnd = function onTouchEnd(event) {
          var _this2 = this;
          var currentPos = this.node.position;
          var moveDistance = this.distance2Point(this._startPos, currentPos);
          if (!this._touchMoved || moveDistance < 10) {
            this.onClick.forEach(function (handler) {
              handler == null || handler.emit([_this2]);
            });
          }
        };
        return FloatButton;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "onClick", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/ForestSignalRClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Config.ts', './Network.SignalRClient.ts'], function (exports) {
  var _inheritsLoose, cclegacy, Configs, SignalRClient;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      SignalRClient = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "29c865bQgZDg43fRKQZHkn0", "ForestSignalRClient", undefined);
      var ForestSignalRClient = exports('default', /*#__PURE__*/function (_SignalRClient) {
        _inheritsLoose(ForestSignalRClient, _SignalRClient);
        function ForestSignalRClient() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _SignalRClient.call.apply(_SignalRClient, [this].concat(args)) || this;
          _this.onSuccess = void 0;
          return _this;
        }
        ForestSignalRClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new ForestSignalRClient();
          }
          return this.instance;
        };
        var _proto = ForestSignalRClient.prototype;
        _proto.onstart = function onstart() {
          this.onSuccess(true);
        };
        _proto.onError = function onError() {
          this.onSuccess(false);
        };
        _proto.connectHub = function connectHub(onSuccess) {
          this.onSuccess = onSuccess;
          _SignalRClient.prototype.connect.call(this, Configs.App.DOMAIN_CONFIG['ForestHubUrl']);
        };
        return ForestSignalRClient;
      }(SignalRClient));
      ForestSignalRClient.instance = null;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/FullScreen.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, Widget, Button, view, sys, UITransform, size, Component;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Widget = module.Widget;
      Button = module.Button;
      view = module.view;
      sys = module.sys;
      UITransform = module.UITransform;
      size = module.size;
      Component = module.Component;
    }],
    execute: function () {
      var _class;
      cclegacy._RF.push({}, "ec0a6JfFtxLx7m2P6QRkcOe", "FullScreen", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var NewClass = exports('default', ccclass(_class = /*#__PURE__*/function (_Component) {
        _inheritsLoose(NewClass, _Component);
        function NewClass() {
          return _Component.apply(this, arguments) || this;
        }
        var _proto = NewClass.prototype;
        _proto.start = function start() {
          this.addComponent(Widget);
          var widget = this.getComponent(Widget);

          // 
          console.log(widget.horizontalCenter);
          // widget.horizontalCenter = 4
          widget.left = 0;
          widget.right = 0;
          widget.bottom = 0;
          widget.top = 0;
          widget.alignMode = Widget.AlignMode.ALWAYS;
          this.addComponent(Button);
          this.getComponent(Button).node.on('click', function (button) {
            console.log("nuot touch");
          }, this);
          console.log("nuot touch");
          console.log(view.getViewportRect().width);
          console.log(view.getViewportRect().height);
          if (!sys.isBrowser) {
            this.fixMultiScreen();
          }
        };
        _proto.onclick = function onclick() {
          console.log("nuot touch");
        };
        _proto.fixMultiScreen = function fixMultiScreen() {
          var ratiozz = 1920 / view.getViewportRect().width;
          if (view.getViewportRect().width / view.getViewportRect().height > 1920 / 1080) {
            this.node.getComponent(UITransform).setContentSize(size(view.getViewportRect().width * 1080 / view.getViewportRect().height, 1080));
          } else {
            this.node.getComponent(UITransform).setContentSize(size(view.getViewportRect().width * ratiozz, view.getViewportRect().height * ratiozz));
          }
        };
        _proto.update = function update(deltaTime) {
          if (sys.isBrowser) {
            this.fixMultiScreen();
          }
        }

        // update (dt) {}
        ;

        return NewClass;
      }(Component)) || _class);
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Global.ts", ['cc'], function (exports) {
  var cclegacy, _decorator;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
    }],
    execute: function () {
      var _dec, _class, _class2;
      cclegacy._RF.push({}, "da855jPEmhNOoGbu1lbcDwB", "Global", undefined);
      var ccclass = _decorator.ccclass;
      var Global = exports('Global', (_dec = ccclass('Global'), _dec(_class = (_class2 = function Global() {}, _class2.PopupProfile = null, _class2.PopupSecurity = null, _class2.LobbyController = null, _class2.PopupGoldTicket = null, _class2.BundleLobby = null, _class2.isLoginFromOtherPlaces = false, _class2.LanguageManager = null, _class2.DOMAIN_CONFIG = null, _class2.DOMAIN_CONFIG_FULL_88 = null, _class2.RsaPublicKey = null, _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/GraphicsQRCode.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './QRCode.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, UITransform, Graphics, Component, Color, Size, QRCode;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      UITransform = module.UITransform;
      Graphics = module.Graphics;
      Component = module.Component;
      Color = module.Color;
      Size = module.Size;
    }, function (module) {
      QRCode = module.QRCode;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;
      cclegacy._RF.push({}, "7f5f8GloIBPu4x58ysrUyYF", "GraphicsQRCode", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var GraphicsQRCode = exports('GraphicsQRCode', (_dec = ccclass('GraphicsQRCode'), _dec2 = property({
        tooltip: "生成二维码的字符串"
      }), _dec3 = property({
        tooltip: "二维码背景色"
      }), _dec4 = property({
        tooltip: "二维码颜色"
      }), _dec5 = property({
        tooltip: "二维码边距"
      }), _dec6 = property({
        tooltip: "二维码节点大小"
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(GraphicsQRCode, _Component);
        function GraphicsQRCode() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "string", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "backColor", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "foreColor", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "margin", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "size", _descriptor5, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = GraphicsQRCode.prototype;
        _proto.onLoad = function onLoad() {
          this.node.getComponent(UITransform).setContentSize(this.size);
        };
        _proto.setURL = function setURL(url) {
          this.string = url;
        };
        _proto.createQRCode = function createQRCode(viewSize) {
          var nodeTransform = this.node.getComponent(UITransform);
          if (viewSize) nodeTransform.setContentSize(viewSize);
          var graphics = this.node.getComponent(Graphics);
          graphics.clear();
          //背景色
          graphics.fillColor = this.backColor;
          var width = nodeTransform.width;
          var offsetX = -width * nodeTransform.anchorX;
          var offsetY = -width * nodeTransform.anchorY;
          graphics.rect(offsetX, offsetY, width, width);
          graphics.fill();
          graphics.close();
          //生成二维码数据
          var qrcode = new QRCode(-1, 2);
          qrcode.addData(this.string);
          qrcode.make();
          graphics.fillColor = this.foreColor;
          var size = width - this.margin * 2;
          var num = qrcode.getModuleCount();
          var tileW = size / num;
          var tileH = size / num;
          var w = Math.ceil(tileW);
          var h = Math.ceil(tileH);
          for (var row = 0; row < num; row++) {
            for (var col = 0; col < num; col++) {
              if (qrcode.isDark(row, col)) {
                graphics.rect(offsetX + this.margin + col * tileW, offsetX + size - tileH - Math.round(row * tileH) + this.margin, w, h);
                graphics.fill();
              }
            }
          }
        };
        return GraphicsQRCode;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "string", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return "Hello World!";
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "backColor", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return new Color().fromHEX("#FFFFFF");
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "foreColor", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return new Color().fromHEX("#000000");
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "margin", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 10;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "size", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return new Size(200, 200);
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Http.ts", ['cc', './Utils.ts', './Config.ts', './App.ts'], function (exports) {
  var cclegacy, log, sys, Utils, Configs, App;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
      log = module.log;
      sys = module.sys;
    }, function (module) {
      Utils = module.Utils;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      App = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "17a14hkyrVCAI/rGSoecIsH", "Http", undefined);
      var Http = exports('default', /*#__PURE__*/function () {
        function Http() {}
        Http.post = function post(url, params, onFinished, isShowError) {
          if (isShowError === void 0) {
            isShowError = true;
          }
          var xhr = new XMLHttpRequest();
          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              try {
                var data = JSON.parse(xhr.responseText);
                if (isShowError && data['c'] < 0 && data['r']) {
                  App.instance.alertDialog.showMsg(data['r']);
                }
                onFinished(xhr.status, data);
              } catch (e) {
                log("Error parsing JSON response: ", e);
              }
            }
          };
          xhr.open("POST", url, true);
          this.setHeaders(xhr);
          xhr.send(JSON.stringify(params));
        };
        Http.get = function get(url, params, onFinished, isShowError) {
          if (isShowError === void 0) {
            isShowError = true;
          }
          var xhr = new XMLHttpRequest();
          url = url.split("?")[0];
          for (var key in params) {
            if (params.hasOwnProperty(key)) {
              if (url.indexOf("?") === -1) {
                url += "?" + key + "=" + params[key];
              } else {
                url += "&" + key + "=" + params[key];
              }
            }
          }
          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              try {
                var data = JSON.parse(xhr.responseText);
                if (isShowError && data['c'] < 0 && data['r']) {
                  App.instance.alertDialog.showMsg(data['r']);
                }
                onFinished(xhr.status, data);
              } catch (e) {
                log("Error parsing JSON response: ", e);
              }
            }
          };
          xhr.open("GET", url, true);
          this.setHeaders(xhr);
          xhr.send();
        };
        Http.setHeaders = function setHeaders(xhr) {
          xhr.setRequestHeader("Content-type", "application/json");
          xhr.setRequestHeader("client-token", Utils.getStorageKey('client-token'));
          xhr.setRequestHeader("client-deviceid", Utils.getDeviceId());
          xhr.setRequestHeader("lang", Utils.getStorageKey('locale') || "vi");
          xhr.setRequestHeader("checksum", "");
          if (Configs.Login.AccessToken !== "") {
            xhr.setRequestHeader("Authorization", "Bearer " + Configs.Login.AccessToken);
          }
          if (Utils.isBrowser() == false) {
            xhr.setRequestHeader("client-bundleid", Utils.getBundle());
            xhr.setRequestHeader("client-ostype", sys.os === sys.OS.IOS ? 'IOS' : 'ANDROID');
          }
        };
        return Http;
      }());
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/ImageSequenceLoop.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, UIOpacity, tween, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      UIOpacity = module.UIOpacity;
      tween = module.tween;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor, _descriptor2;
      cclegacy._RF.push({}, "1796eFmPAZIHY+ShKpH97d+", "ImageSequenceLoop", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var ImageSequenceLoop = exports('default', (_dec = ccclass('ImageSequenceLoop'), _dec2 = property({
        type: [Node]
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(ImageSequenceLoop, _Component);
        function ImageSequenceLoop() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "images", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "interval", _descriptor2, _assertThisInitialized(_this));
          _this.currentIndex = 0;
          return _this;
        }
        var _proto = ImageSequenceLoop.prototype;
        _proto.onLoad = function onLoad() {
          this.images.forEach(function (img) {
            var opacityComp = img.getComponent(UIOpacity);
            if (!opacityComp) {
              opacityComp = img.addComponent(UIOpacity);
            }
            opacityComp.opacity = 0;
            img.active = true;
          });
          this.schedule(this.showNextImageSmooth.bind(this), this.interval);
        };
        _proto.showNextImageSmooth = function showNextImageSmooth() {
          var prevIndex = (this.currentIndex - 1 + this.images.length) % this.images.length;
          var prevNode = this.images[prevIndex];
          var currentNode = this.images[this.currentIndex];
          var prevOpacity = prevNode.getComponent(UIOpacity);
          var currentOpacity = currentNode.getComponent(UIOpacity);
          if (prevOpacity && currentOpacity) {
            tween(prevOpacity).to(0.3, {
              opacity: 0
            }).start();
            tween(currentOpacity).to(0.3, {
              opacity: 255
            }).start();
          }
          this.currentIndex = (this.currentIndex + 1) % this.images.length;
        };
        _proto.onDisable = function onDisable() {
          this.unschedule(this.showNextImageSmooth);
        };
        return ImageSequenceLoop;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "images", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "interval", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0.3;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/InfoView.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './App.ts', './Config.ts', './Utils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, Sprite, Component, App, Configs, Utils;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
      Sprite = module.Sprite;
      Component = module.Component;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      Utils = module.Utils;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;
      cclegacy._RF.push({}, "c25c5sqzj9EEI1WjTg7eE7a", "InfoView", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var InfoView = exports('InfoView', (_dec = ccclass('InfoView'), _dec2 = property(Label), _dec3 = property(Label), _dec4 = property(Sprite), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(InfoView, _Component);
        function InfoView() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "lblName", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblGold", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "avatarSprite", _descriptor3, _assertThisInitialized(_this));
          _this._username = void 0;
          _this._avatarID = void 0;
          _this._balance = void 0;
          return _this;
        }
        var _proto = InfoView.prototype;
        _proto.setInfo = function setInfo(username, avatarID, balance) {
          this._username = username;
          this._avatarID = avatarID;
          this._balance = balance;
          this.updateInfo();
        };
        _proto.updateInfo = function updateInfo() {
          this.lblName.string = this._username;
          this.lblGold.string = Utils.formatNumber(this._balance);
          this.avatarSprite.spriteFrame = App.instance.getAvatarSpriteFrame(this._avatarID);
        };
        _proto.start = function start() {
          this.setInfo(Configs.Login.Nickname, Configs.Login.Avatar, Configs.Login.GoldBalance);
        };
        return InfoView;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "lblName", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "lblGold", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "avatarSprite", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/ItemInbox.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './MyInbox.ts', './App.ts', './Utils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, Node, Color, Component, MyInbox, App, Utils;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
      Node = module.Node;
      Color = module.Color;
      Component = module.Component;
    }, function (module) {
      MyInbox = module.default;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Utils = module.Utils;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6;
      cclegacy._RF.push({}, "a2b2b+ds3xHbZk6BlvJ3PBW", "ItemInbox", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var ItemInbox = exports('default', (_dec = property(Label), _dec2 = property(Label), _dec3 = property(Label), _dec4 = property(MyInbox), _dec5 = property(Node), _dec6 = property([Node]), ccclass(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(ItemInbox, _Component);
        function ItemInbox() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "title", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "content", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "body", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "myInbox", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "btnDelete", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lsActive", _descriptor6, _assertThisInitialized(_this));
          _this.data = null;
          return _this;
        }
        var _proto = ItemInbox.prototype;
        _proto.setData = function setData(data) {
          this.data = data;
          this.title.string = data['subject'];
          this.body.string = data['body'];
          this.content.string = App.instance.getTextLang("ib2") + " " + data['from'] + " - " + App.instance.getTextLang("hi02") + " " + Utils.formatDatetime(data['createdDate'], "dd/MM/yyyy");
          this.btnDelete.active = data['allowDelete'];
          if (data["status"] == 0) {
            this.title.color = Color.BLACK.fromHEX("#FFF83F");
            this.content.color = Color.BLACK.fromHEX("#feca85");
          } else {
            this.updateStatusRead();
          }
        };
        _proto.updateStatusRead = function updateStatusRead() {
          this.title.color = Color.BLACK.fromHEX("#c6bbf8");
          this.content.color = Color.BLACK.fromHEX("#8478bd");
          this.lsActive.forEach(function (element) {
            element.active = false;
          });
        };
        _proto.onClick = function onClick() {
          this.myInbox.readInbox(this.data);
          this.node.children[0].active = !this.node.children[0].active;
          this.updateStatusRead();
        };
        _proto.onDelete = function onDelete() {
          this.node.removeFromParent();
          this.myInbox.deleteBox(this.data);
        };
        return ItemInbox;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "title", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "content", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "body", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "myInbox", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "btnDelete", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "lsActive", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/KingdomSignalRClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Config.ts', './Network.SignalRClient.ts'], function (exports) {
  var _inheritsLoose, cclegacy, Configs, SignalRClient;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      SignalRClient = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "40125R+0MlIzqQX4EEEy4uB", "KingdomSignalRClient", undefined);
      var KingdomSignalRClient = exports('default', /*#__PURE__*/function (_SignalRClient) {
        _inheritsLoose(KingdomSignalRClient, _SignalRClient);
        function KingdomSignalRClient() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _SignalRClient.call.apply(_SignalRClient, [this].concat(args)) || this;
          _this.onSuccess = void 0;
          return _this;
        }
        KingdomSignalRClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new KingdomSignalRClient();
          }
          return this.instance;
        };
        var _proto = KingdomSignalRClient.prototype;
        _proto.onstart = function onstart() {
          this.onSuccess(true);
        };
        _proto.onError = function onError() {
          this.onSuccess(false);
        };
        _proto.connectHub = function connectHub(onSuccess) {
          this.onSuccess = onSuccess;
          _SignalRClient.prototype.connect.call(this, Configs.App.DOMAIN_CONFIG['KingdomHubUrl']);
        };
        return KingdomSignalRClient;
      }(SignalRClient));
      KingdomSignalRClient.instance = null;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/LabelSlotHu.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10;
      cclegacy._RF.push({}, "1ececvNs1FE9KpS6HEgT1El", "LabelSlotHu", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var LabelSlotHu = exports('LabelSlotHu', (_dec = ccclass('LabelSlotHu'), _dec2 = property(Label), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(LabelSlotHu, _Component);
        function LabelSlotHu() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "label", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "milestone", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "finalNumber", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "fastDuration", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "minStep", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "maxStep", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "allowPauseInPhase2", _descriptor7, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "pauseChance", _descriptor8, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "minPause", _descriptor9, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "maxPause", _descriptor10, _assertThisInitialized(_this));
          _this.currentValue = 0;
          _this._isRunning = false;
          return _this;
        }
        var _proto = LabelSlotHu.prototype;
        _proto.onLoad = function onLoad() {
          this.startCounter();
        };
        _proto.onEnable = function onEnable() {
          if (!this._isRunning) {
            this.startCounter();
          }
        };
        _proto.startCounter = function startCounter() {
          this._isRunning = true;
          this.runSequence();
        };
        _proto.runSequence = function runSequence() {
          var _this2 = this;
          this.currentValue = 0;
          if (this.label) {
            this.label.string = "0";
          }
          var fastStep = function fastStep(dt) {
            var step = _this2.milestone / (_this2.fastDuration / dt);
            _this2.currentValue += step;
            if (_this2.currentValue >= _this2.milestone) {
              _this2.currentValue = _this2.milestone;
              _this2.unschedule(fastStep);
              _this2.schedule(slowRandomStep, 0.05);
            }
            _this2.updateLabel();
          };
          var slowRandomStep = function slowRandomStep() {
            var randomStep = Math.floor(Math.random() * (_this2.maxStep - _this2.minStep)) + _this2.minStep;
            _this2.currentValue += randomStep;
            if (_this2.currentValue >= _this2.finalNumber) {
              _this2.currentValue = _this2.finalNumber;
              _this2.unschedule(slowRandomStep);
              _this2.scheduleOnce(function () {
                _this2.runSequence();
              }, 1);
            }
            _this2.updateLabel();
            if (_this2.allowPauseInPhase2 && Math.random() < _this2.pauseChance) {
              var pauseTime = Math.random() * (_this2.maxPause - _this2.minPause) + _this2.minPause;
              _this2.unschedule(slowRandomStep);
              _this2.scheduleOnce(function () {
                _this2.schedule(slowRandomStep, 0.05);
              }, pauseTime);
            }
          };
          this.schedule(fastStep, 0);
        };
        _proto.updateLabel = function updateLabel() {
          if (this.label) {
            this.label.string = Math.floor(this.currentValue).toLocaleString('de-DE');
          }
        };
        _proto.onDisable = function onDisable() {
          this._isRunning = false;
          this.unscheduleAllCallbacks();
        };
        return LabelSlotHu;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "label", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "milestone", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 1000;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "finalNumber", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 5000;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "fastDuration", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 2;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "minStep", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 100;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "maxStep", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 1000;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "allowPauseInPhase2", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return true;
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "pauseChance", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0.2;
        }
      }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "minPause", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 1;
        }
      }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "maxPause", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 2;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Language.Label.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Language.LanguageManager.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, CCString, CCBoolean, Component, LanguageManager;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
      CCString = module.CCString;
      CCBoolean = module.CCBoolean;
      Component = module.Component;
    }, function (module) {
      LanguageManager = module.LanguageManager;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3;
      cclegacy._RF.push({}, "47fcfrB4HZCEqoTqVimESy9", "Language.Label", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property,
        requireComponent = _decorator.requireComponent,
        menu = _decorator.menu;
      var LanguageLabel = exports('LanguageLabel', (_dec = ccclass("LanguageLabel"), _dec2 = menu("Language/Label"), _dec3 = requireComponent(Label), _dec4 = property(CCString), _dec5 = property(CCBoolean), _dec6 = property(CCBoolean), _dec(_class = _dec2(_class = _dec3(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(LanguageLabel, _Component);
        function LanguageLabel() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "id", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "isUpperCase", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "useCustomFont", _descriptor3, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = LanguageLabel.prototype;
        _proto.start = function start() {
          var _this2 = this;
          LanguageManager.instance.addListener(function () {
            _this2.updateText();
          }, this);
          this.updateText();
        };
        _proto.updateText = function updateText() {
          var str = LanguageManager.instance.getString(this.id);
          if (str != null && str.trim().length == 0) {
            return;
          }
          if (this.isUpperCase) {
            str = str.toUpperCase();
          }
          this.getComponent(Label).string = str;
          if (this.useCustomFont == false) {
            this.getComponent(Label).font = LanguageManager.instance.getFont();
          }
        };
        return LanguageLabel;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "id", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return "";
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "isUpperCase", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return false;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "useCustomFont", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return false;
        }
      })), _class2)) || _class) || _class) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Language.LanguageManager.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, JsonAsset, Font, sys, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      JsonAsset = module.JsonAsset;
      Font = module.Font;
      sys = module.sys;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _class3;
      cclegacy._RF.push({}, "ddbe6RIye1Hj7hO/+3ryW0/", "Language.LanguageManager", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var LanguageManager = exports('LanguageManager', (_dec = ccclass("LanguageManager"), _dec2 = property(JsonAsset), _dec3 = property(Font), _dec4 = property(Font), _dec5 = property(Font), _dec6 = property(Font), _dec(_class = (_class2 = (_class3 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(LanguageManager, _Component);
        function LanguageManager() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "json", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "fontDefault", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "fontZh", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "fontKm", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "fontTh", _descriptor5, _assertThisInitialized(_this));
          _this.locale = "vi";
          _this.texts = {};
          _this.listeners = [];
          _this.currentFont = null;
          return _this;
        }
        var _proto = LanguageManager.prototype;
        _proto.onLoad = function onLoad() {
          LanguageManager.instance = this;
          this.texts = this.json.json;
          this.locale = sys.localStorage.getItem("locale") || "vi";
          this.setFontCurrent();
        };
        _proto.setFontCurrent = function setFontCurrent() {
          switch (this.locale) {
            case "vi":
            case "en":
            case "id":
              this.currentFont = this.fontDefault;
              break;
            case "km":
              this.currentFont = this.fontKm;
              break;
            case "th":
              this.currentFont = this.fontTh;
              break;
            case "zh":
              this.currentFont = this.fontZh;
              break;
            default:
              this.currentFont = this.fontDefault;
              break;
          }
          return this.currentFont;
        };
        _proto.setLanguage = function setLanguage(locale) {
          this.locale = locale;
          sys.localStorage.setItem("locale", locale);
          this.setFontCurrent();
          for (var i = 0; i < this.listeners.length; i++) {
            var listener = this.listeners[i];
            if (listener.target && listener.target instanceof Object && listener.target.node) {
              listener.callback(locale);
            } else {
              this.listeners.splice(i, 1);
              i--;
            }
          }
        };
        _proto.addListener = function addListener(callback, target) {
          this.listeners.push({
            callback: callback,
            target: target
          });
        };
        _proto.getString = function getString(id) {
          if (this.texts.hasOwnProperty(id)) {
            if (this.texts[id].hasOwnProperty(this.locale)) {
              return this.texts[id][this.locale] == "" ? this.texts[id]["en"] : this.texts[id][this.locale];
            }
          }
          return id;
        };
        _proto.getFont = function getFont() {
          return this.currentFont;
        };
        return LanguageManager;
      }(Component), _class3.instance = null, _class3), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "json", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "fontDefault", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "fontZh", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "fontKm", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "fontTh", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Language.RichText.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Language.LanguageManager.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, RichText, CCString, CCBoolean, Component, LanguageManager;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      RichText = module.RichText;
      CCString = module.CCString;
      CCBoolean = module.CCBoolean;
      Component = module.Component;
    }, function (module) {
      LanguageManager = module.LanguageManager;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2;
      cclegacy._RF.push({}, "50d0eh1/MBP9bsRMPNN7Xbr", "Language.RichText", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property,
        requireComponent = _decorator.requireComponent,
        menu = _decorator.menu;
      var LanguageRichText = exports('LanguageRichText', (_dec = ccclass("LanguageRichText"), _dec2 = menu("Language/RichText"), _dec3 = requireComponent(RichText), _dec4 = property(CCString), _dec5 = property(CCBoolean), _dec(_class = _dec2(_class = _dec3(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(LanguageRichText, _Component);
        function LanguageRichText() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "id", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "isUpperCase", _descriptor2, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = LanguageRichText.prototype;
        _proto.start = function start() {
          var _this2 = this;
          LanguageManager.instance.addListener(function () {
            _this2.updateText();
          }, this);
          this.updateText();
        };
        _proto.updateText = function updateText() {
          var str = LanguageManager.instance.getString(this.id);
          if (str != null && str.trim().length == 0) {
            return;
          }
          if (this.isUpperCase) {
            str = str.toUpperCase();
          }
          this.getComponent(RichText).string = str;
        };
        return LanguageRichText;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "id", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return "";
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "isUpperCase", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return false;
        }
      })), _class2)) || _class) || _class) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Language.Sprite.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Language.LanguageManager.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Sprite, SpriteFrame, Component, LanguageManager;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Sprite = module.Sprite;
      SpriteFrame = module.SpriteFrame;
      Component = module.Component;
    }, function (module) {
      LanguageManager = module.LanguageManager;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6;
      cclegacy._RF.push({}, "d12e0gfdzJKtpZd8H4K9/SU", "Language.Sprite", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property,
        requireComponent = _decorator.requireComponent,
        menu = _decorator.menu;
      var LanguageSprite = exports('LanguageSprite', (_dec = ccclass("LanguageSprite"), _dec2 = menu("Language/Sprite"), _dec3 = requireComponent(Sprite), _dec4 = property(SpriteFrame), _dec5 = property(SpriteFrame), _dec6 = property(SpriteFrame), _dec7 = property(SpriteFrame), _dec8 = property(SpriteFrame), _dec9 = property(SpriteFrame), _dec(_class = _dec2(_class = _dec3(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(LanguageSprite, _Component);
        function LanguageSprite() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "viet", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "eng", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "thai", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "indo", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "cam", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "china", _descriptor6, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = LanguageSprite.prototype;
        _proto.start = function start() {
          var _this2 = this;
          LanguageManager.instance.addListener(function () {
            _this2.updateSpriteFrame();
          }, this);
          this.updateSpriteFrame();
        };
        _proto.updateSpriteFrame = function updateSpriteFrame() {
          switch (LanguageManager.instance.locale) {
            case "vi":
              this.getComponent(Sprite).spriteFrame = this.viet;
              break;
            case "en":
              this.getComponent(Sprite).spriteFrame = this.eng;
              break;
            case "id":
              this.getComponent(Sprite).spriteFrame = this.indo;
              break;
            case "km":
              this.getComponent(Sprite).spriteFrame = this.cam;
              break;
            case "th":
              this.getComponent(Sprite).spriteFrame = this.thai;
              break;
            case "zh":
              this.getComponent(Sprite).spriteFrame = this.china;
              break;
            default:
              this.getComponent(Sprite).spriteFrame = this.viet;
              break;
          }
        };
        return LanguageSprite;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "viet", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "eng", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "thai", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "indo", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "cam", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "china", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class) || _class) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/LightBlink.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor, _descriptor2, _descriptor3;
      cclegacy._RF.push({}, "3d263YAvGRFmKb/sqdOQfeg", "LightBlink", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var NewClass = exports('default', (_dec = property(Node), _dec2 = property(Node), ccclass(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(NewClass, _Component);
        function NewClass() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "lightsGroup1", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lightsGroup2", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "blinkInterval", _descriptor3, _assertThisInitialized(_this));
          // thời gian đổi đèn (giây)
          _this.currentGroup = 1;
          return _this;
        }
        var _proto = NewClass.prototype;
        _proto.onLoad = function onLoad() {
          this.schedule(this.toggleLights, this.blinkInterval);
        };
        _proto.toggleLights = function toggleLights() {
          var active1 = this.currentGroup === 1;
          this.lightsGroup1.active = active1;
          this.lightsGroup2.active = !active1;
          this.currentGroup = active1 ? 2 : 1;
        }

        // update (dt) {}
        ;

        return NewClass;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "lightsGroup1", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "lightsGroup2", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "blinkInterval", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0.25;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Loader.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Vec3, UIOpacity, tween, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Vec3 = module.Vec3;
      UIOpacity = module.UIOpacity;
      tween = module.tween;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;
      cclegacy._RF.push({}, "534b9OdovhKjZjMw5QOPlL0", "Loader", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var Loader = exports('Loader', (_dec = ccclass('Loader'), _dec2 = property([Node]), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(Loader, _Component);
        function Loader() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "dots", _descriptor, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = Loader.prototype;
        _proto.onLoad = function onLoad() {
          this.animateDots();
        };
        _proto.animateDots = function animateDots() {
          var _this2 = this;
          if (this.dots.length < 5) return;
          var durations = [0, 0.1, 0.2, 0.3, 0.4];
          this.dots.forEach(function (dot, index) {
            _this2.setupDot(dot, durations[index]);
          });
        };
        _proto.setupDot = function setupDot(dot, delay) {
          var scaleSmall = new Vec3(0.6, 0.6, 1);
          var scaleBig = new Vec3(1.2, 1.2, 1);
          var opacity = dot.getComponent(UIOpacity) || dot.addComponent(UIOpacity);
          tween(dot).delay(delay).repeatForever(tween().to(0.2, {
            scale: scaleBig
          }, {
            easing: 'linear'
          }).call(function () {
            opacity.opacity = 255;
          }).to(0.2, {
            scale: scaleSmall
          }, {
            easing: 'linear'
          }).call(function () {
            opacity.opacity = 150;
          }).delay(0.1)).start();
        };
        return Loader;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "dots", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Lobby", ['./Capcha.ts', './AlertDialog.ts', './App.ts', './AudioManager.ts', './AutoPlayAnimation.ts', './BannerSlider.ts', './BannerView.ts', './BgResizer.ts', './BlickOpacity.ts', './BlinkColor.ts', './BlinkNode.ts', './BroadcastListener.ts', './ButtonMiniGame.ts', './BuyChipPoker.ts', './CanvasResizer.ts', './CardList.ts', './CardOnTable.ts', './ChatInGame.ts', './Config.ts', './ConfirmDialog.ts', './Dialog.ts', './DualCircleWave.ts', './EditboxFormat.ts', './EventBus.ts', './EventX6Anim.ts', './FloatButton.ts', './FullScreen.ts', './Global.ts', './Http.ts', './ImageSequenceLoop.ts', './LabelSlotHu.ts', './LightBlink.ts', './Loader.ts', './MCard.ts', './MiniGame.ts', './NotifyRun.ts', './Pagging.ts', './Pagination.ts', './PlayerView.ts', './PopupSetting.ts', './PulseScale.ts', './Random.ts', './RotateSmooth.ts', './RotateSprite.ts', './SPUtils.ts', './ScaleJackpotx6.ts', './SlotItem.ts', './SlotLayer.ts', './SpinAndBlink.ts', './SwingXYMotion.ts', './TLMNUtility.ts', './TimeUtils.ts', './TournamentAnimator.ts', './TweenUtils.ts', './Utils.ts', './Casino.Hover.ts', './Casino.HoverButton.ts', './Casino.Lobby.ts', './Casino.Player.ts', './Casino.PopupRank.ts', './Canvas2Image.ts', './GraphicsQRCode.ts', './QRCodeScene.ts', './TwoInviteQRCodePrefab.ts', './QR8bitByte.ts', './QRBitBuffer.ts', './QRCode.ts', './QRConst.ts', './QRMath.ts', './QRNode.ts', './QRPolynomial.ts', './QRRSBlock.ts', './QRUtil.ts', './Language.Label.ts', './Language.LanguageManager.ts', './Language.RichText.ts', './Language.Sprite.ts', './BaccaratSignalRClient.ts', './BlackjackSignalRClient.ts', './CaiShenSignalRClient.ts', './CardGameSignalRClient.ts', './ChatHubSignalRClient.ts', './DQSignalRClient.ts', './DragonTigerSignalRClient.ts', './ForestSignalRClient.ts', './KingdomSignalRClient.ts', './MiniGameSignalRClient.ts', './MiniGameTX1SignalRClient.ts', './MiniGameTX2SignalRClient.ts', './MiniGameTX3SignalRClient.ts', './MiniGameTXMD5SignalRClient.ts', './Network.SignalRClient.ts', './OceanSignalRClient.ts', './OracleSignalRClient.ts', './RouletteSignalRClient.ts', './SedieSignalRClient.ts', './SicboSignalRClient.ts', './XocDiaLiveSignalRClient.ts', './FishHunterPhotonClient.ts', './LongVuongPhotonClient.ts', './PhotonClient.ts', './SortiePhotonClient.ts', './SpaceWarPhotonClient.ts', './TheSharkPhotonClient.ts', './AudioEngine.ts', './BaseSlotMachine.ts', './BaseSlotSymbol.ts', './EventIcon.ts', './InfoView.ts', './SlotConfig.ts', './DropdownCalendarLobby.ts', './FilterCategory.ts', './Lobby.PopupGoldTicket.ts', './LobbyController.ts', './PanelMenu.ts', './PopupAnnouncement.ts', './PopupCashout.ts', './PopupHistoryWheel.ts', './PopupSlide.ts', './PopupSpinWheel.ts', './PopupTutorialWheel.ts', './PopupVipWheel.ts', './RoomCards.ts', './SportVirtualController.ts', './ItemInbox.ts', './MyInbox.ts', './Lobby.LoginByOTP.ts', './Lobby.PopupForgetPassword.ts', './MissionChildren.ts', './PopupDownload.ts', './PopupEvent.ts', './PopupEventX2.ts', './PopupGiftCode.ts', './PopupLogin.ts', './PopupProfile.ts', './PopupRegister.ts', './PopupSupport.ts', './PopupTournament.ts', './PopupUpdateNickname.ts', './TabEvent.ts', './TabEventTutorial.ts', './Lobby.PopupSecurity.TabManageGame.ts', './Lobby.PopupSecurity.TabSafe.ts', './Lobby.PopupSecurity.TabSafePlus.ts', './Lobby.PopupSecurity.TabSecureLogin.ts', './Lobby.PopupSecurity.TabSecurityInfo.SecureForm.Email.ts', './Lobby.PopupSecurity.TabSecurityInfo.SecureForm.Sms.ts', './Lobby.PopupSecurity.TabSecurityInfo.SecureForm.Telesafe.ts', './Lobby.PopupSecurity.TabSecurityInfo.SecureForm.ts', './Lobby.PopupSecurity.TabSecurityInfo.ts', './Lobby.PopupSecurity.ts', './PopupMiniGameXoSo.ts'], function () {
  return {
    setters: [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],
    execute: function () {}
  };
});

System.register("chunks:///_virtual/Lobby.LoginByOTP.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Dialog.ts', './App.ts', './Config.ts', './Http.ts', './DropDown.ts', './Utils.ts', './BroadcastListener.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, EditBox, RichText, Dialog, App, Configs, Http, DropDown, Utils, BroadcastReceiver;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      EditBox = module.EditBox;
      RichText = module.RichText;
    }, function (module) {
      Dialog = module.default;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      DropDown = module.default;
    }, function (module) {
      Utils = module.Utils;
    }, function (module) {
      BroadcastReceiver = module.BroadcastReceiver;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2, _descriptor3;
      cclegacy._RF.push({}, "25be5R2LJ9KZLbElxGuq4MI", "Lobby.LoginByOTP", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var LobbyLoginByOTP = exports('default', (_dec = property(EditBox), _dec2 = property(RichText), _dec3 = property(DropDown), ccclass(_class = (_class2 = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(LobbyLoginByOTP, _Dialog);
        function LobbyLoginByOTP() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Dialog.call.apply(_Dialog, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "edbOTP", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblNoteOTP", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "selector", _descriptor3, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = LobbyLoginByOTP.prototype;
        _proto.show = function show() {
          var _this2 = this;
          this.selector.setCallBack(function (index) {
            switch (index) {
              case 0:
                _this2.lblNoteOTP.string = App.instance.getTextLang('se26');
                break;
              case 1:
                _this2.lblNoteOTP.string = App.instance.getTextLang('se81');
                break;
            }
          });
          _Dialog.prototype.show.call(this);
        };
        _proto.actLogin = function actLogin() {
          var _this3 = this;
          if (this.edbOTP.string == "") {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_otp_blank'));
            return;
          }
          App.instance.showLoading(true);
          var data = {
            OTPType: this.selector.selectedIndex === 0 ? 1 : 3,
            OTP: this.edbOTP.string,
            Timestamp: Utils.getTicks(),
            RequestId: Configs.Login.Username
          };
          var json = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG["AuthenOtpUrl"], json, function (_status, res) {
            if (res['c'] != 0) {
              App.instance.showLoading(false);
              App.instance.alertDialog.showMsg(res['r']);
              return;
            }
            Configs.Login.AccessToken = res["m"];
            Configs.Login.SessionKey = res["d"]["sessionToken"];
            _this3.dismiss();
            BroadcastReceiver.send(BroadcastReceiver.USER_INFO_REFRESH, res['d']);
            BroadcastReceiver.send(BroadcastReceiver.USER_LOGGED_IN);
            App.instance.showLoading(false);
          }, false);
        };
        _proto.getOtp = function getOtp() {
          App.instance.showLoading(true);
          var index = this.selector.selectedIndex;
          switch (index) {
            case 0:
              var payload = {
                userName: Configs.Login.Username,
                ServiceID: Configs.SMSService.LOGIN_BY_OTP,
                Timestamp: Utils.getTicks(),
                CurrencyID: 1
              };
              var json = {
                "Input": Utils.encryptWithRSA(JSON.stringify(payload))
              };
              Http.post(Configs.App.DOMAIN_CONFIG["GetSmsOtpNotLogin"], json, function (status, _res) {
                App.instance.showLoading(false);
                if (status == 200) {
                  App.instance.alertDialog.showMsg(App.instance.getTextLang('se76'));
                }
              });
              break;
            case 1:
              var payloadTelesafe = {
                userName: Configs.Login.Username,
                Timestamp: Utils.getTicks()
              };
              var jsonTelesafe = {
                "Input": Utils.encryptWithRSA(JSON.stringify(payloadTelesafe))
              };
              Http.post(Configs.App.DOMAIN_CONFIG["GetTeleSafeOtpNotLogin"], jsonTelesafe, function (status, _res) {
                App.instance.showLoading(false);
                if (status === 200) {
                  App.instance.alertDialog.showMsg(App.instance.getTextLang('se82'));
                }
              });
              break;
          }
        };
        return LobbyLoginByOTP;
      }(Dialog), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "edbOTP", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "lblNoteOTP", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "selector", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Lobby.PopupForgetPassword.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Dialog.ts', './Http.ts', './Config.ts', './Utils.ts', './App.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Sprite, EditBox, Label, Toggle, Dialog, Http, Configs, Utils, App;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Sprite = module.Sprite;
      EditBox = module.EditBox;
      Label = module.Label;
      Toggle = module.Toggle;
    }, function (module) {
      Dialog = module.default;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      Utils = module.Utils;
    }, function (module) {
      App = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _dec25, _dec26, _dec27, _dec28, _dec29, _dec30, _dec31, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _descriptor25, _descriptor26, _descriptor27, _descriptor28, _descriptor29, _descriptor30;
      cclegacy._RF.push({}, "c06bb5wJPhLSLer1tnZVR/5", "Lobby.PopupForgetPassword", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PopupForgetPassword = exports('default', (_dec = ccclass("PopupForgetPassword"), _dec2 = property(Node), _dec3 = property(Sprite), _dec4 = property(Sprite), _dec5 = property(Sprite), _dec6 = property(EditBox), _dec7 = property(EditBox), _dec8 = property(EditBox), _dec9 = property(EditBox), _dec10 = property(EditBox), _dec11 = property(EditBox), _dec12 = property(EditBox), _dec13 = property(EditBox), _dec14 = property(EditBox), _dec15 = property(EditBox), _dec16 = property(EditBox), _dec17 = property(EditBox), _dec18 = property(EditBox), _dec19 = property(Node), _dec20 = property(Node), _dec21 = property(Label), _dec22 = property(Label), _dec23 = property(EditBox), _dec24 = property(EditBox), _dec25 = property(EditBox), _dec26 = property(Label), _dec27 = property(Toggle), _dec28 = property(Node), _dec29 = property(Node), _dec30 = property(Node), _dec31 = property(Label), _dec(_class = (_class2 = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(PopupForgetPassword, _Dialog);
        function PopupForgetPassword() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Dialog.call.apply(_Dialog, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "info", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "sprCaptchaSMS", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "sprCaptchaEmail", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "sprCaptchaTelesafe", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbUsernameSMS", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbPasswordSMS", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbRePasswordSMS", _descriptor7, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbOtpSMS", _descriptor8, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbCaptchaSMS", _descriptor9, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbUsernameTelesafe", _descriptor10, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbPasswordTelesafe", _descriptor11, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbRePasswordTelesafe", _descriptor12, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbOtpTelesafe", _descriptor13, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbCaptchaTelesafe", _descriptor14, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbUsernameEmail", _descriptor15, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbEmail", _descriptor16, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbCaptchaEmail", _descriptor17, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerEmailStep1", _descriptor18, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerEmailStep2", _descriptor19, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblEmailStep2", _descriptor20, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblUsernameEmailStep2", _descriptor21, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbOTPEmail", _descriptor22, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbPasswordEmail", _descriptor23, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbRePasswordEmail", _descriptor24, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "selectedOptionLabel", _descriptor25, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "toggleOption", _descriptor26, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerSMS", _descriptor27, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerEmail", _descriptor28, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerTelesafe", _descriptor29, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblToast", _descriptor30, _assertThisInitialized(_this));
          _this.captchaIdSMS = "";
          _this.captchaIdEmail = "";
          _this.captchaIdTelesafe = "";
          return _this;
        }
        var _proto = PopupForgetPassword.prototype;
        _proto.show = function show() {
          _Dialog.prototype.show.call(this);
          this.info.active = true;
          this.actRefreshCaptchaSMS();
        };
        _proto.onEnable = function onEnable() {
          this.refreshEmail();
          this.refreshSMS();
          this.refreshTelesafe();
        };
        _proto.refreshSMS = function refreshSMS() {
          this.edbUsernameSMS.string = "";
          this.edbPasswordSMS.string = "";
          this.edbRePasswordSMS.string = "";
          this.edbOtpSMS.string = "";
          this.edbCaptchaSMS.string = "";
          this.actRefreshCaptchaSMS();
        };
        _proto.refreshEmail = function refreshEmail() {
          this.edbUsernameEmail.string = "";
          this.edbEmail.string = "";
          this.edbCaptchaEmail.string = "";
          this.actRefreshCaptchaEmail();
          this.containerEmailStep1.active = true;
          this.containerEmailStep2.active = false;
        };
        _proto.refreshTelesafe = function refreshTelesafe() {
          this.edbUsernameTelesafe.string = "";
          this.edbPasswordTelesafe.string = "";
          this.edbRePasswordTelesafe.string = "";
          this.edbOtpTelesafe.string = "";
          this.edbCaptchaTelesafe.string = "";
          this.actRefreshCaptchaTelesafe();
        };
        _proto.actRefreshCaptchaSMS = function actRefreshCaptchaSMS() {
          var _this2 = this;
          Http.get(Configs.App.DOMAIN_CONFIG['GetCaptchaPayment'], {
            length: 4,
            width: 150,
            height: 45
          }, function (status, res) {
            _this2.captchaIdSMS = res["d"][0];
            Utils.loadSpriteFrameFromBase64(res["d"][1], function (sprFrame) {
              _this2.sprCaptchaSMS.spriteFrame = sprFrame;
            });
          });
        };
        _proto.actRefreshCaptchaEmail = function actRefreshCaptchaEmail() {
          var _this3 = this;
          Http.get(Configs.App.DOMAIN_CONFIG['GetCaptchaPayment'], {
            length: 4,
            width: 150,
            height: 45
          }, function (status, res) {
            _this3.captchaIdEmail = res["d"][0];
            Utils.loadSpriteFrameFromBase64(res["d"][1], function (sprFrame) {
              _this3.sprCaptchaEmail.spriteFrame = sprFrame;
            });
          });
        };
        _proto.actRefreshCaptchaTelesafe = function actRefreshCaptchaTelesafe() {
          var _this4 = this;
          Http.get(Configs.App.DOMAIN_CONFIG['GetCaptchaPayment'], {
            length: 4,
            width: 150,
            height: 45
          }, function (status, res) {
            _this4.captchaIdTelesafe = res["d"][0];
            Utils.loadSpriteFrameFromBase64(res["d"][1], function (sprFrame) {
              _this4.sprCaptchaTelesafe.spriteFrame = sprFrame;
            });
          });
        };
        _proto.actSendOTPSMS = function actSendOTPSMS() {
          var _this5 = this;
          if (this.edbUsernameSMS.string.trim().length == 0) {
            this.showToast(App.instance.getTextLang('txt_login_username_not_blank'));
            return;
          }
          App.instance.showLoading(true);
          var json = {
            userName: this.edbUsernameSMS.string,
            ServiceID: Configs.SMSService.FORGOT_PASSWORD,
            Timestamp: Utils.getTicks(),
            CurrencyID: 1
          };
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(json))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['GetSmsOtpNotLogin'], payload, function (status, res) {
            App.instance.showLoading(false);
            if (res["c"] < 0) {
              _this5.showToast(App.instance.getTextLang("me" + res["c"]));
              return;
            }
            if (status === 200) {
              _this5.showToast(App.instance.getTextLang('se76'));
            }
          }, false);
        };
        _proto.actSendOTPTelesafe = function actSendOTPTelesafe() {
          var _this6 = this;
          if (this.edbUsernameTelesafe.string.trim().length == 0) {
            this.showToast(App.instance.getTextLang('txt_login_username_not_blank'));
            return;
          }
          App.instance.showLoading(true);
          var payload = {
            userName: this.edbUsernameTelesafe.string,
            Timestamp: Utils.getTicks()
          };
          var json = {
            "Input": Utils.encryptWithRSA(JSON.stringify(payload))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['GetTeleSafeOtpNotLogin'], json, function (status, res) {
            App.instance.showLoading(false);
            if (res["c"] < 0) {
              _this6.showToast(App.instance.getTextLang("me" + res["c"]));
              return;
            }
            if (status === 200) {
              _this6.showToast(App.instance.getTextLang('se82'));
            }
          }, false);
        };
        _proto.actSubmitSMS = function actSubmitSMS() {
          var username = this.edbUsernameSMS.string.trim();
          var password = this.edbPasswordSMS.string.trim();
          var rePassword = this.edbRePasswordSMS.string.trim();
          var otp = this.edbOtpSMS.string.trim();
          var captcha = this.edbCaptchaSMS.string.trim();
          this.actSubmitOTP(username, password, rePassword, otp, captcha, this.captchaIdSMS);
        };
        _proto.actSubmitTelesafe = function actSubmitTelesafe() {
          var username = this.edbUsernameTelesafe.string.trim();
          var password = this.edbPasswordTelesafe.string.trim();
          var rePassword = this.edbRePasswordTelesafe.string.trim();
          var otp = this.edbOtpTelesafe.string.trim();
          var captcha = this.edbCaptchaTelesafe.string.trim();
          this.actSubmitOTP(username, password, rePassword, otp, captcha, this.captchaIdTelesafe);
        };
        _proto.actSubmitOTP = function actSubmitOTP(username, password, rePassword, otp, captcha, captchaId) {
          var _this7 = this;
          if (username.length == 0) {
            this.showToast(App.instance.getTextLang('txt_login_username_not_blank'));
            return;
          }
          if (password.length == 0) {
            this.showToast(App.instance.getTextLang('txt_login_password_not_blank'));
            return;
          }
          if (password != rePassword) {
            this.showToast(App.instance.getTextLang('auth22'));
            return;
          }
          if (otp.length == 0) {
            this.showToast(App.instance.getTextLang('txt_otp_blank'));
            return;
          }
          if (captcha.length == 0) {
            this.showToast(App.instance.getTextLang('TLN_ERRORCAPTCHA'));
            return;
          }
          App.instance.showLoading(true);
          var data = {
            "UserName": username,
            "Password": password,
            "OTP": otp,
            "Captcha": captcha,
            "Verify": captchaId,
            "Timestamp": Utils.getTicks()
          };
          var dataHash = Utils.encryptWithRSA(JSON.stringify(data));
          var reqParams = {
            "Input": dataHash
          };
          Http.post(Configs.App.DOMAIN_CONFIG['ResetPassword'], reqParams, function (status, res) {
            App.instance.showLoading(false);
            _this7.actRefreshCaptchaSMS();
            _this7.actRefreshCaptchaTelesafe();
            if (res["c"] < 0) {
              _this7.showToast(App.instance.getTextLang("me" + res["c"]));
              return;
            }
            if (status === 200) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('pr25'));
              _this7.dismiss();
            }
          }, false);
        };
        _proto.actSubmitEmail = function actSubmitEmail() {
          var _this8 = this;
          var username = this.edbUsernameEmail.string.trim();
          var email = this.edbEmail.string.trim();
          var captcha = this.edbCaptchaEmail.string.trim();
          if (username.length == 0) {
            this.showToast(App.instance.getTextLang('txt_login_username_not_blank'));
            return;
          }
          if (email.length == 0) {
            this.showToast(App.instance.getTextLang('me-1020'));
            return;
          }
          if (captcha.length == 0) {
            this.showToast(App.instance.getTextLang('TLN_ERRORCAPTCHA'));
            return;
          }
          App.instance.showLoading(true);
          var data = {
            "Username": username,
            "Email": email,
            "Captcha": captcha,
            "Verify": this.captchaIdEmail,
            "Timestamp": Utils.getTicks()
          };
          var dataHash = Utils.encryptWithRSA(JSON.stringify(data));
          var reqParams = {
            "Input": dataHash
          };
          Http.post(Configs.App.DOMAIN_CONFIG['ResetPasswordByEmail'], reqParams, function (status, res) {
            App.instance.showLoading(false);
            _this8.actRefreshCaptchaEmail();
            if (res["c"] < 0) {
              _this8.showToast(App.instance.getTextLang("me" + res["c"]));
              return;
            }
            if (status === 200) {
              _this8.showToast(App.instance.getTextLang('se72'));
              _this8.containerEmailStep1.active = false;
              _this8.containerEmailStep2.active = true;
              _this8.lblEmailStep2.string = email;
              _this8.lblUsernameEmailStep2.string = username;
            }
          }, false);
        };
        _proto.actSubmitConfirmEmail = function actSubmitConfirmEmail() {
          var _this9 = this;
          var otp = this.edbOTPEmail.string.trim();
          var password = this.edbPasswordEmail.string.trim();
          var rePassword = this.edbRePasswordEmail.string.trim();
          if (password.length == 0) {
            this.showToast(App.instance.getTextLang('txt_login_password_not_blank'));
            return;
          }
          if (password != rePassword) {
            this.showToast(App.instance.getTextLang('auth22'));
            return;
          }
          if (otp.length == 0) {
            this.showToast(App.instance.getTextLang('txt_otp_blank'));
            return;
          }
          App.instance.showLoading(true);
          var data = {
            "Username": this.lblUsernameEmailStep2.string,
            "Password": password,
            "OTP": otp,
            "Timestamp": Utils.getTicks()
          };
          var dataHash = Utils.encryptWithRSA(JSON.stringify(data));
          var reqParams = {
            "Input": dataHash
          };
          Http.post(Configs.App.DOMAIN_CONFIG['ConfirmPasswordByEmail'], reqParams, function (status, res) {
            App.instance.showLoading(false);
            if (res["c"] < 0) {
              _this9.showToast(App.instance.getTextLang("me" + res["c"]));
              return;
            }
            if (status === 200) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('pr25'));
              _this9.dismiss();
            }
          }, false);
        };
        _proto.toggleResetOption = function toggleResetOption(option) {
          this.toggleOption.isChecked = false;
          if (option.target.name == "OptionSMS") {
            this.containerSMS.active = true;
            this.containerEmail.active = false;
            this.containerTelesafe.active = false;
            this.selectedOptionLabel.string = App.instance.getTextLang('txt_reset_password_sms');
            this.refreshSMS();
            return;
          }
          if (option.target.name == "OptionEmail") {
            this.containerSMS.active = false;
            this.containerEmail.active = true;
            this.containerTelesafe.active = false;
            this.selectedOptionLabel.string = App.instance.getTextLang('txt_reset_password_email');
            this.refreshEmail();
            return;
          }
          if (option.target.name == "OptionTelesafe") {
            this.containerSMS.active = false;
            this.containerEmail.active = false;
            this.containerTelesafe.active = true;
            this.selectedOptionLabel.string = App.instance.getTextLang('txt_reset_password_telesafe');
            this.refreshTelesafe();
            return;
          }
        };
        _proto.showToast = function showToast(message) {
          var _this10 = this;
          this.lblToast.string = message;
          this.scheduleOnce(function () {
            _this10.lblToast.string = "";
          }, 5);
        };
        return PopupForgetPassword;
      }(Dialog), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "info", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "sprCaptchaSMS", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "sprCaptchaEmail", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "sprCaptchaTelesafe", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "edbUsernameSMS", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "edbPasswordSMS", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "edbRePasswordSMS", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "edbOtpSMS", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "edbCaptchaSMS", [_dec10], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "edbUsernameTelesafe", [_dec11], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "edbPasswordTelesafe", [_dec12], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "edbRePasswordTelesafe", [_dec13], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "edbOtpTelesafe", [_dec14], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "edbCaptchaTelesafe", [_dec15], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor15 = _applyDecoratedDescriptor(_class2.prototype, "edbUsernameEmail", [_dec16], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor16 = _applyDecoratedDescriptor(_class2.prototype, "edbEmail", [_dec17], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor17 = _applyDecoratedDescriptor(_class2.prototype, "edbCaptchaEmail", [_dec18], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor18 = _applyDecoratedDescriptor(_class2.prototype, "containerEmailStep1", [_dec19], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor19 = _applyDecoratedDescriptor(_class2.prototype, "containerEmailStep2", [_dec20], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor20 = _applyDecoratedDescriptor(_class2.prototype, "lblEmailStep2", [_dec21], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor21 = _applyDecoratedDescriptor(_class2.prototype, "lblUsernameEmailStep2", [_dec22], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor22 = _applyDecoratedDescriptor(_class2.prototype, "edbOTPEmail", [_dec23], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor23 = _applyDecoratedDescriptor(_class2.prototype, "edbPasswordEmail", [_dec24], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor24 = _applyDecoratedDescriptor(_class2.prototype, "edbRePasswordEmail", [_dec25], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor25 = _applyDecoratedDescriptor(_class2.prototype, "selectedOptionLabel", [_dec26], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor26 = _applyDecoratedDescriptor(_class2.prototype, "toggleOption", [_dec27], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor27 = _applyDecoratedDescriptor(_class2.prototype, "containerSMS", [_dec28], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor28 = _applyDecoratedDescriptor(_class2.prototype, "containerEmail", [_dec29], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor29 = _applyDecoratedDescriptor(_class2.prototype, "containerTelesafe", [_dec30], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor30 = _applyDecoratedDescriptor(_class2.prototype, "lblToast", [_dec31], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Lobby.PopupGoldTicket.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Dialog.ts', './DropdownCalendarLobby.ts', './Global.ts', './Utils.ts', './App.ts', './Http.ts', './Config.ts', './Language.LanguageManager.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, _createForOfIteratorHelperLoose, cclegacy, _decorator, ToggleContainer, Node, Label, instantiate, Dialog, DropdownCalendarLobby, Global, Utils, App, Http, Configs, LanguageManager;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
      _createForOfIteratorHelperLoose = module.createForOfIteratorHelperLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      ToggleContainer = module.ToggleContainer;
      Node = module.Node;
      Label = module.Label;
      instantiate = module.instantiate;
    }, function (module) {
      Dialog = module.default;
    }, function (module) {
      DropdownCalendarLobby = module.DropdownCalendarLobby;
    }, function (module) {
      Global = module.Global;
    }, function (module) {
      Utils = module.Utils;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      LanguageManager = module.LanguageManager;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15;
      cclegacy._RF.push({}, "ba3abYH8/hKyJlIaxqpm1ay", "Lobby.PopupGoldTicket", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PopupGoldTicket = exports('default', (_dec = property(ToggleContainer), _dec2 = property(Node), _dec3 = property(Node), _dec4 = property(Node), _dec5 = property(Node), _dec6 = property(Node), _dec7 = property(Node), _dec8 = property(Node), _dec9 = property(Label), _dec10 = property(Label), _dec11 = property(Label), _dec12 = property(Label), _dec13 = property(DropdownCalendarLobby), _dec14 = property(DropdownCalendarLobby), _dec15 = property(DropdownCalendarLobby), ccclass(_class = (_class2 = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(PopupGoldTicket, _Dialog);
        function PopupGoldTicket() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Dialog.call.apply(_Dialog, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "tabs", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabContents", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "sieuCayTemplate", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "sieuCayContainer", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "goldTicketTemplate", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "goldTicketContainer", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "myTicketTemplate", _descriptor7, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "myTicketContainer", _descriptor8, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "dateRewardValue", _descriptor9, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblMyticket", _descriptor10, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblListMyticket", _descriptor11, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "specialRewardValue", _descriptor12, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "dropdownCalendar", _descriptor13, _assertThisInitialized(_this));
          // public get dropdownCalendar(): DropdownCalendarLobby {
          //     return this._dropdownCalendar;
          // }
          // public set dropdownCalendar(value: DropdownCalendarLobby) {
          //     this._dropdownCalendar = value;
          // }
          _initializerDefineProperty(_this, "dropdownCalendarSuperPlayer", _descriptor14, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "dropdownCalendarMyTicket", _descriptor15, _assertThisInitialized(_this));
          _this.selectedDate = null;
          _this.selectedDateSuperPlayer = null;
          _this.selectedDateMyTicket = null;
          _this.tabSelectedIdx = 0;
          return _this;
        }
        var _proto = PopupGoldTicket.prototype;
        _proto.onLoad = function onLoad() {
          var _this2 = this;
          Global.PopupGoldTicket = this;
          this.tabs.toggleItems.forEach(function (tab, index) {
            tab.node.on("toggle", function () {
              _this2.tabSelectedIdx = index;
              _this2.onTabChanged();
            });
          });
          this.onTabChanged();
          var self = this;
          this.dropdownCalendar.setListener({
            onChangeDate: function onChangeDate(date) {
              self.selectedDate = date;
              self.dateRewardValue.string = Utils.formatDatetime(new Date(date).toDateString(), "dd-MM-yyyy");
              self.showGoldTicket();
              self.dropdownCalendar.calendarPanel.active = false;
            }
          });
          this.dropdownCalendarSuperPlayer.setListener({
            onChangeDate: function onChangeDate(date) {
              self.selectedDateSuperPlayer = date;
              self.showSieuCay();
              self.dropdownCalendarSuperPlayer.calendarPanel.active = false;
            }
          });
          this.dropdownCalendarMyTicket.setListener({
            onChangeDate: function onChangeDate(date) {
              self.selectedDateMyTicket = date;
              self.showMyTickets();
              self.dropdownCalendarMyTicket.calendarPanel.active = false;
            }
          });
        };
        _proto.showTag = function showTag() {
          _Dialog.prototype.show.call(this);
          this.tabSelectedIdx = 2;
          // setTimeout(() => {
          this.tabs.toggleItems[2].isChecked = true;
          // }, 100);
          this.onTabChanged();

          //   new Date().getDate();
        };

        _proto.onTabChanged = function onTabChanged() {
          this.tabContents.children.forEach(function (tab) {
            return tab.active = false;
          });
          switch (this.tabSelectedIdx) {
            case 0:
              this.showGoldTicket();
              this.sieuCayContainer.removeAllChildren();
              this.myTicketContainer.removeAllChildren();
              this.tabContents.children[0].active = true;
              break;
            case 1:
              this.showSieuCay();
              this.goldTicketContainer.removeAllChildren();
              this.myTicketContainer.removeAllChildren();
              this.tabContents.children[1].active = true;
              break;
            case 2:
              this.showMyTickets();
              this.goldTicketContainer.removeAllChildren();
              this.sieuCayContainer.removeAllChildren();
              this.tabContents.children[2].active = true;
              break;
            case 3:
              this.showRule();
              this.tabContents.children[3].active = true;
              break;
            case 4:
              this.tabContents.children[4].active = true;
              break;
          }
        };
        _proto.showGoldTicket = function showGoldTicket() {
          var _this3 = this;
          App.instance.showLoading(true);
          this.goldTicketContainer.removeAllChildren();
          //log(formatDateToText(this.selectedDate || new Date()).replace(',', ''));
          //log(this.selectedDate || new Date());
          Http.get(Configs.App.DOMAIN_CONFIG["GetEventGoldenTicketMiniPoker"], {
            "currencyID": Configs.Login.CurrencyID,
            "eventDate": (this.selectedDate || new Date()).toDateString()
          }, function (status, json) {
            App.instance.showLoading(false);
            if (status === 200) {
              if (json["c"] >= 0) {
                for (var _iterator = _createForOfIteratorHelperLoose(json['d']), _step; !(_step = _iterator()).done;) {
                  var data = _step.value;
                  if (Number(data.Position) === 1) {
                    _this3.dateRewardValue.string = Utils.formatDatetime(new Date(_this3.selectedDate || new Date()).toDateString(), "dd-MM-yyyy");
                    _this3.specialRewardValue.string = data.TicketName || App.instance.getTextLang("sl76");
                  }
                  var itemRow = instantiate(_this3.goldTicketTemplate);
                  itemRow.active = true;
                  _this3.goldTicketContainer.addChild(itemRow);
                  itemRow.children[0].getComponent(Label).string = data.Position;
                  itemRow.children[1].getComponent(Label).string = Number(data.Position) === 1 ? LanguageManager.instance.getString("evmnpk2") : LanguageManager.instance.getString("evmnpk3");
                  itemRow.children[2].getComponent(Label).string = data.Nickname == null ? "" : data.Nickname;
                  itemRow.children[3].getComponent(Label).string = data.TicketName == null ? "" : data.TicketName;
                  itemRow.children[4].getComponent(Label).string = Utils.ToVND(data.PrizeValue);
                }
              } else {
                App.instance.showErrLoading(App.instance.getTextLang("NO_DATA"));
              }
            } else {
              App.instance.showErrLoading(App.instance.getTextLang("NO_DATA"));
            }
          });
        };
        _proto.showSieuCay = function showSieuCay() {
          var _this4 = this;
          App.instance.showLoading(true);
          this.goldTicketContainer.removeAllChildren();
          Http.get(Configs.App.DOMAIN_CONFIG["GetTicketChartMiniPoker"], {
            "currencyID": Configs.Login.CurrencyID,
            "eventDate": (this.selectedDateSuperPlayer || new Date()).toDateString() //formatDateToText(this.selectedDateSuperPlayer || new Date()).replace(',', '')
          }, function (status, json) {
            App.instance.showLoading(false);
            if (status === 200) {
              if (json["c"] >= 0) {
                for (var _iterator2 = _createForOfIteratorHelperLoose(json['d']), _step2; !(_step2 = _iterator2()).done;) {
                  var data = _step2.value;
                  var itemRow = instantiate(_this4.sieuCayTemplate);
                  itemRow.active = true;
                  _this4.sieuCayContainer.addChild(itemRow);
                  itemRow.children[0].getComponent(Label).string = data.Position;
                  itemRow.children[1].getComponent(Label).string = LanguageManager.instance.getString("ev2");
                  itemRow.children[2].getComponent(Label).string = data.Nickname == null ? "" : data.Nickname;
                  itemRow.children[3].getComponent(Label).string = data.TicketCount;
                  itemRow.children[4].getComponent(Label).string = Number(data.Position) === 1 && data.Nickname ? Utils.ToVND(200000) : Number(data.Position) === 2 && Number(data.Position) === 3 && data.Nickname ? Utils.ToVND(100000) : Number(data.Position) === 4 && Number(data.Position) === 5 && data.Nickname ? Utils.ToVND(50000) : "0";
                }
              } else {
                App.instance.showErrLoading(App.instance.getTextLang("NO_DATA"));
              }
            } else {
              App.instance.showErrLoading(App.instance.getTextLang("NO_DATA"));
            }
          });
        };
        _proto.showMyTickets = function showMyTickets() {
          var thiz = this;
          App.instance.showLoading(true);
          Http.get(Configs.App.DOMAIN_CONFIG["GetAccountTicketMinipoker"], {
            "currencyID": Configs.Login.CurrencyID,
            "eventDate": (this.selectedDateMyTicket || new Date()).toDateString() //formatDateToText(this.selectedDateMyTicket || new Date()).replace(',', '')
          }, function (status, json) {
            App.instance.showLoading(false);
            if (status === 200) {
              if (json["c"] >= 0) {
                var _json$d, _json$d2;
                thiz.lblMyticket.string = ((_json$d = json['d']) == null || (_json$d = _json$d.Win) == null ? void 0 : _json$d.map(function (ticket) {
                  return ticket.TicketName;
                }).join(',')) || '';
                thiz.lblListMyticket.string = ((_json$d2 = json['d']) == null || (_json$d2 = _json$d2.MyTicket) == null ? void 0 : _json$d2.map(function (ticket) {
                  return ticket.TicketName;
                }).join(',')) || '';
                // for (let data of json['d']?.MyTicket) {
                //     let itemRow = instantiate(this.myTicketTemplate);
                //     itemRow.active = true;
                //     this.myTicketContainer.addChild(itemRow);

                //     itemRow.children[0].getComponent(Label).string = data.Position
                //     itemRow.children[1].getComponent(Label).string = data.PrizeID;
                //     itemRow.children[2].getComponent(Label).string = data.Nickname==null?"":data.Nickname;
                //     itemRow.children[3].getComponent(Label).string = data.TicketName;
                //     itemRow.children[4].getComponent(Label).string = Utils.ToVND(data.PrizeValue);
                // }
              } else {
                App.instance.showErrLoading(App.instance.getTextLang("NO_DATA"));
              }
            } else {
              App.instance.showErrLoading(App.instance.getTextLang("NO_DATA"));
            }
          });
        };
        _proto.showRule = function showRule() {
          App.instance.showLoading(true);
          App.instance.showLoading(false);
        };
        return PopupGoldTicket;
      }(Dialog), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "tabs", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "tabContents", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "sieuCayTemplate", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "sieuCayContainer", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "goldTicketTemplate", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "goldTicketContainer", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "myTicketTemplate", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "myTicketContainer", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "dateRewardValue", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "lblMyticket", [_dec10], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "lblListMyticket", [_dec11], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "specialRewardValue", [_dec12], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "dropdownCalendar", [_dec13], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "dropdownCalendarSuperPlayer", [_dec14], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor15 = _applyDecoratedDescriptor(_class2.prototype, "dropdownCalendarMyTicket", [_dec15], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Lobby.PopupSecurity.TabManageGame.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './App.ts', './Config.ts', './Http.ts', './DropDown.ts', './BroadcastListener.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, _createForOfIteratorHelperLoose, cclegacy, _decorator, Node, EditBox, RichText, Component, instantiate, Toggle, Label, Color, App, Configs, Http, DropDown, BroadcastReceiver;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
      _createForOfIteratorHelperLoose = module.createForOfIteratorHelperLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      EditBox = module.EditBox;
      RichText = module.RichText;
      Component = module.Component;
      instantiate = module.instantiate;
      Toggle = module.Toggle;
      Label = module.Label;
      Color = module.Color;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      DropDown = module.default;
    }, function (module) {
      BroadcastReceiver = module.BroadcastReceiver;
    }],
    execute: function () {
      var _class, _descriptor, _dec, _dec2, _dec3, _dec4, _dec5, _class3, _class4, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6;
      cclegacy._RF.push({}, "cf51cNBBxZEA40NaTCbB47f", "Lobby.PopupSecurity.TabManageGame", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var ItemGameDataComponent = (_class = /*#__PURE__*/function (_Component) {
        _inheritsLoose(ItemGameDataComponent, _Component);
        function ItemGameDataComponent() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "gameData", _descriptor, _assertThisInitialized(_this));
          return _this;
        } // Store the game data here
        return ItemGameDataComponent;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class.prototype, "gameData", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _class);
      var TabManageGame = exports('TabManageGame', (_dec = property(Node), _dec2 = property(Node), _dec3 = property(DropDown), _dec4 = property(EditBox), _dec5 = property(RichText), ccclass(_class3 = (_class4 = /*#__PURE__*/function (_Component2) {
        _inheritsLoose(TabManageGame, _Component2);
        function TabManageGame() {
          var _this2;
          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }
          _this2 = _Component2.call.apply(_Component2, [this].concat(args)) || this;
          _initializerDefineProperty(_this2, "gameTable", _descriptor2, _assertThisInitialized(_this2));
          _initializerDefineProperty(_this2, "itemGameTemplate", _descriptor3, _assertThisInitialized(_this2));
          _initializerDefineProperty(_this2, "selector", _descriptor4, _assertThisInitialized(_this2));
          _initializerDefineProperty(_this2, "edbOtp", _descriptor5, _assertThisInitialized(_this2));
          _initializerDefineProperty(_this2, "lblOtpRequire", _descriptor6, _assertThisInitialized(_this2));
          _this2.selectedBlockGameID = [];
          return _this2;
        }
        var _proto = TabManageGame.prototype;
        _proto.onLoad = function onLoad() {
          var _this3 = this;
          this.selector.setCallBack(function (index) {
            switch (index) {
              case 0:
                _this3.lblOtpRequire.string = App.instance.getTextLang('se26');
                break;
              case 1:
                _this3.lblOtpRequire.string = App.instance.getTextLang('se81');
                break;
            }
          });
          this.lblOtpRequire.string = App.instance.getTextLang('se26');
        };
        _proto.onEnable = function onEnable() {
          this.initialize();
        };
        _proto.initialize = function initialize() {
          var _this4 = this;
          App.instance.showLoading(true);
          var url = Configs.App.DOMAIN_CONFIG["GetListGame"];
          Http.get(url, {}, function (status, res) {
            if (status === 200) {
              App.instance.showLoading(false);
              _this4.updateGameTable(res.d);
            }
          });
        };
        _proto.updateGameTable = function updateGameTable(gameList) {
          var _this5 = this;
          this.selectedBlockGameID = [];
          this.gameTable.removeAllChildren();
          var _loop = function _loop() {
            var data = _step.value;
            var spawner = instantiate(_this5.itemGameTemplate);
            spawner.addComponent(ItemGameDataComponent).gameData = data;
            spawner.getChildByName("Toggle").on("toggle", function () {
              var isChecked = spawner.getComponentInChildren(Toggle).isChecked;
              if (isChecked) {
                spawner.getComponentInChildren(Label).color = Color.BLACK.fromHEX("#4ef1ac");
                var index = _this5.selectedBlockGameID.indexOf(data.gameID);
                if (index !== -1) {
                  _this5.selectedBlockGameID.splice(index, 1);
                }
              } else {
                spawner.getComponentInChildren(Label).color = Color.WHITE;
                if (_this5.selectedBlockGameID.indexOf(data.gameID) === -1) {
                  _this5.selectedBlockGameID.push(data.gameID);
                }
              }
            });
            var gameName = Configs.InGameIds.getGameName(data.gameID);
            spawner.getComponentInChildren(Label).string = App.instance.getTextLang(gameName);
            spawner.getComponentInChildren(Toggle).isChecked = data.enable;
            spawner.getComponentInChildren(Label).color = data.enable ? Color.BLACK.fromHEX("#4ef1ac") : Color.WHITE;
            if (!data.enable) {
              if (_this5.selectedBlockGameID.indexOf(data.gameID) === -1) {
                _this5.selectedBlockGameID.push(data.gameID);
              }
            }
            spawner.active = true;
            _this5.gameTable.addChild(spawner);
          };
          for (var _iterator = _createForOfIteratorHelperLoose(gameList), _step; !(_step = _iterator()).done;) {
            _loop();
          }
        };
        _proto.sendOtp = function sendOtp() {
          App.instance.showLoading(true);
          var index = this.selector.selectedIndex;
          switch (index) {
            case 0:
              Http.post(Configs.App.DOMAIN_CONFIG["GetSmsOtp"], {
                "CurrencyID": Configs.Login.CurrencyID,
                "ServiceID": Configs.SMSService.MANAGE_GAME,
                "Username": Configs.Login.Username
              }, function (status, res) {
                App.instance.showLoading(false);
                if (status === 200) {
                  App.instance.alertDialog.showMsg(App.instance.getTextLang('se76'));
                }
              });
              break;
            case 1:
              Http.post(Configs.App.DOMAIN_CONFIG["GetTeleSafeOtp"], {
                "Username": Configs.Login.Username,
                "IsVerify": 0
              }, function (status, res) {
                App.instance.showLoading(false);
                if (status === 200) {
                  App.instance.alertDialog.showMsg(App.instance.getTextLang('se82'));
                }
              });
              break;
          }
        };
        _proto.confirmBlockGamePressed = function confirmBlockGamePressed() {
          var _this6 = this;
          var otp = this.edbOtp.string.trim();
          var index = this.selector.selectedIndex;
          var otpType = index === 0 ? eOtpType.SmsOtp : eOtpType.TeleSafeOtp;
          var listGameBlocked = this.selectedBlockGameID.join(",");
          App.instance.showLoading(true);
          var url = Configs.App.DOMAIN_CONFIG["ConfirmBlockGame"];
          Http.post(url, {
            "OTP": otp,
            "OtpType": otpType,
            "GameIDs": listGameBlocked
          }, function (status, res) {
            App.instance.showLoading(false);
            if (status === 200) {
              _this6.edbOtp.string = "";
              _this6.initialize();
              App.instance.alertDialog.showMsg(App.instance.getTextLang("se51"));
              BroadcastReceiver.send(BroadcastReceiver.UPDATE_MANAGE_GAME_CONFIG);
            }
          });
        };
        return TabManageGame;
      }(Component), (_descriptor2 = _applyDecoratedDescriptor(_class4.prototype, "gameTable", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class4.prototype, "itemGameTemplate", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class4.prototype, "selector", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class4.prototype, "edbOtp", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class4.prototype, "lblOtpRequire", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class4)) || _class3));
      var eOtpType = exports('eOtpType', /*#__PURE__*/function (eOtpType) {
        eOtpType[eOtpType["SmsOtp"] = 1] = "SmsOtp";
        eOtpType[eOtpType["AppOtp"] = 2] = "AppOtp";
        eOtpType[eOtpType["TeleSafeOtp"] = 3] = "TeleSafeOtp";
        return eOtpType;
      }({}));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Lobby.PopupSecurity.TabSafe.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './DropDown.ts', './Utils.ts', './App.ts', './Config.ts', './Http.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, _createClass, cclegacy, _decorator, Label, ToggleContainer, Node, EditBox, RichText, Color, Component, DropDown, Utils, App, Configs, Http;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
      ToggleContainer = module.ToggleContainer;
      Node = module.Node;
      EditBox = module.EditBox;
      RichText = module.RichText;
      Color = module.Color;
      Component = module.Component;
    }, function (module) {
      DropDown = module.default;
    }, function (module) {
      Utils = module.Utils;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      Http = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11;
      cclegacy._RF.push({}, "4296dH7+G1G+46tSLq+3ngJ", "Lobby.PopupSecurity.TabSafe", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var TabSafe = exports('TabSafe', (_dec = property(Label), _dec2 = property(ToggleContainer), _dec3 = property([Node]), _dec4 = property(EditBox), _dec5 = property(EditBox), _dec6 = property(Label), _dec7 = property(Label), _dec8 = property(DropDown), _dec9 = property(EditBox), _dec10 = property(RichText), _dec11 = property(Label), ccclass(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(TabSafe, _Component);
        function TabSafe() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "infoLblUsername", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "action", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "contents", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbLockBalance", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbUnlockBalance", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblUnlockBalance", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblLockBalance", _descriptor7, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "selector", _descriptor8, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbOTP", _descriptor9, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblOtpRequire", _descriptor10, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblAccounce", _descriptor11, _assertThisInitialized(_this));
          _this.tabSelectedIndex = 0;
          _this._unlockBalance = void 0;
          _this._lockBalance = void 0;
          return _this;
        }
        var _proto = TabSafe.prototype;
        _proto.onLoad = function onLoad() {
          var _this2 = this;
          this.edbLockBalance.node.on("editing-did-ended", function () {
            var number = Utils.stringToInt(_this2.edbLockBalance.string);
            _this2.edbLockBalance.string = Utils.formatNumber(number);
          });
          this.edbUnlockBalance.node.on("editing-did-ended", function () {
            var number = Utils.stringToInt(_this2.edbUnlockBalance.string);
            _this2.edbUnlockBalance.string = Utils.formatNumber(number);
          });
          var _loop = function _loop(i) {
            _this2.action.toggleItems[i].node.on("toggle", function () {
              _this2.tabSelectedIndex = i;
              _this2.onTabChanged();
            });
          };
          for (var i = 0; i < this.action.toggleItems.length; i++) {
            _loop(i);
          }
          this.onTabChanged();
          this.selector.setCallBack(function (index) {
            switch (index) {
              case 0:
                _this2.lblOtpRequire.string = App.instance.getTextLang('se26');
                break;
              case 1:
                _this2.lblOtpRequire.string = App.instance.getTextLang('se81');
                break;
            }
          });
          this.lblOtpRequire.string = App.instance.getTextLang('se26');
          this.onTabChanged();
          this.infoLblUsername.string = Configs.Login.Username;
        };
        _proto.start = function start() {
          App.instance.showLoading(true);
        };
        _proto.onEnable = function onEnable() {
          this.updateStockAccount();
          this.lblAccounce.node.active = false;
        };
        _proto.updateStockAccount = function updateStockAccount() {
          var _this3 = this;
          Http.get(Configs.App.DOMAIN_CONFIG['GetStockAccount'], {
            CurrencyID: Configs.Login.CurrencyID
          }, function (status, res) {
            App.instance.showLoading(false);
            if (res.c >= 0) {
              _this3.unlockBalance = res["d"]["goldBalance"];
              _this3.lockBalance = res["d"]["stockBalance"];
              _this3.edbLockBalance.string = "";
              _this3.edbUnlockBalance.string = "";
              _this3.edbOTP.string = "";
            }
          });
        };
        _proto.onTabChanged = function onTabChanged() {
          var _this4 = this;
          this.contents.forEach(function (item, index) {
            _this4.contents[index].active = index === _this4.tabSelectedIndex;
          });
          for (var i = 0; i < this.action.toggleItems.length; i++) {
            this.action.toggleItems[i].node.getComponentInChildren(Label).color = i === this.tabSelectedIndex ? Color.BLACK.fromHEX("#4ef1ac") : Color.WHITE;
          }
          this.lblAccounce.node.active = false;
          switch (this.tabSelectedIndex) {
            case 0:
              this.edbLockBalance.string = "";
              break;
            case 1:
              this.edbUnlockBalance.string = "";
              this.edbOTP.string = "";
              break;
          }
        };
        _proto.lockBalancePressed = function lockBalancePressed() {
          var _this5 = this;
          var coin = Utils.stringToInt(this.edbLockBalance.string);
          App.instance.showLoading(true);
          Http.post(Configs.App.DOMAIN_CONFIG["LockBalance"], {
            "CurrencyID": Configs.Login.CurrencyID,
            "Amount": coin
          }, function (status, res) {
            App.instance.showLoading(false);
            if (res.c >= 0) {
              _this5.unlockBalance = res["d"]["balance"];
              _this5.lockBalance = res["d"]["stock"];
              _this5.edbLockBalance.string = "";
              _this5.showToast(App.instance.getTextLang("se49"));
            }
          });
        }

        /** Registered in editor */;
        _proto.sendOtp = function sendOtp() {
          App.instance.showLoading(true);
          var index = this.selector.selectedIndex;
          switch (index) {
            case 0:
              Http.post(Configs.App.DOMAIN_CONFIG["GetSmsOtp"], {
                "CurrencyID": Configs.Login.CurrencyID,
                "ServiceID": Configs.SMSService.SAFE_BALANCE,
                "Username": Configs.Login.Username
              }, function (status, res) {
                App.instance.showLoading(false);
                if (status === 200) {
                  App.instance.alertDialog.showMsg(App.instance.getTextLang('se76'));
                }
              });
              break;
            case 1:
              Http.post(Configs.App.DOMAIN_CONFIG["GetTeleSafeOtp"], {
                "Username": Configs.Login.Username,
                "IsVerify": 0
              }, function (status, res) {
                App.instance.showLoading(false);
                if (status === 200) {
                  App.instance.alertDialog.showMsg(App.instance.getTextLang('se82'));
                }
              });
              break;
          }
        };
        _proto.unlockBalancePressed = function unlockBalancePressed() {
          var _this6 = this;
          var OTP = this.edbOTP.string.trim();
          if (OTP.length === 0) {
            this.showToast(App.instance.getTextLang('txt_otp_blank'));
            return;
          }
          App.instance.showLoading(true);
          var coin = Utils.stringToInt(this.edbUnlockBalance.string);
          Http.post(Configs.App.DOMAIN_CONFIG["UnLockBalance"], {
            "CurrencyID": Configs.Login.CurrencyID,
            "Amount": coin
          }, function (_status, res) {
            App.instance.showLoading(false);
            if (res.c >= 0) {
              Http.post(Configs.App.DOMAIN_CONFIG["ConfirmUnLockBalance"], {
                "OTPType": _this6.selector.selectedIndex === 0 ? 1 : 3,
                OTP: OTP
              }, function (_status, res) {
                App.instance.showLoading(false);
                if (res.c >= 0) {
                  _this6.updateStockAccount();
                  _this6.showToast(App.instance.getTextLang("se50"));
                }
              });
            }
          });
        };
        _proto.showToast = function showToast(message) {
          var _this7 = this;
          this.lblAccounce.string = message;
          this.lblAccounce.node.active = true;
          this.scheduleOnce(function () {
            _this7.lblAccounce.node.active = false;
          }, 3);
        };
        _createClass(TabSafe, [{
          key: "unlockBalance",
          get: function get() {
            return this._unlockBalance;
          },
          set: function set(value) {
            this._unlockBalance = value;
            this.lblUnlockBalance.string = Utils.formatNumber(value);
          }
        }, {
          key: "lockBalance",
          get: function get() {
            return this._lockBalance;
          },
          set: function set(value) {
            this._lockBalance = value;
            this.lblLockBalance.string = Utils.formatNumber(value);
          }
        }]);
        return TabSafe;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "infoLblUsername", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "action", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "contents", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "edbLockBalance", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "edbUnlockBalance", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "lblUnlockBalance", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "lblLockBalance", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "selector", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "edbOTP", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "lblOtpRequire", [_dec10], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "lblAccounce", [_dec11], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Lobby.PopupSecurity.TabSafePlus.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './App.ts', './Config.ts', './Http.ts', './Global.ts', './BroadcastListener.ts'], function (exports) {
  var _applyDecoratedDescriptor, _initializerDefineProperty, _inheritsLoose, _assertThisInitialized, cclegacy, _decorator, Button, EditBox, Label, Node, Color, Component, App, Configs, Http, Global, BroadcastReceiver;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _initializerDefineProperty = module.initializerDefineProperty;
      _inheritsLoose = module.inheritsLoose;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Button = module.Button;
      EditBox = module.EditBox;
      Label = module.Label;
      Node = module.Node;
      Color = module.Color;
      Component = module.Component;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      Global = module.Global;
    }, function (module) {
      BroadcastReceiver = module.BroadcastReceiver;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2, _dec4, _dec5, _dec6, _dec7, _class4, _class5, _descriptor3, _descriptor4, _descriptor5, _dec8, _dec9, _dec10, _class7, _class8, _descriptor6, _descriptor7, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _class10, _class11, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19;
      cclegacy._RF.push({}, "2f3c5gDmStGy7KkwYHbEaHf", "Lobby.PopupSecurity.TabSafePlus", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var CancelServiceForm = exports('CancelServiceForm', (_dec = ccclass("CancelServiceForm"), _dec2 = property(Button), _dec3 = property(EditBox), _dec(_class = (_class2 = function CancelServiceForm() {
        _initializerDefineProperty(this, "btnGetOtp", _descriptor, this);
        _initializerDefineProperty(this, "edbOtp", _descriptor2, this);
      }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "btnGetOtp", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "edbOtp", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      var ChangePhoneForm = exports('ChangePhoneForm', (_dec4 = ccclass("ChangePhoneForm"), _dec5 = property(Button), _dec6 = property(EditBox), _dec7 = property(EditBox), _dec4(_class4 = (_class5 = function ChangePhoneForm() {
        _initializerDefineProperty(this, "btnGetOtp", _descriptor3, this);
        _initializerDefineProperty(this, "edbPhoneNumber", _descriptor4, this);
        _initializerDefineProperty(this, "edbOtp", _descriptor5, this);
      }, (_descriptor3 = _applyDecoratedDescriptor(_class5.prototype, "btnGetOtp", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class5.prototype, "edbPhoneNumber", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class5.prototype, "edbOtp", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class5)) || _class4));
      var CancelTelesafeForm = exports('CancelTelesafeForm', (_dec8 = ccclass("CancelTelesafeForm"), _dec9 = property(Button), _dec10 = property(EditBox), _dec8(_class7 = (_class8 = function CancelTelesafeForm() {
        _initializerDefineProperty(this, "btnGetOtp", _descriptor6, this);
        _initializerDefineProperty(this, "edbOtp", _descriptor7, this);
      }, (_descriptor6 = _applyDecoratedDescriptor(_class8.prototype, "btnGetOtp", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class8.prototype, "edbOtp", [_dec10], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class8)) || _class7));
      var TabSafePlus = exports('TabSafePlus', (_dec11 = property(Label), _dec12 = property(Label), _dec13 = property(Label), _dec14 = property(Node), _dec15 = property(Node), _dec16 = property(Node), _dec17 = property(CancelServiceForm), _dec18 = property(ChangePhoneForm), _dec19 = property(CancelTelesafeForm), _dec20 = property(Node), _dec21 = property(Node), _dec22 = property(Node), ccclass(_class10 = (_class11 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(TabSafePlus, _Component);
        function TabSafePlus() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "infoLblUsername", _descriptor8, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "infoLblMobile", _descriptor9, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "infoLblTelesafe", _descriptor10, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "formCancelSMS", _descriptor11, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "formChangeCMS", _descriptor12, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "formCancelTelesafe", _descriptor13, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "cancelServiceForm", _descriptor14, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "changePhoneForm", _descriptor15, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "cancelTelesafeForm", _descriptor16, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "secureOTPContainer", _descriptor17, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "telesafeContainer", _descriptor18, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "smsContainer", _descriptor19, _assertThisInitialized(_this));
          _this._changeFormShowed = false;
          _this._cancelFormShowed = false;
          _this._cancelTelesafeFormShowed = false;
          return _this;
        }
        var _proto = TabSafePlus.prototype;
        _proto.onLoad = function onLoad() {
          var _Configs$Login$Mobile, _Configs$Login$TeleSa;
          this.infoLblUsername.string = Configs.Login.Username;
          this.infoLblMobile.string = (_Configs$Login$Mobile = Configs.Login.MobilePhone) == null ? void 0 : _Configs$Login$Mobile.replace(/^(.{3})(.*)(.{3})$/, function (_, a, b, c) {
            return a + '*'.repeat(b.length) + c;
          });
          this.infoLblTelesafe.string = (_Configs$Login$TeleSa = Configs.Login.TeleSafe) == null ? void 0 : _Configs$Login$TeleSa.replace(/^(.{3})(.*)(.{3})$/, function (_, a, b, c) {
            return a + '*'.repeat(b.length) + c;
          });
          this.cancelServiceForm.btnGetOtp.node.on('click', function () {
            App.instance.showLoading(true);
            var url = Configs.App.DOMAIN_CONFIG["GetSmsOtp"];
            var payload = {
              "CurrencyID": Configs.Login.CurrencyID,
              "ServiceID": Configs.SMSService.CONFIRM_PHONE,
              "Username": Configs.Login.Username
            };
            Http.post(url, payload, function (status, res) {
              App.instance.showLoading(false);
              if (status === 200) {
                App.instance.alertDialog.showMsg(App.instance.getTextLang('se76'));
              }
            });
          });
          this.changePhoneForm.btnGetOtp.node.on('click', function () {
            App.instance.showLoading(true);
            var url = Configs.App.DOMAIN_CONFIG["GetSmsOtp"];
            var payload = {
              "CurrencyID": Configs.Login.CurrencyID,
              "ServiceID": Configs.SMSService.CHANGE_PHONE,
              "Username": Configs.Login.Username
            };
            Http.post(url, payload, function (status, res) {
              App.instance.showLoading(false);
              if (status === 200) {
                App.instance.alertDialog.showMsg(App.instance.getTextLang('se76'));
              }
            });
          });
          this.cancelTelesafeForm.btnGetOtp.node.on('click', function () {
            App.instance.showLoading(true);
            Http.post(Configs.App.DOMAIN_CONFIG["GetTeleSafeOtp"], {
              "Username": Configs.Login.Username,
              "IsVerify": 0
            }, function (status, res) {
              App.instance.showLoading(false);
              if (status === 200) {
                App.instance.alertDialog.showMsg(App.instance.getTextLang('se82'));
              }
            });
          });
        };
        _proto.onEnable = function onEnable() {
          this.checkStatusSecureOTP();
          this.telesafeContainer.active = [3, 5, 6, 7].indexOf(Configs.Login.SecurityStatus) !== -1;
          this.smsContainer.active = [1, 4, 5, 7].indexOf(Configs.Login.SecurityStatus) !== -1;
          this.onClickButtonBack();
        };
        _proto.checkStatusSecureOTP = function checkStatusSecureOTP() {
          var _this2 = this;
          Http.get(Configs.App.DOMAIN_CONFIG['GetSMSInfo'], {}, function (_status, res) {
            var isSecure = res.d.some(function (s) {
              return s.serviceID == 1;
            });
            _this2.secureOTPContainer.getChildByName('checkmark').active = isSecure;
            _this2.secureOTPContainer.getChildByName('text').getComponent(Label).color = isSecure ? Color.WHITE.fromHEX('#2CFB86') : Color.WHITE;
          });
        };
        _proto.showFormCancelSMS = function showFormCancelSMS() {
          this.formCancelSMS.active = true;
          this.formChangeCMS.active = false;
          this.formCancelTelesafe.active = false;
          this._cancelFormShowed = true;
          this._changeFormShowed = false;
          this._cancelTelesafeFormShowed = false;
        };
        _proto.showFormChangeCMS = function showFormChangeCMS() {
          this.formCancelSMS.active = false;
          this.formChangeCMS.active = true;
          this.formCancelTelesafe.active = false;
          this._cancelFormShowed = false;
          this._changeFormShowed = true;
          this._cancelTelesafeFormShowed = false;
        };
        _proto.showFormCancelTelesafe = function showFormCancelTelesafe() {
          this.formCancelSMS.active = false;
          this.formChangeCMS.active = false;
          this.formCancelTelesafe.active = true;
          this._cancelFormShowed = false;
          this._changeFormShowed = false;
          this._cancelTelesafeFormShowed = true;
        };
        _proto.onClickButtonBack = function onClickButtonBack() {
          this.formCancelSMS.active = false;
          this.formChangeCMS.active = false;
          this.formCancelTelesafe.active = false;
          this.cancelServiceForm.edbOtp.string = "";
          this.changePhoneForm.edbOtp.string = "";
          this.changePhoneForm.edbPhoneNumber.string = "";
          this.cancelTelesafeForm.edbOtp.string = "";
        };
        _proto.onClickContinueButton = function onClickContinueButton() {
          if (this._cancelFormShowed) {
            this.confirmCancelService();
          }
          if (this._changeFormShowed) {
            this.confirmChangePhone();
          }
          if (this._cancelTelesafeFormShowed) {
            this.confirmCancelTelesafe();
          }
        };
        _proto.confirmCancelService = function confirmCancelService() {
          var _this3 = this;
          App.instance.showLoading(true);
          var url = Configs.App.DOMAIN_CONFIG['ConfirmCancelMobile'];
          var payload = {
            "OTP": this.cancelServiceForm.edbOtp.string.trim()
          };
          Http.post(url, payload, function (status, res) {
            App.instance.showLoading(false);
            if (status === 200) {
              App.instance.notificationDialog.showMsg(App.instance.getTextLang("me-1023"));
              _this3.scheduleOnce(function () {
                var _Global$PopupProfile;
                Global.PopupSecurity.dismiss();
                (_Global$PopupProfile = Global.PopupProfile) == null || _Global$PopupProfile.dismiss();
                BroadcastReceiver.send(BroadcastReceiver.USER_LOGOUT);
              }, 1);
            }
          });
        };
        _proto.confirmChangePhone = function confirmChangePhone() {
          var _this4 = this;
          App.instance.showLoading(true);
          var url = Configs.App.DOMAIN_CONFIG['ChangeMobile'];
          var payload = {
            "OldMobile": Configs.Login.MobilePhone,
            "NewMobile": this.changePhoneForm.edbPhoneNumber.string.trim(),
            "OTP": this.changePhoneForm.edbOtp.string.trim()
          };
          Http.post(url, payload, function (status, res) {
            App.instance.showLoading(false);
            if (status === 200) {
              App.instance.notificationDialog.showMsg(App.instance.getTextLang("me-1023"));
              _this4.scheduleOnce(function () {
                var _Global$PopupProfile2;
                Global.PopupSecurity.dismiss();
                (_Global$PopupProfile2 = Global.PopupProfile) == null || _Global$PopupProfile2.dismiss();
                BroadcastReceiver.send(BroadcastReceiver.USER_LOGOUT);
              }, 1);
            }
          });
        };
        _proto.confirmCancelTelesafe = function confirmCancelTelesafe() {
          var _this5 = this;
          App.instance.showLoading(true);
          var url = Configs.App.DOMAIN_CONFIG['ConfirmCancelTeleSafe'];
          var payload = {
            "OTP": this.cancelTelesafeForm.edbOtp.string.trim()
          };
          Http.post(url, payload, function (status, res) {
            App.instance.showLoading(false);
            if (status === 200) {
              App.instance.notificationDialog.showMsg(App.instance.getTextLang("me-1023"));
              _this5.scheduleOnce(function () {
                var _Global$PopupProfile3;
                Global.PopupSecurity.dismiss();
                (_Global$PopupProfile3 = Global.PopupProfile) == null || _Global$PopupProfile3.dismiss();
                BroadcastReceiver.send(BroadcastReceiver.USER_LOGOUT);
              }, 1);
            }
          });
        };
        return TabSafePlus;
      }(Component), (_descriptor8 = _applyDecoratedDescriptor(_class11.prototype, "infoLblUsername", [_dec11], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor9 = _applyDecoratedDescriptor(_class11.prototype, "infoLblMobile", [_dec12], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor10 = _applyDecoratedDescriptor(_class11.prototype, "infoLblTelesafe", [_dec13], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor11 = _applyDecoratedDescriptor(_class11.prototype, "formCancelSMS", [_dec14], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor12 = _applyDecoratedDescriptor(_class11.prototype, "formChangeCMS", [_dec15], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor13 = _applyDecoratedDescriptor(_class11.prototype, "formCancelTelesafe", [_dec16], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor14 = _applyDecoratedDescriptor(_class11.prototype, "cancelServiceForm", [_dec17], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor15 = _applyDecoratedDescriptor(_class11.prototype, "changePhoneForm", [_dec18], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor16 = _applyDecoratedDescriptor(_class11.prototype, "cancelTelesafeForm", [_dec19], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor17 = _applyDecoratedDescriptor(_class11.prototype, "secureOTPContainer", [_dec20], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor18 = _applyDecoratedDescriptor(_class11.prototype, "telesafeContainer", [_dec21], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor19 = _applyDecoratedDescriptor(_class11.prototype, "smsContainer", [_dec22], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class11)) || _class10));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Lobby.PopupSecurity.TabSecureLogin.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './App.ts', './Config.ts', './Http.ts', './DropDown.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, EditBox, RichText, Label, Component, App, Configs, Http, DropDown;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      EditBox = module.EditBox;
      RichText = module.RichText;
      Label = module.Label;
      Component = module.Component;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      DropDown = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9;
      cclegacy._RF.push({}, "94a993PeM1PzppRLYk8mnqi", "Lobby.PopupSecurity.TabSecureLogin", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var TabSecureLogin = exports('TabSecureLogin', (_dec = property(Node), _dec2 = property(Node), _dec3 = property(Node), _dec4 = property(EditBox), _dec5 = property(EditBox), _dec6 = property(Node), _dec7 = property(DropDown), _dec8 = property(RichText), _dec9 = property(Node), ccclass(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(TabSecureLogin, _Component);
        function TabSecureLogin() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "enableSecure", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "disableSecure", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "requireAuth", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbMinAmount", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbOtp", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "statusSecureNode", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "selector", _descriptor7, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblOtpRequire", _descriptor8, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "toastNode", _descriptor9, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = TabSecureLogin.prototype;
        _proto.onLoad = function onLoad() {
          var _this2 = this;
          this.disableSecure.active = true;
          this.requireAuth.active = false;
          this.statusSecureNode.active = false;
          this.toastNode.active = false;
          this.selector.setCallBack(function (index) {
            switch (index) {
              case 0:
                _this2.lblOtpRequire.string = App.instance.getTextLang('txt_otp_note');
                break;
              case 1:
                _this2.lblOtpRequire.string = App.instance.getTextLang('txt_otp_code_note');
                break;
            }
          });
          this.lblOtpRequire.string = App.instance.getTextLang('txt_otp_note');
        };
        _proto.registerSecureLogin = function registerSecureLogin() {
          var _this3 = this;
          if ([1, 3, 4, 5, 6, 7].indexOf(Configs.Login.SecurityStatus) === -1) {
            this.requireAuth.active = true;
            this.scheduleOnce(function () {
              _this3.requireAuth.active = false;
            }, 3);
          } else {
            App.instance.showLoading(true);
            Http.post(Configs.App.DOMAIN_CONFIG['SMSPlusCreateService'], {
              MinAmount: 0
            }, function (status, _res) {
              App.instance.showLoading(false);
              if (status === 200) {
                _this3.enableSecure.active = false;
                _this3.disableSecure.active = false;
                _this3.statusSecureNode.active = true;
                _this3.statusSecureNode.getComponentInChildren(Label).string = App.instance.getTextLang('se34');
              }
            });
          }
        };
        _proto.onEnable = function onEnable() {
          this.updateStatus();
        };
        _proto.updateStatus = function updateStatus() {
          var _this4 = this;
          this.edbMinAmount.string = "0";
          this.edbOtp.string = "";
          Http.get(Configs.App.DOMAIN_CONFIG['GetSMSInfo'], {}, function (_status, res) {
            var isSecure = res.d.some(function (s) {
              return s.serviceID == 1;
            });
            if (isSecure) {
              var secureInfo = res.d.find(function (s) {
                return s.serviceID == 1;
              });
              _this4.edbMinAmount.string = secureInfo.minAmount.toLocaleString("vi-VN");
            }
            _this4.enableSecure.active = isSecure;
            _this4.disableSecure.active = !isSecure;
            _this4.statusSecureNode.active = false;
          });
        };
        _proto.getOtp = function getOtp() {
          var _this5 = this;
          App.instance.showLoading(true);
          var index = this.selector.selectedIndex;
          switch (index) {
            case 0:
              Http.post(Configs.App.DOMAIN_CONFIG["GetSmsOtp"], {
                "CurrencyID": Configs.Login.CurrencyID,
                "ServiceID": Configs.SMSService.ACTIVE_LOGIN_OTP,
                "Username": Configs.Login.Username
              }, function (status, res) {
                App.instance.showLoading(false);
                if (status === 200) {
                  _this5.showToast(App.instance.getTextLang('se76'));
                }
              });
              break;
            case 1:
              Http.post(Configs.App.DOMAIN_CONFIG["GetTeleSafeOtp"], {
                "Username": Configs.Login.Username,
                "IsVerify": 0
              }, function (status, res) {
                App.instance.showLoading(false);
                if (status === 200) {
                  _this5.showToast(App.instance.getTextLang('se82'));
                }
              });
              break;
          }
        };
        _proto.updateMinAmount = function updateMinAmount() {
          var _this6 = this;
          var minAmount = parseInt(this.edbMinAmount.string);
          if (isNaN(minAmount) || minAmount < 0) {
            this.showToast(App.instance.getTextLang('me-60'));
            return;
          }
          var OTP = this.edbOtp.string.trim();
          if (OTP.length === 0) {
            this.showToast(App.instance.getTextLang('txt_otp_blank'));
            return;
          }
          App.instance.showLoading(true);
          Http.post(Configs.App.DOMAIN_CONFIG['SMSPlusUpdateService'], {
            MinAmount: minAmount,
            OTP: OTP
          }, function (status, _res) {
            App.instance.showLoading(false);
            _this6.updateStatus();
            if (status === 200) {
              _this6.showToast(App.instance.getTextLang('txt_success'));
            }
          });
        };
        _proto.cancelSecureLogin = function cancelSecureLogin() {
          var _this7 = this;
          var OTP = this.edbOtp.string.trim();
          if (OTP.length === 0) {
            this.showToast(App.instance.getTextLang('txt_otp_blank'));
            return;
          }
          App.instance.showLoading(true);
          Http.post(Configs.App.DOMAIN_CONFIG['SMSPlusCancelService'], {
            OTPType: this.selector.selectedIndex === 0 ? 1 : 3,
            OTP: OTP
          }, function (status, _res) {
            App.instance.showLoading(false);
            if (status === 200) {
              _this7.enableSecure.active = false;
              _this7.disableSecure.active = false;
              _this7.statusSecureNode.active = true;
              _this7.statusSecureNode.getComponentInChildren(Label).string = App.instance.getTextLang('se35');
            }
          });
        };
        _proto.showToast = function showToast(message) {
          var _this8 = this;
          this.toastNode.getComponent(Label).string = message;
          this.toastNode.active = true;
          this.scheduleOnce(function () {
            _this8.toastNode.active = false;
          }, 3);
        };
        return TabSecureLogin;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "enableSecure", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "disableSecure", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "requireAuth", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "edbMinAmount", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "edbOtp", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "statusSecureNode", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "selector", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "lblOtpRequire", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "toastNode", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Lobby.PopupSecurity.TabSecurityInfo.SecureForm.Email.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './App.ts', './Config.ts', './Http.ts', './Global.ts', './BroadcastListener.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, EditBox, Node, Label, Component, App, Configs, Http, Global, BroadcastReceiver;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      EditBox = module.EditBox;
      Node = module.Node;
      Label = module.Label;
      Component = module.Component;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      Global = module.Global;
    }, function (module) {
      BroadcastReceiver = module.BroadcastReceiver;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;
      cclegacy._RF.push({}, "2684cZbLMFADoTfZPwzBG48", "Lobby.PopupSecurity.TabSecurityInfo.SecureForm.Email", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var EmailSecureForm = exports('EmailSecureForm', (_dec = ccclass("Lobby.PopupSecurity.TabSecurityInfo.SecureForm.Email"), _dec2 = property(EditBox), _dec3 = property(Node), _dec4 = property(Label), _dec5 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(EmailSecureForm, _Component);
        function EmailSecureForm() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "edbOtp", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "btn", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblMail", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "toastNode", _descriptor4, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = EmailSecureForm.prototype;
        _proto.onEnable = function onEnable() {
          this.toastNode.active = false;
          this.edbOtp.string = "";
        };
        _proto.onLoad = function onLoad() {
          var _this2 = this;
          this.btn.on('click', function () {
            App.instance.showLoading(true);
            var otp = _this2.edbOtp.string.trim();
            Http.post(Configs.App.DOMAIN_CONFIG['ConfirmEmail'], {
              "OTP": otp
            }, function (_status, res) {
              if (res.c < 0 && res.c !== -1023) {
                App.instance.showLoading(false);
                _this2.showToast(App.instance.getTextLang("me" + res.c));
                return;
              }
              App.instance.showLoading(false);
              App.instance.notificationDialog.showMsg(App.instance.getTextLang('me-1023'));
              _this2.scheduleOnce(function () {
                var _Global$PopupProfile;
                Global.PopupSecurity.dismiss();
                (_Global$PopupProfile = Global.PopupProfile) == null || _Global$PopupProfile.dismiss();
                BroadcastReceiver.send(BroadcastReceiver.USER_LOGOUT);
              }, 1);
            }, false);
          });
        };
        _proto.showToast = function showToast(message) {
          var _this3 = this;
          this.toastNode.getComponent(Label).string = message;
          this.toastNode.active = true;
          this.scheduleOnce(function () {
            _this3.toastNode.active = false;
          }, 3);
        };
        return EmailSecureForm;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "edbOtp", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "btn", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "lblMail", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "toastNode", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Lobby.PopupSecurity.TabSecurityInfo.SecureForm.Sms.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './App.ts', './Config.ts', './Http.ts', './Global.ts', './BroadcastListener.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, EditBox, Label, Node, Component, App, Configs, Http, Global, BroadcastReceiver;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      EditBox = module.EditBox;
      Label = module.Label;
      Node = module.Node;
      Component = module.Component;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      Global = module.Global;
    }, function (module) {
      BroadcastReceiver = module.BroadcastReceiver;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7;
      cclegacy._RF.push({}, "441673uZHNJIL41Ni0yyidJ", "Lobby.PopupSecurity.TabSecurityInfo.SecureForm.Sms", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var SmsSecureForm = exports('SmsSecureForm', (_dec = ccclass("Lobby.PopupSecurity.TabSecurityInfo.SecureForm.Sms"), _dec2 = property(EditBox), _dec3 = property(EditBox), _dec4 = property(Label), _dec5 = property(Label), _dec6 = property(Node), _dec7 = property(Node), _dec8 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(SmsSecureForm, _Component);
        function SmsSecureForm() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "edbOtpSMS", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbOtpTelesafe", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblMobile", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblTelesafe", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "viewVerifySMS", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "viewVerifyTelesafe", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "toastNode", _descriptor7, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = SmsSecureForm.prototype;
        _proto.onEnable = function onEnable() {
          this.toastNode.active = false;
          var needVerifiedTelesafe = [3, 6].indexOf(Configs.Login.SecurityStatus) !== -1;
          this.viewVerifyTelesafe.active = needVerifiedTelesafe;
          this.viewVerifySMS.active = !needVerifiedTelesafe;
          this.edbOtpTelesafe.string = "";
          this.edbOtpSMS.string = "";
        };
        _proto.verifyTelesafe = function verifyTelesafe() {
          var _this2 = this;
          var OTP = this.edbOtpTelesafe.string.trim();
          if (OTP.length === 0) {
            this.showToast(App.instance.getTextLang('txt_otp_blank'));
            return;
          }
          App.instance.showLoading(true);
          Http.post(Configs.App.DOMAIN_CONFIG['VerifyTeleSafe'], {
            OTP: OTP
          }, function (_status, res) {
            _this2.edbOtpTelesafe.string = "";
            _this2.edbOtpSMS.string = "";
            if (res.c < 0) {
              App.instance.showLoading(false);
              _this2.showToast(App.instance.getTextLang("me" + res.c));
              return;
            }
            App.instance.showLoading(false);
            _this2.viewVerifySMS.active = true;
            _this2.viewVerifyTelesafe.active = false;
          }, false);
        };
        _proto.verifySMS = function verifySMS() {
          var _this3 = this;
          var OTP = this.edbOtpSMS.string.trim();
          if (OTP.length === 0) {
            this.showToast(App.instance.getTextLang('txt_otp_blank'));
            return;
          }
          App.instance.showLoading(true);
          Http.post(Configs.App.DOMAIN_CONFIG['ConfirmMobile'], {
            OTP: OTP
          }, function (_status, res) {
            if (res.c < 0 && res.c !== -1023) {
              App.instance.showLoading(false);
              _this3.showToast(App.instance.getTextLang("me" + res.c));
              return;
            }
            App.instance.showLoading(false);
            App.instance.notificationDialog.showMsg(App.instance.getTextLang('me-1023'));
            _this3.scheduleOnce(function () {
              var _Global$PopupProfile;
              Global.PopupSecurity.dismiss();
              (_Global$PopupProfile = Global.PopupProfile) == null || _Global$PopupProfile.dismiss();
              BroadcastReceiver.send(BroadcastReceiver.USER_LOGOUT);
            }, 1);
          }, false);
        };
        _proto.getOTPVerifySMS = function getOTPVerifySMS() {
          App.instance.showLoading(true);
          var url = Configs.App.DOMAIN_CONFIG["GetSmsOtp"];
          var payload = {
            "CurrencyID": Configs.Login.CurrencyID,
            "ServiceID": Configs.SMSService.CONFIRM_PHONE,
            "Username": Configs.Login.Username
          };
          Http.post(url, payload, function (status, res) {
            App.instance.showLoading(false);
            if (status == 200) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('se76'));
            }
          });
        };
        _proto.getOTPVerifyTelesafe = function getOTPVerifyTelesafe() {
          App.instance.showLoading(true);
          var url = Configs.App.DOMAIN_CONFIG["GetTeleSafeOtp"];
          var payload = {
            "IsVerify": 0
          };
          Http.post(url, payload, function (status, res) {
            App.instance.showLoading(false);
            if (status == 200) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('se82'));
            }
          });
        };
        _proto.showToast = function showToast(message) {
          var _this4 = this;
          this.toastNode.getComponent(Label).string = message;
          this.toastNode.active = true;
          this.scheduleOnce(function () {
            _this4.toastNode.active = false;
          }, 3);
        };
        return SmsSecureForm;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "edbOtpSMS", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "edbOtpTelesafe", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "lblMobile", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "lblTelesafe", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "viewVerifySMS", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "viewVerifyTelesafe", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "toastNode", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Lobby.PopupSecurity.TabSecurityInfo.SecureForm.Telesafe.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './App.ts', './Config.ts', './Http.ts', './Global.ts', './BroadcastListener.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, EditBox, Label, Node, Component, App, Configs, Http, Global, BroadcastReceiver;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      EditBox = module.EditBox;
      Label = module.Label;
      Node = module.Node;
      Component = module.Component;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      Global = module.Global;
    }, function (module) {
      BroadcastReceiver = module.BroadcastReceiver;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7;
      cclegacy._RF.push({}, "b8d343941hN+4Uj2tEfzUU4", "Lobby.PopupSecurity.TabSecurityInfo.SecureForm.Telesafe", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var TelesafeSecureForm = exports('TelesafeSecureForm', (_dec = ccclass("Lobby.PopupSecurity.TabSecurityInfo.SecureForm.Telesafe"), _dec2 = property(EditBox), _dec3 = property(EditBox), _dec4 = property(Label), _dec5 = property(Label), _dec6 = property(Node), _dec7 = property(Node), _dec8 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(TelesafeSecureForm, _Component);
        function TelesafeSecureForm() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "edbOtpSMS", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbOtpTelesafe", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblTelesafe", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblSMS", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "viewVerifySMS", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "viewVerifyTelesafe", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "toastNode", _descriptor7, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = TelesafeSecureForm.prototype;
        _proto.onEnable = function onEnable() {
          this.toastNode.active = false;
          var needVerifiedSMS = [1, 4].indexOf(Configs.Login.SecurityStatus) !== -1;
          this.viewVerifySMS.active = needVerifiedSMS;
          this.viewVerifyTelesafe.active = !needVerifiedSMS;
          this.edbOtpTelesafe.string = "";
          this.edbOtpSMS.string = "";
        };
        _proto.verifyTelesafe = function verifyTelesafe() {
          var _this2 = this;
          var OTP = this.edbOtpTelesafe.string.trim();
          if (OTP.length === 0) {
            this.showToast(App.instance.getTextLang('txt_otp_blank'));
            return;
          }
          App.instance.showLoading(true);
          Http.post(Configs.App.DOMAIN_CONFIG['ConfirmTeleSafe'], {
            OTP: OTP
          }, function (_status, res) {
            _this2.edbOtpTelesafe.string = "";
            _this2.edbOtpSMS.string = "";
            if (res.c < 0 && res.c !== -1023) {
              App.instance.showLoading(false);
              _this2.showToast(App.instance.getTextLang("me" + res.c));
              return;
            }
            App.instance.showLoading(false);
            App.instance.notificationDialog.showMsg(App.instance.getTextLang('me-1023'));
            _this2.scheduleOnce(function () {
              var _Global$PopupProfile;
              Global.PopupSecurity.dismiss();
              (_Global$PopupProfile = Global.PopupProfile) == null || _Global$PopupProfile.dismiss();
              BroadcastReceiver.send(BroadcastReceiver.USER_LOGOUT);
            }, 1);
          }, false);
        };
        _proto.verifySMS = function verifySMS() {
          var _this3 = this;
          var OTP = this.edbOtpSMS.string.trim();
          if (OTP.length === 0) {
            this.showToast(App.instance.getTextLang('txt_otp_blank'));
            return;
          }
          App.instance.showLoading(true);
          Http.post(Configs.App.DOMAIN_CONFIG['VerifySmsOtp'], {
            OTP: OTP
          }, function (_status, res) {
            _this3.edbOtpSMS.string = "";
            if (res.c < 0) {
              App.instance.showLoading(false);
              _this3.showToast(App.instance.getTextLang("me" + res.c));
              return;
            }
            App.instance.showLoading(false);
            _this3.viewVerifySMS.active = false;
            _this3.viewVerifyTelesafe.active = true;
          }, false);
        };
        _proto.getOTPVerifySMS = function getOTPVerifySMS() {
          App.instance.showLoading(true);
          var url = Configs.App.DOMAIN_CONFIG["GetSmsOtp"];
          var payload = {
            "CurrencyID": Configs.Login.CurrencyID,
            "ServiceID": Configs.SMSService.VERIFY_PHONE,
            "Username": Configs.Login.Username
          };
          Http.post(url, payload, function (status, res) {
            App.instance.showLoading(false);
            if (status == 200) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('se76'));
            }
          });
        };
        _proto.getOTPVerifyTelesafe = function getOTPVerifyTelesafe() {
          App.instance.showLoading(true);
          var url = Configs.App.DOMAIN_CONFIG["GetTeleSafeOtp"];
          var payload = {
            "IsVerify": 1
          };
          Http.post(url, payload, function (status, res) {
            App.instance.showLoading(false);
            if (status == 200) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('se82'));
            }
          });
        };
        _proto.showToast = function showToast(message) {
          var _this4 = this;
          this.toastNode.getComponent(Label).string = message;
          this.toastNode.active = true;
          this.scheduleOnce(function () {
            _this4.toastNode.active = false;
          }, 3);
        };
        return TelesafeSecureForm;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "edbOtpSMS", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "edbOtpTelesafe", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "lblTelesafe", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "lblSMS", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "viewVerifySMS", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "viewVerifyTelesafe", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "toastNode", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Lobby.PopupSecurity.TabSecurityInfo.SecureForm.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './App.ts', './Config.ts', './Http.ts', './Lobby.PopupSecurity.TabSecurityInfo.SecureForm.Email.ts', './Lobby.PopupSecurity.TabSecurityInfo.SecureForm.Sms.ts', './Global.ts', './Lobby.PopupSecurity.TabSecurityInfo.SecureForm.Telesafe.ts', './BroadcastListener.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Label, Toggle, EditBox, Component, App, Configs, Http, EmailSecureForm, SmsSecureForm, Global, TelesafeSecureForm, BroadcastReceiver;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Label = module.Label;
      Toggle = module.Toggle;
      EditBox = module.EditBox;
      Component = module.Component;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      EmailSecureForm = module.EmailSecureForm;
    }, function (module) {
      SmsSecureForm = module.SmsSecureForm;
    }, function (module) {
      Global = module.Global;
    }, function (module) {
      TelesafeSecureForm = module.TelesafeSecureForm;
    }, function (module) {
      BroadcastReceiver = module.BroadcastReceiver;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _dec25, _dec26, _dec27, _dec28, _dec29, _dec30, _dec31, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _descriptor25, _descriptor26, _descriptor27, _descriptor28, _descriptor29, _descriptor30, _descriptor31;
      cclegacy._RF.push({}, "fd874LnG65PvKqFguPqRyM6", "Lobby.PopupSecurity.TabSecurityInfo.SecureForm", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var TabSecurityInfoSecureForm = exports('TabSecurityInfoSecureForm', (_dec = property(Node), _dec2 = property(Label), _dec3 = property(Label), _dec4 = property(Label), _dec5 = property(Label), _dec6 = property(Label), _dec7 = property(Toggle), _dec8 = property(Toggle), _dec9 = property(Node), _dec10 = property(Node), _dec11 = property(Node), _dec12 = property(Node), _dec13 = property(Node), _dec14 = property(Node), _dec15 = property(Node), _dec16 = property(Node), _dec17 = property(Node), _dec18 = property(Node), _dec19 = property(Node), _dec20 = property(Node), _dec21 = property(Node), _dec22 = property(Node), _dec23 = property(Node), _dec24 = property(Node), _dec25 = property(Node), _dec26 = property(Node), _dec27 = property(EmailSecureForm), _dec28 = property(SmsSecureForm), _dec29 = property(TelesafeSecureForm), _dec30 = property(Node), _dec31 = property(Node), ccclass(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(TabSecurityInfoSecureForm, _Component);
        function TabSecurityInfoSecureForm() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "getOtpSecureView", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblAccount", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblEmail", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblMobile", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblTelesafe", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblNickname", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "changeEmailToggle", _descriptor7, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "changeSmsToggle", _descriptor8, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "editEmail", _descriptor9, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "buttonEmail", _descriptor10, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "buttonActiveEmail", _descriptor11, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "buttonSaveEmail", _descriptor12, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "buttonChangeEmail", _descriptor13, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "verifiedEmail", _descriptor14, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "editMobile", _descriptor15, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "buttonMobile", _descriptor16, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "buttonActiveMobile", _descriptor17, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "buttonSaveMobile", _descriptor18, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "buttonChangeMobile", _descriptor19, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "verifiedMobile", _descriptor20, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "editTelesafe", _descriptor21, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "buttonTelesafe", _descriptor22, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "buttonActiveTelesafe", _descriptor23, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "buttonSaveTelesafe", _descriptor24, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "buttonChangeTelesafe", _descriptor25, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "verifiedTelesafe", _descriptor26, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "emailSecureForm", _descriptor27, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "smsSecureForm", _descriptor28, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "telesafeSecureForm", _descriptor29, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "btnCapNhat", _descriptor30, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "toastNode", _descriptor31, _assertThisInitialized(_this));
          _this._openChangeEmail = false;
          _this._openChangeMobile = false;
          _this._openChangeTelesafe = false;
          return _this;
        }
        var _proto = TabSecurityInfoSecureForm.prototype;
        _proto.onLoad = function onLoad() {
          var _this2 = this,
            _Configs$Login$Mobile,
            _Configs$Login$Mobile2,
            _Configs$Login$TeleSa,
            _Configs$Login$TeleSa2;
          this.toastNode.active = false;
          this.buttonChangeEmail.on('toggle', function () {
            _this2._openChangeEmail = !_this2._openChangeEmail;
            _this2.updateUI();
          });
          this.buttonChangeMobile.on('toggle', function () {
            _this2._openChangeMobile = !_this2._openChangeMobile;
            _this2.updateUI();
          });
          this.buttonChangeTelesafe.on('toggle', function () {
            _this2._openChangeTelesafe = !_this2._openChangeTelesafe;
            _this2.updateUI();
          });
          this.updateVerifiedUI();
          this.updateUI();
          this.emailSecureForm.lblMail.string = Configs.Login.Mail;
          this.smsSecureForm.lblMobile.string = (_Configs$Login$Mobile = Configs.Login.MobilePhone) == null ? void 0 : _Configs$Login$Mobile.replace(/^(.{3})(.*)(.{3})$/, function (_, a, b, c) {
            return a + '*'.repeat(b.length) + c;
          });
          this.telesafeSecureForm.lblSMS.string = (_Configs$Login$Mobile2 = Configs.Login.MobilePhone) == null ? void 0 : _Configs$Login$Mobile2.replace(/^(.{3})(.*)(.{3})$/, function (_, a, b, c) {
            return a + '*'.repeat(b.length) + c;
          });
          this.telesafeSecureForm.lblTelesafe.string = (_Configs$Login$TeleSa = Configs.Login.TeleSafe) == null ? void 0 : _Configs$Login$TeleSa.replace(/^(.{3})(.*)(.{3})$/, function (_, a, b, c) {
            return a + '*'.repeat(b.length) + c;
          });
          this.smsSecureForm.lblTelesafe.string = (_Configs$Login$TeleSa2 = Configs.Login.TeleSafe) == null ? void 0 : _Configs$Login$TeleSa2.replace(/^(.{3})(.*)(.{3})$/, function (_, a, b, c) {
            return a + '*'.repeat(b.length) + c;
          });
        };
        _proto.start = function start() {
          var _Configs$Login$Mobile3, _Configs$Login$TeleSa3;
          this.lblAccount.string = Configs.Login.Username;
          this.lblEmail.string = Configs.Login.Mail;
          this.lblMobile.string = (_Configs$Login$Mobile3 = Configs.Login.MobilePhone) == null ? void 0 : _Configs$Login$Mobile3.replace(/^(.{3})(.*)(.{3})$/, function (_, a, b, c) {
            return a + '*'.repeat(b.length) + c;
          });
          this.lblTelesafe.string = (_Configs$Login$TeleSa3 = Configs.Login.TeleSafe) == null ? void 0 : _Configs$Login$TeleSa3.replace(/^(.{3})(.*)(.{3})$/, function (_, a, b, c) {
            return a + '*'.repeat(b.length) + c;
          });
          this.lblNickname.string = Configs.Login.Nickname;
          this.getOtpSecureView.getChildByName("account").getComponentInChildren(Label).string = Configs.Login.Username;
          this.getOtpSecureView.getChildByName("nickname").getComponentInChildren(Label).string = Configs.Login.Nickname;
          var isEmptyMail = Configs.Login.Mail === "";
          var isEmptyMobile = Configs.Login.MobilePhone === "";
          var isEmptyTelesafe = Configs.Login.TeleSafe === "";
          this.editEmail.active = isEmptyMail;
          this.buttonEmail.active = !isEmptyMail;
          this.editMobile.active = isEmptyMobile;
          this.buttonMobile.active = !isEmptyMobile;
          this.editTelesafe.active = isEmptyTelesafe;
          this.buttonTelesafe.active = !isEmptyTelesafe;
        }

        /// 0: Chưa confirm gì
        /// 1:Confirm Mobile
        /// 2:Confirm Email
        /// 3:Confirm Telesafe
        /// 4: Confirm Email và Mobile
        /// 5: confirm Telesafe và Mobile
        /// 6: confirm Telesafe và Email
        /// 7: confirm Telesafe Email và Mobile
        ;

        _proto.updateVerifiedUI = function updateVerifiedUI() {
          var status = Configs.Login.SecurityStatus;
          var verifiedEmail = [2, 4, 6, 7].indexOf(status) !== -1;
          var verifiedMobile = [1, 4, 5, 7].indexOf(status) !== -1;
          var verifiedTelesafe = [3, 5, 6, 7].indexOf(status) !== -1;
          this.verifiedEmail.active = verifiedEmail;
          this.verifiedMobile.active = verifiedMobile;
          this.verifiedTelesafe.active = verifiedTelesafe;

          // in active button save and changed if verified
          this.buttonActiveEmail.active = !verifiedEmail;
          this.buttonActiveMobile.active = !verifiedMobile;
          this.buttonActiveTelesafe.active = !verifiedTelesafe;
          this.buttonChangeEmail.active = !verifiedEmail;
          this.buttonChangeMobile.active = !verifiedMobile;
          this.buttonChangeTelesafe.active = !verifiedTelesafe;
        };
        _proto.showOTPEmail = function showOTPEmail() {
          var _this3 = this;
          App.instance.showLoading(true);
          var url = Configs.App.DOMAIN_CONFIG["SendMailConfirm"];
          Http.post(url, {}, function (status, res) {
            App.instance.showLoading(false);
            if (status === 200) {
              _this3.node.active = false;
              _this3.getOtpSecureView.active = true;
              _this3.smsSecureForm.node.active = false;
              _this3.emailSecureForm.node.active = true;
              _this3.telesafeSecureForm.node.active = false;
            }
          });
        };
        _proto.showOTPSMS = function showOTPSMS() {
          this.node.active = false;
          this.getOtpSecureView.active = true;
          this.smsSecureForm.node.active = true;
          this.emailSecureForm.node.active = false;
          this.telesafeSecureForm.node.active = false;
        };
        _proto.showOTPTelesafe = function showOTPTelesafe() {
          this.node.active = false;
          this.getOtpSecureView.active = true;
          this.smsSecureForm.node.active = false;
          this.emailSecureForm.node.active = false;
          this.telesafeSecureForm.node.active = true;
        };
        _proto.saveEmailButton = function saveEmailButton() {
          var mobileEdb = this.editEmail.getComponent(EditBox).string;
          this.updateAccountInfo({
            Email: mobileEdb.trim()
          });
        };
        _proto.saveSmsButton = function saveSmsButton() {
          var newPhone = this.editMobile.getComponent(EditBox).string;
          if (newPhone.trim() === "") {
            this.showToast(App.instance.getTextLang("txt_phone_number_incorrect"));
            return;
          }
          if (newPhone === Configs.Login.MobilePhone) {
            this.showToast(App.instance.getTextLang("txt_phone_number_incorrect2"));
            return;
          }
          this.updateAccountInfo({
            Mobile: newPhone.trim()
          });
        };
        _proto.saveTelesafeButton = function saveTelesafeButton() {
          var teleSafeEdb = this.editTelesafe.getComponent(EditBox).string;
          if (teleSafeEdb.trim() === "") {
            this.showToast(App.instance.getTextLang("me-1004")); // Dữ liệu truyền vào không hợp lệ
            return;
          }
          if (teleSafeEdb === Configs.Login.TeleSafe) {
            this.showToast(App.instance.getTextLang("me-657")); // Dữ liệu bị trùng
            return;
          }
          this.updateAccountInfo({
            TeleSafe: teleSafeEdb.trim()
          });
        };
        _proto.backToSecureForm = function backToSecureForm() {
          this.node.active = true;
          this.getOtpSecureView.active = false;
        };
        _proto.updateAccountInfo = function updateAccountInfo(payload) {
          var _this4 = this;
          App.instance.showLoading(true);
          Http.post(Configs.App.DOMAIN_CONFIG['UpdateAccountUrl'], payload, function (status, res) {
            if (res.c < 0 && res.c !== -1023) {
              App.instance.showLoading(false);
              _this4.showToast(App.instance.getTextLang("me" + res.c));
              return;
            }
            App.instance.showLoading(false);
            App.instance.notificationDialog.showMsg(App.instance.getTextLang('me-1023'));
            _this4.scheduleOnce(function () {
              var _Global$PopupProfile;
              Global.PopupSecurity.dismiss();
              (_Global$PopupProfile = Global.PopupProfile) == null || _Global$PopupProfile.dismiss();
              BroadcastReceiver.send(BroadcastReceiver.USER_LOGOUT);
            }, 1);
          }, false);
        };
        _proto.updateSecurityInfo = function updateSecurityInfo() {
          var emailEdb = this.editEmail.getComponent(EditBox).string;
          var mobileEdb = this.editMobile.getComponent(EditBox).string;
          var teleSafeEdb = this.editTelesafe.getComponent(EditBox).string;
          this.updateAccountInfo({
            Email: emailEdb.trim(),
            Mobile: mobileEdb.trim(),
            TeleSafe: teleSafeEdb.trim()
          });
        };
        _proto.updateButtonUpdate = function updateButtonUpdate() {
          this.btnCapNhat.active = !(this._openChangeEmail || this._openChangeMobile || this._openChangeTelesafe);
          if (Configs.Login.SecurityStatus === 7) {
            this.btnCapNhat.active = false;
          }
        };
        _proto.updateUI = function updateUI() {
          var cancel = App.instance.getTextLang("txt_cancel");
          var change = App.instance.getTextLang("se17");
          if (!this.verifiedEmail.active) {
            this.buttonActiveEmail.active = !this._openChangeEmail;
            this.buttonSaveEmail.active = this._openChangeEmail;
            this.buttonChangeEmail.getComponentInChildren(Label).string = this._openChangeEmail ? cancel : change;
          }
          if (!this.verifiedMobile.active) {
            this.buttonActiveMobile.active = !this._openChangeMobile;
            this.buttonSaveMobile.active = this._openChangeMobile;
            this.buttonChangeMobile.getComponentInChildren(Label).string = this._openChangeMobile ? cancel : change;
          }
          if (!this.verifiedTelesafe.active) {
            this.buttonActiveTelesafe.active = !this._openChangeTelesafe;
            this.buttonSaveTelesafe.active = this._openChangeTelesafe;
            this.buttonChangeTelesafe.getComponentInChildren(Label).string = this._openChangeTelesafe ? cancel : change;
          }
          this.editEmail.getComponent(EditBox).string = "";
          this.editMobile.getComponent(EditBox).string = "";
          this.editTelesafe.getComponent(EditBox).string = "";
          this.updateButtonUpdate();
        };
        _proto.showToast = function showToast(message) {
          var _this5 = this;
          this.toastNode.getComponent(Label).string = message;
          this.toastNode.active = true;
          this.scheduleOnce(function () {
            _this5.toastNode.active = false;
          }, 3);
        };
        return TabSecurityInfoSecureForm;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "getOtpSecureView", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "lblAccount", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "lblEmail", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "lblMobile", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "lblTelesafe", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "lblNickname", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "changeEmailToggle", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "changeSmsToggle", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "editEmail", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "buttonEmail", [_dec10], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "buttonActiveEmail", [_dec11], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "buttonSaveEmail", [_dec12], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "buttonChangeEmail", [_dec13], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "verifiedEmail", [_dec14], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor15 = _applyDecoratedDescriptor(_class2.prototype, "editMobile", [_dec15], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor16 = _applyDecoratedDescriptor(_class2.prototype, "buttonMobile", [_dec16], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor17 = _applyDecoratedDescriptor(_class2.prototype, "buttonActiveMobile", [_dec17], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor18 = _applyDecoratedDescriptor(_class2.prototype, "buttonSaveMobile", [_dec18], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor19 = _applyDecoratedDescriptor(_class2.prototype, "buttonChangeMobile", [_dec19], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor20 = _applyDecoratedDescriptor(_class2.prototype, "verifiedMobile", [_dec20], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor21 = _applyDecoratedDescriptor(_class2.prototype, "editTelesafe", [_dec21], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor22 = _applyDecoratedDescriptor(_class2.prototype, "buttonTelesafe", [_dec22], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor23 = _applyDecoratedDescriptor(_class2.prototype, "buttonActiveTelesafe", [_dec23], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor24 = _applyDecoratedDescriptor(_class2.prototype, "buttonSaveTelesafe", [_dec24], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor25 = _applyDecoratedDescriptor(_class2.prototype, "buttonChangeTelesafe", [_dec25], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor26 = _applyDecoratedDescriptor(_class2.prototype, "verifiedTelesafe", [_dec26], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor27 = _applyDecoratedDescriptor(_class2.prototype, "emailSecureForm", [_dec27], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor28 = _applyDecoratedDescriptor(_class2.prototype, "smsSecureForm", [_dec28], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor29 = _applyDecoratedDescriptor(_class2.prototype, "telesafeSecureForm", [_dec29], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor30 = _applyDecoratedDescriptor(_class2.prototype, "btnCapNhat", [_dec30], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor31 = _applyDecoratedDescriptor(_class2.prototype, "toastNode", [_dec31], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Lobby.PopupSecurity.TabSecurityInfo.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './App.ts', './Config.ts', './Http.ts', './Lobby.PopupSecurity.TabSecurityInfo.SecureForm.ts', './Global.ts', './BroadcastListener.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, EditBox, Node, RichText, Component, App, Configs, Http, TabSecurityInfoSecureForm, Global, BroadcastReceiver;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
      EditBox = module.EditBox;
      Node = module.Node;
      RichText = module.RichText;
      Component = module.Component;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      TabSecurityInfoSecureForm = module.TabSecurityInfoSecureForm;
    }, function (module) {
      Global = module.Global;
    }, function (module) {
      BroadcastReceiver = module.BroadcastReceiver;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9;
      cclegacy._RF.push({}, "315ca143P5GKITq+vssDoxu", "Lobby.PopupSecurity.TabSecurityInfo", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var TabSecurityInfo = exports('TabSecurityInfo', (_dec = property(Label), _dec2 = property(EditBox), _dec3 = property(EditBox), _dec4 = property(EditBox), _dec5 = property(Node), _dec6 = property(TabSecurityInfoSecureForm), _dec7 = property(Node), _dec8 = property(RichText), _dec9 = property(Node), ccclass(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(TabSecurityInfo, _Component);
        function TabSecurityInfo() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "infoLblUsername", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "updateEdbEmail", _descriptor2, _assertThisInitialized(_this));
          // @property(Node)
          // warnEdbEmail: Node = null;
          _initializerDefineProperty(_this, "updateEdbPhoneNumber", _descriptor3, _assertThisInitialized(_this));
          // @property(Node)
          // warnEdbPhoneNumber: Node = null;
          _initializerDefineProperty(_this, "updateEdbTeleSafe", _descriptor4, _assertThisInitialized(_this));
          // @property(Node)
          // warnEdbTeleSafe: Node = null;
          _initializerDefineProperty(_this, "updateButton", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "secureForm", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "editForm", _descriptor7, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "secureNote", _descriptor8, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "toastNode", _descriptor9, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = TabSecurityInfo.prototype;
        _proto.onLoad = function onLoad() {
          this.toastNode.active = false;
        };
        _proto.onEnable = function onEnable() {
          this.infoLblUsername.string = Configs.Login.Username;
          this.node.children.forEach(function (child) {
            return child.active = false;
          });
          var isSecure = Configs.Login.SecurityStatus !== 0;
          this.editForm.active = !isSecure;
          this.secureForm.node.active = isSecure;
          if (isSecure) {
            this.secureForm.backToSecureForm();
          }
          if (Configs.Login.Mail == "" && Configs.Login.MobilePhone == "" && Configs.Login.TeleSafe == "") {
            this.editForm.active = true;
            this.secureForm.node.active = false;
          } else {
            this.editForm.active = false;
            this.secureForm.node.active = true;
          }
        };
        _proto.start = function start() {
          var mobilePhone = Configs.Login.MobilePhone || "99999999";
          this.secureNote.string = App.instance.getTextLang("txt_describe_secure").replace('{0}', mobilePhone);
          if (Configs.Login.Mail == "" && Configs.Login.MobilePhone == "" && Configs.Login.TeleSafe == "") {
            this.editForm.active = true;
            this.secureForm.node.active = false;
          } else {
            this.editForm.active = false;
            this.secureForm.node.active = true;
          }
        };
        _proto.onUpdatePressed = function onUpdatePressed() {
          var _this2 = this;
          var email = this.updateEdbEmail.string.trim();
          var mobile = this.updateEdbPhoneNumber.string.trim();
          var teleSafe = this.updateEdbTeleSafe.string.trim();
          var params = {};
          if (email.length == 0 && mobile.length == 0 && teleSafe.length == 0) {
            this.showToast(App.instance.getTextLang('me-999009'));
            return;
          }
          App.instance.showLoading(true);
          if (email.toString() !== "") {
            params.Email = email;
          }
          if (mobile.toString() !== "") {
            params.Mobile = mobile;
          }
          if (teleSafe.toString() !== "") {
            params.TeleSafe = teleSafe;
          }
          var url = Configs.App.DOMAIN_CONFIG["UpdateAccountUrl"];
          Http.post(url, params, function (_status, res) {
            if (res.c < 0 && res.c !== -1023) {
              App.instance.showLoading(false);
              _this2.showToast(App.instance.getTextLang("me" + res.c));
              return;
            }
            App.instance.showLoading(false);
            App.instance.notificationDialog.showMsg(App.instance.getTextLang('me-1023'));
            _this2.scheduleOnce(function () {
              var _Global$PopupProfile;
              Global.PopupSecurity.dismiss();
              (_Global$PopupProfile = Global.PopupProfile) == null || _Global$PopupProfile.dismiss();
              BroadcastReceiver.send(BroadcastReceiver.USER_LOGOUT);
            }, 1);
          }, false);
        };
        _proto.showToast = function showToast(message) {
          var _this3 = this;
          this.toastNode.getComponent(Label).string = message;
          this.toastNode.active = true;
          this.scheduleOnce(function () {
            _this3.toastNode.active = false;
          }, 3);
        };
        return TabSecurityInfo;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "infoLblUsername", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "updateEdbEmail", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "updateEdbPhoneNumber", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "updateEdbTeleSafe", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "updateButton", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "secureForm", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "editForm", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "secureNote", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "toastNode", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Lobby.PopupSecurity.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Config.ts', './Global.ts', './Dialog.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, ToggleContainer, Node, Label, Configs, Global, Dialog;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      ToggleContainer = module.ToggleContainer;
      Node = module.Node;
      Label = module.Label;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      Global = module.Global;
    }, function (module) {
      Dialog = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor, _descriptor2;
      cclegacy._RF.push({}, "0e75cAsFntKPqi/S/aghnaV", "Lobby.PopupSecurity", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PopupSecurity = exports('default', (_dec = property(ToggleContainer), _dec2 = property(Node), ccclass(_class = (_class2 = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(PopupSecurity, _Dialog);
        function PopupSecurity() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Dialog.call.apply(_Dialog, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "tabs", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabContents", _descriptor2, _assertThisInitialized(_this));
          _this.tabSelectedIdx = 0;
          return _this;
        }
        var _proto = PopupSecurity.prototype;
        _proto.onLoad = function onLoad() {
          var _this2 = this;
          Global.PopupSecurity = this;
          this.tabs.toggleItems.forEach(function (tab, index) {
            tab.node.on("toggle", function () {
              _this2.tabSelectedIdx = index;
              _this2.onTabChanged();
            });
          });
          this.onTabChanged();
        };
        _proto.onTabChanged = function onTabChanged() {
          this.tabContents.children.forEach(function (tab) {
            return tab.active = false;
          });
          switch (this.tabSelectedIdx) {
            case 0:
              this.tabContents.children[0].active = true;
              break;
            case 1:
              var verifiedMobileOrTelesafe = [1, 3, 4, 5, 6, 7].indexOf(Configs.Login.SecurityStatus) !== -1;
              var safePlus = this.tabContents.children[1];
              safePlus.active = true;
              safePlus.getChildByName('inactive').active = !verifiedMobileOrTelesafe;
              safePlus.getChildByName('inactive').children[0].getComponentInChildren(Label).string = Configs.Login.Username;
              safePlus.getChildByName('active').active = verifiedMobileOrTelesafe;
              break;
            case 2:
              this.tabContents.children[2].active = true;
              break;
            case 3:
              this.tabContents.children[3].active = true;
              break;
            case 4:
              this.tabContents.children[4].active = true;
              break;
          }
        };
        _proto.dismiss = function dismiss() {
          var _Global$PopupProfile;
          _Dialog.prototype.dismiss.call(this);
          (_Global$PopupProfile = Global.PopupProfile) == null || _Global$PopupProfile.dismiss();
        };
        _proto.back = function back() {
          this.node.active = false;
        };
        return PopupSecurity;
      }(Dialog), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "tabs", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "tabContents", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/LobbyController.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './SuperConfig.ts', './BundleControl.ts', './App.ts', './Http.ts', './Utils.ts', './SPUtils.ts', './Config.ts', './BroadcastListener.ts', './EventBus.ts', './Global.ts', './PopupProfile.ts', './PopupRegister.ts', './PopupUpdateNickname.ts', './Lobby.LoginByOTP.ts', './PopupDownload.ts', './PopupSupport.ts', './PopupEvent.ts', './PopupGiftCode.ts', './Lobby.PopupForgetPassword.ts', './Lobby.PopupSecurity.ts', './PopupTournament.ts', './PopupEventX2.ts', './BannerView.ts', './Network.SignalRClient.ts', './PopupCashout.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Label, Sprite, EditBox, SpriteFrame, director, instantiate, view, ResolutionPolicy, log, tween, Vec3, sys, Component, SuperConfig, BundleControl, App, Http, Utils, SPUtils, Configs, BroadcastReceiver, eventBus, Global, PopupProfile, PopupRegister, PopupUpdateNickname, LobbyLoginByOTP, PopupDownload, PopupSupport, PopupEvent, PopupGiftCode, PopupForgetPassword, PopupSecurity, PopupTournament, PopupEventX2, BannerView, SignalRClient, PopupCashout;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Label = module.Label;
      Sprite = module.Sprite;
      EditBox = module.EditBox;
      SpriteFrame = module.SpriteFrame;
      director = module.director;
      instantiate = module.instantiate;
      view = module.view;
      ResolutionPolicy = module.ResolutionPolicy;
      log = module.log;
      tween = module.tween;
      Vec3 = module.Vec3;
      sys = module.sys;
      Component = module.Component;
    }, function (module) {
      SuperConfig = module.default;
    }, function (module) {
      BundleControl = module.default;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      Utils = module.Utils;
    }, function (module) {
      SPUtils = module.SPUtils;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      BroadcastReceiver = module.BroadcastReceiver;
    }, function (module) {
      eventBus = module.default;
    }, function (module) {
      Global = module.Global;
    }, function (module) {
      PopupProfile = module.PopupProfile;
    }, function (module) {
      PopupRegister = module.PopupRegister;
    }, function (module) {
      PopupUpdateNickname = module.PopupUpdateNickname;
    }, function (module) {
      LobbyLoginByOTP = module.default;
    }, function (module) {
      PopupDownload = module.default;
    }, function (module) {
      PopupSupport = module.PopupSupport;
    }, function (module) {
      PopupEvent = module.default;
    }, function (module) {
      PopupGiftCode = module.default;
    }, function (module) {
      PopupForgetPassword = module.default;
    }, function (module) {
      PopupSecurity = module.default;
    }, function (module) {
      PopupTournament = module.PopupTournament;
    }, function (module) {
      PopupEventX2 = module.default;
    }, function (module) {
      BannerView = module.default;
    }, function (module) {
      SignalRClient = module.default;
    }, function (module) {
      PopupCashout = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _dec25, _dec26, _dec27, _dec28, _dec29, _dec30, _dec31, _dec32, _dec33, _dec34, _dec35, _dec36, _dec37, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _descriptor25, _descriptor26, _descriptor27, _descriptor28, _descriptor29, _descriptor30, _descriptor31, _descriptor32, _descriptor33, _descriptor34, _descriptor35, _descriptor36;
      cclegacy._RF.push({}, "538e5E0o7VEXYQb58os9Byl", "LobbyController", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var LobbyController = exports('LobbyController', (_dec = ccclass("LobbyController"), _dec2 = property(Node), _dec3 = property(Node), _dec4 = property(Label), _dec5 = property(Sprite), _dec6 = property(Label), _dec7 = property(Label), _dec8 = property({
        type: [Node]
      }), _dec9 = property(EditBox), _dec10 = property(EditBox), _dec11 = property(Node), _dec12 = property(Node), _dec13 = property(Node), _dec14 = property(Node), _dec15 = property(Node), _dec16 = property(Node), _dec17 = property(SpriteFrame), _dec18 = property(SpriteFrame), _dec19 = property(SpriteFrame), _dec20 = property(SpriteFrame), _dec21 = property(SpriteFrame), _dec22 = property(SpriteFrame), _dec23 = property(SpriteFrame), _dec24 = property(SpriteFrame), _dec25 = property(SpriteFrame), _dec26 = property(SpriteFrame), _dec27 = property(SpriteFrame), _dec28 = property(SpriteFrame), _dec29 = property(Node), _dec30 = property(Node), _dec31 = property(Label), _dec32 = property(Node), _dec33 = property(Node), _dec34 = property(Node), _dec35 = property(Node), _dec36 = property(Node), _dec37 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(LobbyController, _Component);
        function LobbyController() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "nodeWheel", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "nodeRoom", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblNickname", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "sprAvatar", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblGoldBalance", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblCoinBalance", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "hoverCategory", _descriptor7, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "userName", _descriptor8, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "password", _descriptor9, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "panelLoggedOut", _descriptor10, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "panelLoggedIn", _descriptor11, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "panelMenu", _descriptor12, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "jackpotx6", _descriptor13, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "jackpotX6List", _descriptor14, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "jackpotX6Content", _descriptor15, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "logo_fortune", _descriptor16, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "logo_kingdom", _descriptor17, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "logo_ocean", _descriptor18, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "logo_oracle", _descriptor19, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "logo_dancingNight", _descriptor20, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "logo_dancing", _descriptor21, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "logo_forest", _descriptor22, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "icon_x2", _descriptor23, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "icon_x3", _descriptor24, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "icon_x4", _descriptor25, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "icon_x5", _descriptor26, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "icon_x6", _descriptor27, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "nodeIconFloatButton", _descriptor28, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "nodeIconFloatButtonMiniGame", _descriptor29, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblVersion", _descriptor30, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "notifyBarNode", _descriptor31, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "listGameCenterNode", _descriptor32, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "prefabContainer", _descriptor33, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "inboxMessage", _descriptor34, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "turnVQMM", _descriptor35, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "turnVQMMPanelMiniGame", _descriptor36, _assertThisInitialized(_this));
          _this.pingpongID = null;
          _this.isVisibleJackPotX6 = false;
          _this.isOpenJackPotX6 = false;
          _this.popupEventX2 = null;
          _this.currentPopupCashOutCashIn = null;
          _this._wasActive = false;
          return _this;
        }
        var _proto = LobbyController.prototype;
        _proto.onLoad = function onLoad() {
          var _this2 = this;
          this.scheduleOnce(function () {
            console.log(Configs.App.DOMAIN_CONFIG);
          }, 10);
          Global.LobbyController = this;
          this.fixMultiScreen();
          this.lblVersion.string = "Version: " + Configs.App.G88_VERSION;
          this.hoverCategory.forEach(function (node) {
            node.on(Node.EventType.MOUSE_ENTER, function () {
              return _this2.onHoverEnter(node);
            }, _this2);
            node.on(Node.EventType.MOUSE_LEAVE, function () {
              return _this2.onHoverLeave(node);
            }, _this2);
          });
        };
        _proto.update = function update(_dt) {
          var hasRoomChildActive = App.instance.nodeRoom.children.some(function (child) {
            return child.active;
          });
          var hasBigGameChild = App.instance.bigGameNode.children.some(function (child) {
            return child.active;
          });
          var shouldHide = hasRoomChildActive || hasBigGameChild;
          if (shouldHide !== this._wasActive) {
            this.notifyBarNode.active = !shouldHide;
            this.listGameCenterNode.active = !shouldHide;
            this._wasActive = shouldHide;
          }
        };
        _proto.start = function start() {
          var _this3 = this;
          BroadcastReceiver.register(BroadcastReceiver.USER_UPDATE_COIN, function () {
            if (Configs.Login.IsLogin == false) return;
            Http.get(Configs.App.DOMAIN_CONFIG['GetAllBalance'], {}, function (status, json) {
              if (status === 200) {
                Configs.Login.GoldBalance = json['d'][0]['goldBalance'];
                Configs.Login.CoinBalance = json['d'][0]['coinBalance'];
                _this3.lblCoinBalance.string = Utils.formatNumber(Configs.Login.CoinBalance);
                _this3.lblGoldBalance.string = Utils.formatNumber(Configs.Login.GoldBalance);
              }
            });
          }, this);
          BroadcastReceiver.register(BroadcastReceiver.USER_LOGGED_IN, function () {
            BroadcastReceiver.send(BroadcastReceiver.UPDATE_MANAGE_GAME_CONFIG);
            _this3.lblNickname.string = Configs.Login.Nickname;
            _this3.sprAvatar.spriteFrame = App.instance.getAvatarSpriteFrame(Configs.Login.Avatar);
            _this3.panelLoggedOut.active = false;
            _this3.panelLoggedIn.active = true;
            _this3.lblCoinBalance.string = Utils.formatNumber(Configs.Login.CoinBalance);
            _this3.lblGoldBalance.string = Utils.formatNumber(Configs.Login.GoldBalance);
            Configs.Login.IsLogin = true;
            eventBus.emit('LOGIN_SUCCESS');
            _this3.nodeIconFloatButton.active = true;
            _this3.nodeIconFloatButtonMiniGame.active = true;
            if (_this3.pingpongID) {
              clearInterval(_this3.pingpongID);
            }
            _this3.pingpongID = setInterval(function () {
              _this3.pingpong();
            }, 60000);
            App.instance.actVQMM();
            App.instance.openGame(Configs.InGameIds.TaiXiuMini);
            Http.get(Configs.App.DOMAIN_CONFIG["VQMM_GetTurnUrl"], {
              type: 1
            }, function (status, res) {
              if (status === 200 && res.c == 0 && res.d > 0) {
                _this3.showVipWheel();
              }
            }, false);
            Http.get(Configs.App.DOMAIN_CONFIG["GetBannerEvent"], {}, function (status, res) {
              if (status === 200 && res.c == 0 && res.d.length > 0) {
                _this3.showSlide(res.d);
              }
            }, false);
            if (Utils.getStorageKey("get_popup_content") != 'ok') {
              Http.get(Configs.App.DOMAIN_CONFIG["GetPopupContentUrl"], {}, function (status, res) {
                Utils.setStorageValue("get_popup_content", "ok");
                if (status === 200 && res.c == 0 && res.d.length > 0) {
                  _this3.showAnnouncement(res.d);
                }
              }, false);
            }
            if (Utils.getStorageKey("last_open_game_id") !== null) {
              var gameId = parseInt(Utils.getStorageKey("last_open_game_id"));
              if (gameId > 0) {
                App.instance.openGame(gameId);
              }
            }
            _this3.checkAndShowJackpotX6();
            _this3.getInboxes();
          }, this);
          BroadcastReceiver.register(BroadcastReceiver.USER_INFO_REFRESH, function (data) {
            if (data) {
              Configs.Login.set(data);
            } else {
              Http.get(Configs.App.DOMAIN_CONFIG['GetAccountInfoUrl'], {}, function (status, res) {
                if (status === 200) {
                  Configs.Login.set(res.d);
                  _this3.sprAvatar.spriteFrame = App.instance.getAvatarSpriteFrame(Configs.Login.Avatar);
                  _this3.lblCoinBalance.string = Utils.formatNumber(Configs.Login.CoinBalance);
                  _this3.lblGoldBalance.string = Utils.formatNumber(Configs.Login.GoldBalance);
                }
              });
            }
          }, this);
          BroadcastReceiver.register(BroadcastReceiver.USER_LOGOUT, function (_data) {
            var _App$instance$bigGame, _App$instance$slotGam, _App$instance$miniGam, _App$instance$popupNo, _App$instance$nodeRoo, _App$instance$tipzoJa, _this3$prefabContaine, _this3$nodeWheel;
            if (_this3.pingpongID) {
              clearInterval(_this3.pingpongID);
            }
            SignalRClient.closeAll();
            if (director.getScene().name !== "Lobby") ;else {
              _this3.panelLoggedOut.active = true;
              _this3.panelLoggedIn.active = false;
              _this3.userName.string = "";
              _this3.password.string = "";
            }
            SPUtils.setUserName("");
            SPUtils.setUserPass("");
            eventBus.emit('LOGOUT');
            Configs.Login.clear();
            _this3.nodeIconFloatButton.active = false;
            _this3.nodeIconFloatButtonMiniGame.active = false;
            (_App$instance$bigGame = App.instance.bigGameNode) == null || _App$instance$bigGame.removeAllChildren();
            (_App$instance$slotGam = App.instance.slotGameNode) == null || _App$instance$slotGam.removeAllChildren();
            (_App$instance$miniGam = App.instance.miniGameNode) == null || _App$instance$miniGam.removeAllChildren();
            (_App$instance$popupNo = App.instance.popupNode) == null || _App$instance$popupNo.removeAllChildren();
            (_App$instance$nodeRoo = App.instance.nodeRoom) == null || _App$instance$nodeRoo.removeAllChildren();
            (_App$instance$tipzoJa = App.instance.tipzoJackpotEventX2X6Node) == null || _App$instance$tipzoJa.removeAllChildren();
            (_this3$prefabContaine = _this3.prefabContainer) == null || _this3$prefabContaine.removeAllChildren();
            (_this3$nodeWheel = _this3.nodeWheel) == null || _this3$nodeWheel.removeAllChildren();
            App.instance.taiXiuJackpotMiniGame = null;
            App.instance.taiXiuMD5MiniGame = null;
            App.instance.hiLoMiniGame = null;
            App.instance.miniPoker = null;
            Utils.setStorageValue("get_popup_content", "ko");
            Utils.setStorageValue("last_open_game_id", "");
            _this3.nodeIconFloatButton.active = false;
            _this3.nodeIconFloatButtonMiniGame.active = false;
          }, this);
          BroadcastReceiver.register(BroadcastReceiver.UPDATE_MANAGE_GAME_CONFIG, function () {
            Http.get(Configs.App.DOMAIN_CONFIG["GetListGame"], {}, function (status, res) {
              if (status === 200) {
                Configs.App.GAME_BLOCKED_IDS = res.d.filter(function (game) {
                  return game.enable == false;
                }).map(function (game) {
                  return game.gameID;
                });
              }
            });
          }, this);
          this.fetchAndDecryptMessage();
        };
        _proto.showVipWheel = function showVipWheel() {
          var _this4 = this;
          BundleControl.loadPrefabPopup("prefabs/PopupVipWheel", function (prefab) {
            var popup = instantiate(prefab).getComponent("PopupVipWheel");
            _this4.nodeWheel.addChild(popup.node);
          });
        };
        _proto.fixMultiScreen = function fixMultiScreen() {
          if (view.getViewportRect().width / view.getViewportRect().height > 1920 / 1080) {
            view.setDesignResolutionSize(1920, 1080, ResolutionPolicy.FIXED_HEIGHT);
          } else {
            view.setDesignResolutionSize(1920, 1080, ResolutionPolicy.FIXED_WIDTH);
          }
        };
        _proto.fetchAndDecryptMessage = function fetchAndDecryptMessage() {
          var _this5 = this;
          try {
            Utils.Log(Configs.App.DOMAIN_CONFIG);
            var data = SuperConfig.SuperData;
            if (Object.keys(SuperConfig.SuperData).length === 0) {
              var key = SuperConfig.G88_KEY_DECRYPT_CONFIG;
              var nonSecretPayloadLength = 0;
              Http.get(SuperConfig.G88_DOMAIN_GET_CONFIG, {}, function (status, res) {
                if (status != 200) {
                  _this5.fetchAndDecryptMessage();
                  return;
                }
                var encryptedMessage = res.replace(/[^A-Za-z0-9+/=]/g, '');
                var decodedKey = forge.util.decode64(key);
                var cipherText = forge.util.decode64(encryptedMessage);
                var offset = 0;
                offset += nonSecretPayloadLength;
                var nonce = cipherText.slice(offset, offset + 16);
                offset += 16;
                var authTag = cipherText.slice(cipherText.length - 16);
                var encryptedMessagePart = cipherText.slice(offset, cipherText.length - 16);
                var decipher = forge.cipher.createDecipher('AES-GCM', decodedKey);
                decipher.start({
                  iv: nonce,
                  tagLength: 128,
                  tag: forge.util.createBuffer(authTag)
                });
                decipher.update(forge.util.createBuffer(encryptedMessagePart));
                var success = decipher.finish();
                if (!success) {
                  throw new Error('Decryption failed');
                }
                data = JSON.parse(decipher.output.toString());
                log(data);
              }, false);
            }
            Configs.App.DOMAIN_CONFIG = data["DomainConfig"];
            Configs.App.G88_CONFIG = data;
            Configs.App.GAME_AVAILABLE_IDS = data["GamesAvaiable"];
            BannerView.instance.showDetail(data["Banners"]);
            SPUtils.setRSAPublicKey(data["RsaPublicKey"]);
            Utils.setStorageValue('client-token', data["Token"]);
            if (SPUtils.getUserName() != "" && SPUtils.getUserPass() != "") {
              this.actLogin(SPUtils.getUserName(), SPUtils.getUserPass());
            }
          } catch (error) {
            if (error instanceof Error) {
              log("Error: " + error);
            } else {
              log('An unknown error occurred');
            }
          }
        };
        _proto.actLogin = function actLogin(username, password) {
          var _this6 = this;
          if (username === void 0) {
            username = null;
          }
          if (password === void 0) {
            password = null;
          }
          if (Configs.App.DOMAIN_CONFIG.length === 0) return;
          if (username == null || password == null) {
            username = this.userName.string.trim();
            password = this.password.string.trim();
          }
          if (username.length == 0) {
            this.actShowLoginForm(App.instance.getTextLang("txt_login_username_not_blank"));
            return;
          }
          if (password.length == 0) {
            this.actShowLoginForm(App.instance.getTextLang("txt_login_password_not_blank"));
            return;
          }
          var data = {
            Username: username,
            Password: password,
            Timestamp: Utils.getTicks(),
            Md5Password: window.md5(password)
          };
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          App.instance.showLoading(true);
          Http.post(Configs.App.DOMAIN_CONFIG['LoginUrl'], payload, function (_status, res) {
            App.instance.showLoading(false);
            if (res['c'] < 0) {
              _this6.actShowLoginForm(res['r']);
              return;
            }
            switch (parseInt(res["c"])) {
              case 0:
                Configs.Login.IsLogin = true;
                SPUtils.setUserName(username);
                SPUtils.setUserPass(password);
                Configs.Login.AccessToken = res["m"];
                Configs.Login.SessionKey = res["d"]["sessionToken"];
                BroadcastReceiver.send(BroadcastReceiver.USER_INFO_REFRESH, res['d']);
                BroadcastReceiver.send(BroadcastReceiver.USER_LOGGED_IN);
                break;
              case 2:
                Configs.Login.Username = res.p[0];
                BundleControl.loadPrefabPopup("prefabs/PopupLoginByOTP", function (prefab) {
                  var popup = instantiate(prefab).getComponent(LobbyLoginByOTP);
                  App.instance.popupNode.addChild(popup.node);
                  popup.show();
                });
                break;
              case 3:
                Configs.Login.Username = res.p[0];
                BundleControl.loadPrefabPopup("prefabs/PopupUpdateNickName", function (prefab) {
                  var popup = instantiate(prefab).getComponent(PopupUpdateNickname);
                  App.instance.popupNode.addChild(popup.node);
                  popup.show();
                });
                break;
            }
          }, false);
        };
        _proto.actRegister = function actRegister() {
          if (Configs.App.DOMAIN_CONFIG.length === 0) return;
          BundleControl.loadPrefabPopup("prefabs/PopupRegister", function (prefab) {
            var popup = instantiate(prefab).getComponent(PopupRegister);
            App.instance.popupNode.addChild(popup.node);
            popup.show();
          });
        };
        _proto.actLostPassword = function actLostPassword() {
          if (Configs.App.DOMAIN_CONFIG.length === 0) return;
          BundleControl.loadPrefabPopup("prefabs/PopupForgetPassword", function (prefab) {
            var popup = instantiate(prefab).getComponent(PopupForgetPassword);
            App.instance.popupNode.addChild(popup.node);
            popup.show();
          });
        };
        _proto.actLogout = function actLogout() {
          App.instance.confirmDialog.showMsg(App.instance.getTextLang("txt_ask_logout"), function (isConfirm) {
            if (isConfirm) {
              BroadcastReceiver.send(BroadcastReceiver.USER_LOGOUT);
            }
          });
        };
        _proto.pingpong = function pingpong() {
          var accessToken = Configs.Login.AccessToken;
          if (accessToken == "") {
            return;
          }
          Http.post(Configs.App.DOMAIN_CONFIG['CheckAuthenUrl'], {}, function (_status, res) {
            switch (res['c']) {
              case 0:
                if (res['m'] != null) {
                  Configs.Login.AccessToken = res['m'];
                }
                break;
              case 2:
                Configs.Login.Username = res.p[0];
                BundleControl.loadPrefabPopup("prefabs/PopupLoginByOTP", function (prefab) {
                  var popup = instantiate(prefab).getComponent(LobbyLoginByOTP);
                  App.instance.popupNode.addChild(popup.node);
                  popup.show();
                });
                break;
              case 3:
                Configs.Login.Username = res.p[0];
                BundleControl.loadPrefabPopup("prefabs/PopupUpdateNickName", function (prefab) {
                  var popup = instantiate(prefab).getComponent(PopupUpdateNickname);
                  App.instance.popupNode.addChild(popup.node);
                  popup.show();
                });
                break;
              default:
                BroadcastReceiver.send(BroadcastReceiver.USER_LOGOUT);
            }
          });

          // this.checkAndShowJackpotX6();
        };

        _proto.onHoverEnter = function onHoverEnter(node) {
          tween(node).to(0.1, {
            scale: new Vec3(1.1, 1.1, 1.1)
          }).start();
        };
        _proto.onHoverLeave = function onHoverLeave(node) {
          tween(node).to(0.1, {
            scale: new Vec3(1, 1, 1)
          }).start();
        };
        _proto.toggleMenu = function toggleMenu() {
          this.panelMenu.active = !this.panelMenu.active;
        };
        _proto.openPopupProfile = function openPopupProfile(even, customEventData) {
          if (!Configs.Login.IsLogin) {
            this.actShowLoginForm();
            return;
          }
          var index = parseInt(customEventData);
          BundleControl.loadPrefabPopup("prefabs/PopupProfile", function (prefab) {
            var popup = instantiate(prefab).getComponent(PopupProfile);
            App.instance.popupNode.addChild(popup.node);
            popup.show();
            popup.setTabDefault(index);
          });
        };
        _proto.actDownloadGameTipZo = function actDownloadGameTipZo() {
          BundleControl.loadPrefabPopup("prefabs/PopupDownload", function (prefab) {
            var popup = instantiate(prefab).getComponent(PopupDownload);
            if (!popup) {
              log("PopupDownload component not found on prefab.");
              return;
            }
            App.instance.popupNode.addChild(popup.node);
            popup.show();
          });
        };
        _proto.actSPGameTipZo = function actSPGameTipZo() {
          if (!Configs.Login.IsLogin) {
            this.actShowLoginForm();
            return;
          }
          BundleControl.loadPrefabPopup("prefabs/PopupSupport", function (prefab) {
            var popup = instantiate(prefab).getComponent(PopupSupport);
            if (!popup) {
              log("PopupSupport component not found on prefab.");
              return;
            }
            App.instance.popupNode.addChild(popup.node);
            popup.show();
          });
        };
        _proto.actMissonGameTipZo = function actMissonGameTipZo(even, data) {
          if (!Configs.Login.IsLogin) {
            this.actShowLoginForm();
            return;
          }
          BundleControl.loadPrefabPopup("prefabs/PopupEvent", function (prefab) {
            var popup = instantiate(prefab).getComponent(PopupEvent);
            if (!popup) {
              log("PopupSupport component not found on prefab.");
              return;
            }
            App.instance.popupNode.addChild(popup.node);
            popup.show();
          });
        };
        _proto.actOpenGifCode = function actOpenGifCode(even, data) {
          if (!Configs.Login.IsLogin) {
            this.actShowLoginForm();
            return;
          }
          BundleControl.loadPrefabPopup("prefabs/PopupGiftCode", function (prefab) {
            var popup = instantiate(prefab).getComponent(PopupGiftCode);
            if (!popup) {
              log("PopupSupport component not found on prefab.");
              return;
            }
            App.instance.popupNode.addChild(popup.node);
            popup.show();
          });
        };
        _proto.actTournament = function actTournament(even, data) {
          if (!Configs.Login.IsLogin) {
            this.actShowLoginForm();
            return;
          }
          BundleControl.loadPrefabPopup("prefabs/PopupTournament", function (prefab) {
            var popup = instantiate(prefab).getComponent(PopupTournament);
            if (!popup) {
              log("PopupSupport component not found on prefab.");
              return;
            }
            App.instance.popupNode.addChild(popup.node);
            popup.show();
          });
        };
        _proto.actEventX2 = function actEventX2(event, customEventData) {
          var _this7 = this;
          if (!Configs.Login.IsLogin) {
            this.actShowLoginForm();
            return;
          }
          if (this.popupEventX2 && this.popupEventX2.node && this.popupEventX2.node.activeInHierarchy) {
            return;
          }
          App.instance.showLoading(true);
          var index = parseInt(customEventData);
          BundleControl.loadPrefabPopup("prefabs/PopupX2", function (prefab) {
            App.instance.showLoading(false);
            var popup = instantiate(prefab).getComponent(PopupEventX2);
            if (!popup) {
              console.warn("PopupEventX2 component not found on prefab.");
              return;
            }
            App.instance.tipzoJackpotEventX2X6Node.addChild(popup.node);
            _this7.popupEventX2 = popup;
            popup.show();
            popup.showTab(index);
          });
        };
        _proto.actPopupCashInCashOut = function actPopupCashInCashOut(even, customEventData) {
          var _this8 = this;
          if (!Configs.Login.IsLogin) {
            this.actShowLoginForm();
            return;
          }
          App.instance.showLoading(true);
          var cb = function cb(prefab) {
            App.instance.showLoading(false);
            if (_this8.currentPopupCashOutCashIn && _this8.currentPopupCashOutCashIn.node && _this8.currentPopupCashOutCashIn.node.isValid) {
              _this8.currentPopupCashOutCashIn.node.destroy();
              _this8.currentPopupCashOutCashIn = null;
            }
            var actCashGameTipZo = instantiate(prefab).getComponent(PopupCashout);
            _this8.prefabContainer.addChild(actCashGameTipZo.node);
            _this8.currentPopupCashOutCashIn = actCashGameTipZo;
            if (customEventData === 'withdraw_card') {
              actCashGameTipZo.showWithdrawCard();
            } else {
              actCashGameTipZo.showTab(parseInt(customEventData));
            }
          };
          BundleControl.loadPrefabPopup("prefabs/PopupCashinCashout", cb);
        };
        _proto.checkAndShowJackpotX6 = function checkAndShowJackpotX6() {
          var _this9 = this;
          Http.get(Configs.App.DOMAIN_CONFIG['GetListJackpot'], {
            CurrencyID: Configs.Login.CurrencyID
          }, function (status, res) {
            if (status == 200) {
              _this9.actToggleTargetX6();
            } else {
              _this9.jackpotx6.active = false;
            }
          });
        };
        _proto.actToggleTargetX6 = function actToggleTargetX6() {
          var _this10 = this;
          this.isVisibleJackPotX6 = !this.isVisibleJackPotX6;
          this.jackpotx6.active = this.isVisibleJackPotX6;
          var logoMap = {
            213: this.logo_fortune,
            201: this.logo_kingdom,
            207: this.logo_ocean,
            203: this.logo_oracle,
            215: this.logo_dancingNight,
            205: this.logo_dancing,
            211: this.logo_forest
          };
          if (this.isVisibleJackPotX6) {
            this.jackpotX6List.removeAllChildren();
            Http.get(Configs.App.DOMAIN_CONFIG['GetListJackpot'], {
              CurrencyID: Configs.Login.CurrencyID
            }, function (status, res) {
              if (status == 200) {
                console.log(res.d);
                res.d.forEach(function (item, index) {
                  if (item.multiplier > 0) {
                    var itemJackpot = instantiate(_this10.jackpotX6Content);
                    var nameLabel = itemJackpot.getChildByName("container").getChildByName("center").getChildByName("header").getComponent(Label);
                    switch (item.gameID) {
                      case 213:
                        nameLabel.string = App.instance.getTextLang("tx_than_tai");
                        break;
                      case 201:
                        nameLabel.string = App.instance.getTextLang("tx_vuong_quoc");
                        break;
                      case 207:
                        nameLabel.string = App.instance.getTextLang("tx_thuy_cung");
                        break;
                      case 203:
                        nameLabel.string = App.instance.getTextLang("tx_sam_truyen");
                        break;
                      case 215:
                        nameLabel.string = App.instance.getTextLang("tx_vu_truong");
                        break;
                      case 205:
                        nameLabel.string = App.instance.getTextLang("tx_gai_nhay");
                        break;
                      case 211:
                        nameLabel.string = App.instance.getTextLang("tx_rung_vang");
                        break;
                    }
                    var iconNode = itemJackpot.getChildByName("icon");
                    var spriteIcon = iconNode.getComponent(Sprite);
                    var centerX = itemJackpot.getChildByName("container").getChildByName("center");
                    centerX.getChildByName("room").getChildByName("value").getComponent(Label).string = item.roomID == 1 ? "100" : item.roomID == 2 ? "1.000" : "10.000";
                    if (item.nextJackpot > 0) {
                      itemJackpot.getChildByName("line").active = false;
                      iconNode.active = false;
                      centerX.getChildByName("content").active = true;
                      centerX.getChildByName("content").getChildByName("X").getComponent(Label).string = "X" + item.multiplier;
                      var nextJackpot = item.nextJackpot.toString();
                      centerX.getChildByName("content").getChildByName("nextJackpot").getComponent(Label).string = nextJackpot.length === 1 ? '0' + nextJackpot : nextJackpot;
                    } else {
                      centerX.getChildByName("content").active = false;
                      iconNode.active = true;
                      itemJackpot.getChildByName("line").active = true;
                    }
                    var logoNode = itemJackpot.getChildByName("container").getChildByName("logo");
                    switch (item.multiplier) {
                      case 2:
                        spriteIcon.spriteFrame = _this10.icon_x2;
                        break;
                      case 3:
                        spriteIcon.spriteFrame = _this10.icon_x3;
                        break;
                      case 4:
                        spriteIcon.spriteFrame = _this10.icon_x4;
                        break;
                      case 5:
                        spriteIcon.spriteFrame = _this10.icon_x5;
                        break;
                      case 6:
                        spriteIcon.spriteFrame = _this10.icon_x6;
                        break;
                    }
                    var sprite = logoNode.getComponent(Sprite);
                    if (sprite && logoMap[item.gameID]) {
                      sprite.spriteFrame = logoMap[item.gameID];
                    }
                    itemJackpot.on(Node.EventType.TOUCH_END, function (event) {
                      // event.stopPropagation();
                      if (!Configs.Login.IsLogin) {
                        _this10.actShowLoginForm();
                        return;
                      }
                    });
                    _this10.jackpotX6List.addChild(itemJackpot);
                  }
                });
              }
            });
          }
        };
        _proto.actTeleTipZo = function actTeleTipZo() {
          sys.openURL("https://t.me/TIPZO_CSKH_BOT");
        };
        _proto.actFbTipZo = function actFbTipZo() {
          sys.openURL("http://tiny.cc/ple7001");
        };
        _proto.actSecurity = function actSecurity() {
          if (!Configs.Login.IsLogin) {
            this.actShowLoginForm();
            return;
          }
          BundleControl.loadPrefabPopup("prefabs/PopupSecurity", function (prefab) {
            var popup = instantiate(prefab).getComponent(PopupSecurity);
            if (!popup) {
              log("PopupSecurity component not found on prefab.");
              return;
            }
            App.instance.popupNode.addChild(popup.node);
            popup.show();
          });
        };
        _proto.actCheckLoggedIn = function actCheckLoggedIn() {
          if (Configs.Login.IsLogin) return;
          this.actShowLoginForm();
        };
        _proto.actXoSo = function actXoSo() {
          App.instance.openGame(Configs.InGameIds.XoSo);
        };
        _proto.actShowLoginForm = function actShowLoginForm(err) {
          if (err === void 0) {
            err = '';
          }
          BundleControl.loadPrefabPopup("prefabs/PopupLogin", function (prefab) {
            var popup = instantiate(prefab).getComponent("PopupLogin");
            App.instance.popupNode.addChild(popup.node);
            popup.showDetail(err);
          });
        };
        _proto.actGameTaiXiuMD5Live = function actGameTaiXiuMD5Live() {
          App.instance.openGame(Configs.InGameIds.TaiXiuMD5Live);
        };
        _proto.actGameTaiXiuLive = function actGameTaiXiuLive() {
          App.instance.openGame(Configs.InGameIds.TaiXiuLive);
        };
        _proto.actGameBlackJack = function actGameBlackJack() {
          App.instance.openGame(Configs.InGameIds.BlackJack);
        };
        _proto.actGameBaccarat = function actGameBaccarat() {
          App.instance.openGame(Configs.InGameIds.Baccarat);
        };
        _proto.actGameRongHo = function actGameRongHo() {};
        _proto.actGameRoulette = function actGameRoulette() {};
        _proto.actGameSicbo = function actGameSicbo() {
          App.instance.openGame(Configs.InGameIds.Sicbo);
        };
        _proto.actGameXocDia = function actGameXocDia() {};
        _proto.actGameXuatKich = function actGameXuatKich() {
          App.instance.openGame(Configs.InGameIds.XuatKich);
        };
        _proto.actGameLongVuong = function actGameLongVuong() {
          App.instance.openGame(Configs.InGameIds.LongVuong);
        };
        _proto.actGameSamTruyen = function actGameSamTruyen() {
          App.instance.openGame(Configs.InGameIds.SamTruyen);
        };
        _proto.actGamePhiDoi = function actGamePhiDoi() {
          App.instance.openGame(Configs.InGameIds.PhiDoi);
        };
        _proto.actGameCaMap = function actGameCaMap() {
          App.instance.openGame(Configs.InGameIds.CaMap);
        };
        _proto.actGameCaKiem = function actGameCaKiem() {
          App.instance.openGame(Configs.InGameIds.CaKiem);
        };
        _proto.actOpenVirtualSports = function actOpenVirtualSports() {
          App.instance.openGame(Configs.InGameIds.VirtualSports);
        };
        _proto.actGoToCatte = function actGoToCatte() {
          App.instance.openGame(Configs.InGameIds.Catte);
        };
        _proto.actGoToTLMN = function actGoToTLMN() {
          App.instance.openGame(Configs.InGameIds.TLMN);
        };
        _proto.actGoToMauBinh = function actGoToMauBinh() {
          App.instance.openGame(Configs.InGameIds.MauBinh);
        };
        _proto.actGoToPoker = function actGoToPoker() {
          App.instance.openGame(Configs.InGameIds.Poker);
        };
        _proto.actGoToSamLoc = function actGoToSamLoc() {
          App.instance.openGame(Configs.InGameIds.SamLoc);
        };
        _proto.actGoToBaCay = function actGoToBaCay() {
          App.instance.openGame(Configs.InGameIds.BaCay);
        };
        _proto.actGoToXocDiaJP = function actGoToXocDiaJP() {
          App.instance.openGame(Configs.InGameIds.XocDiaLive);
        };
        _proto.actGoToXocDiaMD5 = function actGoToXocDiaMD5() {
          App.instance.openGame(Configs.InGameIds.XocdiaMd5Live);
        };
        _proto.actGoToVuongQuoc = function actGoToVuongQuoc() {
          App.instance.openGame(Configs.InGameIds.Kingdom);
        };
        _proto.actGoToThuyCung = function actGoToThuyCung() {
          App.instance.openGame(Configs.InGameIds.ThuyCung);
        };
        _proto.actGoToRungVang = function actGoToRungVang() {
          App.instance.openGame(Configs.InGameIds.RungVang);
        };
        _proto.actGoToGaiNhay = function actGoToGaiNhay() {
          App.instance.openGame(Configs.InGameIds.GaiNhay);
        };
        _proto.actGoToVuTruong = function actGoToVuTruong() {
          App.instance.openGame(Configs.InGameIds.VuTruong);
        };
        _proto.actGoToThanTai = function actGoToThanTai() {
          App.instance.openGame(Configs.InGameIds.ThanTai);
        };
        _proto.showAnnouncement = function showAnnouncement(data) {
          data.forEach(function (item) {
            BundleControl.loadPrefabPopup("prefabs/PopupAnnouncement", function (prefab) {
              var popup = instantiate(prefab).getComponent("PopupAnnouncement");
              App.instance.popupNode.addChild(popup.node);
              popup.showDetail(item['content']);
            });
          });
        };
        _proto.showSlide = function showSlide(data) {
          BundleControl.loadPrefabPopup("prefabs/PopupSlide", function (prefab) {
            var popup = instantiate(prefab).getComponent("PopupSlide");
            App.instance.popupNode.addChild(popup.node);
            popup.showDetail(data);
          });
        };
        _proto.getInboxes = function getInboxes() {
          var _this11 = this;
          App.instance.showLoading(true);
          Http.get(Configs.App.DOMAIN_CONFIG["IB_GetMessageInbox"], {
            "status": -1,
            "Page": 1,
            "PageSize": 6
          }, function (status, res) {
            App.instance.showLoading(false);
            if (status === 200) {
              if (res.d.length === 0) {
                _this11.inboxMessage.active = false;
              } else {
                _this11.inboxMessage.active = true;
                _this11.inboxMessage.getChildByName("number").getComponent(Label).string = res.d.length.toString();
              }
            }
          });
        };
        return LobbyController;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "nodeWheel", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "nodeRoom", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "lblNickname", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "sprAvatar", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "lblGoldBalance", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "lblCoinBalance", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "hoverCategory", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "userName", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "password", [_dec10], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "panelLoggedOut", [_dec11], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "panelLoggedIn", [_dec12], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "panelMenu", [_dec13], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "jackpotx6", [_dec14], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "jackpotX6List", [_dec15], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor15 = _applyDecoratedDescriptor(_class2.prototype, "jackpotX6Content", [_dec16], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor16 = _applyDecoratedDescriptor(_class2.prototype, "logo_fortune", [_dec17], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor17 = _applyDecoratedDescriptor(_class2.prototype, "logo_kingdom", [_dec18], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor18 = _applyDecoratedDescriptor(_class2.prototype, "logo_ocean", [_dec19], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor19 = _applyDecoratedDescriptor(_class2.prototype, "logo_oracle", [_dec20], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor20 = _applyDecoratedDescriptor(_class2.prototype, "logo_dancingNight", [_dec21], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor21 = _applyDecoratedDescriptor(_class2.prototype, "logo_dancing", [_dec22], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor22 = _applyDecoratedDescriptor(_class2.prototype, "logo_forest", [_dec23], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor23 = _applyDecoratedDescriptor(_class2.prototype, "icon_x2", [_dec24], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor24 = _applyDecoratedDescriptor(_class2.prototype, "icon_x3", [_dec25], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor25 = _applyDecoratedDescriptor(_class2.prototype, "icon_x4", [_dec26], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor26 = _applyDecoratedDescriptor(_class2.prototype, "icon_x5", [_dec27], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor27 = _applyDecoratedDescriptor(_class2.prototype, "icon_x6", [_dec28], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor28 = _applyDecoratedDescriptor(_class2.prototype, "nodeIconFloatButton", [_dec29], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor29 = _applyDecoratedDescriptor(_class2.prototype, "nodeIconFloatButtonMiniGame", [_dec30], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor30 = _applyDecoratedDescriptor(_class2.prototype, "lblVersion", [_dec31], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor31 = _applyDecoratedDescriptor(_class2.prototype, "notifyBarNode", [_dec32], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor32 = _applyDecoratedDescriptor(_class2.prototype, "listGameCenterNode", [_dec33], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor33 = _applyDecoratedDescriptor(_class2.prototype, "prefabContainer", [_dec34], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor34 = _applyDecoratedDescriptor(_class2.prototype, "inboxMessage", [_dec35], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor35 = _applyDecoratedDescriptor(_class2.prototype, "turnVQMM", [_dec36], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor36 = _applyDecoratedDescriptor(_class2.prototype, "turnVQMMPanelMiniGame", [_dec37], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/LongVuongPhotonClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './PhotonClient.ts', './Config.ts'], function (exports) {
  var _inheritsLoose, cclegacy, PhotonClient, Configs;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      PhotonClient = module.PhotonClient;
    }, function (module) {
      Configs = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "10244PV9K5LQYKaIat/N4A9", "LongVuongPhotonClient", undefined);
      var EOperationSubCodes = /*#__PURE__*/function (EOperationSubCodes) {
        EOperationSubCodes[EOperationSubCodes["Login"] = 1] = "Login";
        EOperationSubCodes[EOperationSubCodes["GetCaptcha"] = 2] = "GetCaptcha";
        EOperationSubCodes[EOperationSubCodes["CashInGold"] = 3] = "CashInGold";
        EOperationSubCodes[EOperationSubCodes["CashOutGold"] = 4] = "CashOutGold";
        EOperationSubCodes[EOperationSubCodes["JoinRoom"] = 5] = "JoinRoom";
        EOperationSubCodes[EOperationSubCodes["LeaveRoom"] = 6] = "LeaveRoom";
        EOperationSubCodes[EOperationSubCodes["OtherJoinRoom"] = 7] = "OtherJoinRoom";
        EOperationSubCodes[EOperationSubCodes["CreateFighter"] = 8] = "CreateFighter";
        EOperationSubCodes[EOperationSubCodes["RemoveFighter"] = 9] = "RemoveFighter";
        EOperationSubCodes[EOperationSubCodes["ChangeGun"] = 10] = "ChangeGun";
        EOperationSubCodes[EOperationSubCodes["PlayerShooting"] = 11] = "PlayerShooting";
        EOperationSubCodes[EOperationSubCodes["PlayerShotFish"] = 12] = "PlayerShotFish";
        EOperationSubCodes[EOperationSubCodes["UseTarget"] = 13] = "UseTarget";
        EOperationSubCodes[EOperationSubCodes["GetDoubleCanPlay"] = 14] = "GetDoubleCanPlay";
        EOperationSubCodes[EOperationSubCodes["PlayDouble"] = 15] = "PlayDouble";
        EOperationSubCodes[EOperationSubCodes["Chat"] = 21] = "Chat";
        EOperationSubCodes[EOperationSubCodes["ShowCommandMessage"] = 22] = "ShowCommandMessage";
        EOperationSubCodes[EOperationSubCodes["GetRoomInfo"] = 23] = "GetRoomInfo";
        EOperationSubCodes[EOperationSubCodes["GetCurrentJackpot"] = 24] = "GetCurrentJackpot";
        EOperationSubCodes[EOperationSubCodes["CashInHistory"] = 25] = "CashInHistory";
        EOperationSubCodes[EOperationSubCodes["CashOutHistory"] = 26] = "CashOutHistory";
        EOperationSubCodes[EOperationSubCodes["GetTopJackpot"] = 27] = "GetTopJackpot";
        EOperationSubCodes[EOperationSubCodes["PlayGameHistory"] = 28] = "PlayGameHistory";
        EOperationSubCodes[EOperationSubCodes["GetTopPlayer"] = 29] = "GetTopPlayer";
        EOperationSubCodes[EOperationSubCodes["Ping"] = 30] = "Ping";
        EOperationSubCodes[EOperationSubCodes["Pong"] = 31] = "Pong";
        EOperationSubCodes[EOperationSubCodes["CashoutMin"] = 32] = "CashoutMin";
        return EOperationSubCodes;
      }(EOperationSubCodes || {});
      var EParameterCodes = /*#__PURE__*/function (EParameterCodes) {
        EParameterCodes[EParameterCodes["OperationSubCode"] = 0] = "OperationSubCode";
        EParameterCodes[EParameterCodes["LoginMessage"] = 1] = "LoginMessage";
        EParameterCodes[EParameterCodes["LoginResponse"] = 2] = "LoginResponse";
        EParameterCodes[EParameterCodes["FishConfigsResponse"] = 3] = "FishConfigsResponse";
        EParameterCodes[EParameterCodes["GunConfigsResponse"] = 4] = "GunConfigsResponse";
        EParameterCodes[EParameterCodes["PingResponse"] = 5] = "PingResponse";
        EParameterCodes[EParameterCodes["PongMessage"] = 6] = "PongMessage";
        EParameterCodes[EParameterCodes["CreateFishResponse"] = 7] = "CreateFishResponse";
        EParameterCodes[EParameterCodes["RemoveSingleFishResponse"] = 8] = "RemoveSingleFishResponse";
        EParameterCodes[EParameterCodes["ClientParameterConfig"] = 10] = "ClientParameterConfig";
        EParameterCodes[EParameterCodes["JoinRoomResponse"] = 11] = "JoinRoomResponse";
        EParameterCodes[EParameterCodes["OtherJoinRoomResponse"] = 12] = "OtherJoinRoomResponse";
        EParameterCodes[EParameterCodes["LeaveRoomResponse"] = 13] = "LeaveRoomResponse";
        EParameterCodes[EParameterCodes["RoomInfoResponse"] = 15] = "RoomInfoResponse";
        EParameterCodes[EParameterCodes["ExchangeMessage"] = 16] = "ExchangeMessage";
        EParameterCodes[EParameterCodes["CashInResponse"] = 17] = "CashInResponse";
        EParameterCodes[EParameterCodes["CashOutResponse"] = 18] = "CashOutResponse";
        EParameterCodes[EParameterCodes["ExChangeHistoryResponse"] = 19] = "ExChangeHistoryResponse";
        EParameterCodes[EParameterCodes["TopJackpotResponse"] = 20] = "TopJackpotResponse";
        EParameterCodes[EParameterCodes["PlayHistoryResponse"] = 21] = "PlayHistoryResponse";
        EParameterCodes[EParameterCodes["CaptchaResponse"] = 22] = "CaptchaResponse";
        EParameterCodes[EParameterCodes["ChangeGunMessage"] = 23] = "ChangeGunMessage";
        EParameterCodes[EParameterCodes["ChangeGunResponse"] = 24] = "ChangeGunResponse";
        EParameterCodes[EParameterCodes["ShootingMessage"] = 25] = "ShootingMessage";
        EParameterCodes[EParameterCodes["ShootingResponse"] = 26] = "ShootingResponse";
        EParameterCodes[EParameterCodes["FishShotMessage"] = 27] = "FishShotMessage";
        EParameterCodes[EParameterCodes["HeadShotResponse"] = 28] = "HeadShotResponse";
        EParameterCodes[EParameterCodes["TimeToUse"] = 29] = "TimeToUse";
        EParameterCodes[EParameterCodes["DoubleConfigsResponse"] = 30] = "DoubleConfigsResponse";
        EParameterCodes[EParameterCodes["DoubleValuesCanPlay"] = 31] = "DoubleValuesCanPlay";
        EParameterCodes[EParameterCodes["DoubleMessage"] = 32] = "DoubleMessage";
        EParameterCodes[EParameterCodes["DoubleMessageResponse"] = 33] = "DoubleMessageResponse";
        EParameterCodes[EParameterCodes["ChatMessage"] = 38] = "ChatMessage";
        EParameterCodes[EParameterCodes["ChatResponse"] = 39] = "ChatResponse";
        EParameterCodes[EParameterCodes["ErrorCode"] = 40] = "ErrorCode";
        EParameterCodes[EParameterCodes["CurrencyId"] = 41] = "CurrencyId";
        EParameterCodes[EParameterCodes["CurrentJackpot"] = 42] = "CurrentJackpot";
        EParameterCodes[EParameterCodes["AccountId"] = 43] = "AccountId";
        EParameterCodes[EParameterCodes["PortalId"] = 44] = "PortalId";
        EParameterCodes[EParameterCodes["CashoutMinResponse"] = 45] = "CashoutMinResponse";
        return EParameterCodes;
      }(EParameterCodes || {});
      var LongVuongPhotonClient = exports('LongVuongPhotonClient', /*#__PURE__*/function (_PhotonClient) {
        _inheritsLoose(LongVuongPhotonClient, _PhotonClient);
        function LongVuongPhotonClient() {
          return _PhotonClient.apply(this, arguments) || this;
        }
        LongVuongPhotonClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new LongVuongPhotonClient();
          }
          return this.instance;
        };
        var _proto = LongVuongPhotonClient.prototype;
        _proto.connect = function connect() {
          _PhotonClient.prototype.connect.call(this, Configs.App.DOMAIN_CONFIG['DragonFishServerUrl']);
        };
        return LongVuongPhotonClient;
      }(PhotonClient));
      LongVuongPhotonClient.instance = void 0;
      LongVuongPhotonClient.EOperationSubCodes = EOperationSubCodes;
      LongVuongPhotonClient.EParameterCodes = EParameterCodes;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/MCard.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Sprite, UITransform, Node, Vec2, v3, Tween, tween, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Sprite = module.Sprite;
      UITransform = module.UITransform;
      Node = module.Node;
      Vec2 = module.Vec2;
      v3 = module.v3;
      Tween = module.Tween;
      tween = module.tween;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _class, _class2, _descriptor;
      cclegacy._RF.push({}, "b928cbwVItKEIuM7HmISPLZ", "MCard", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var Card = exports('default', (_dec = property(Sprite), ccclass(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(Card, _Component);
        function Card() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _this.canTouch = true;
          _this.rank = void 0;
          _this.suit = void 0;
          _this.cardIndex = 0;
          _this.idCard = 0;
          _this.isSelect = false;
          _this.isMoved = false;
          _this.origin = void 0;
          _this.isTouched = false;
          _this.cardDistance = 0;
          _this.preTouchPoint = void 0;
          _initializerDefineProperty(_this, "sprite", _descriptor, _assertThisInitialized(_this));
          _this.cardList = void 0;
          return _this;
        }
        var _proto = Card.prototype;
        _proto.setCardWithId = function setCardWithId(cardId) {
          this.rank = cardId.rank;
          this.suit = cardId.suit;
          console.log(this.rank.toString() + this.suit.toString());
        };
        _proto.getIDCardSend = function getIDCardSend() {
          return this.idCard;
        };
        _proto.start = function start() {
          var thiz = this;
          this.node.getComponent(UITransform).width;
          this.node.on(Node.EventType.TOUCH_START, function (event) {
            if (thiz.canTouch && !thiz.isTouched) {
              thiz.preTouchPoint = event.touch.getLocation();
              thiz.isTouched = true;
              thiz.isMoved = false;
              // var p = this.node.getComponent(UITransform).convertToNodeSpaceAR(event.touch);
              // console.log("Node.EventType.TOUCH_START"+ p);
            }
          }, this);
          this.node.on(Node.EventType.TOUCH_MOVE, function (event) {
            // console.log("Node.EventType.TOUCH_MOVE"+thiz.cardIndex);
            if (!thiz.canTouch) return;
            var p = event.touch.getLocation();
            if (!thiz.isMoved) {
              if (Vec2.distance(thiz.preTouchPoint, p) < 5.0) {
                return;
              } else {
                thiz.node.setSiblingIndex(200);
                thiz.isMoved = true;
              }
            }
            var x = (p.x - thiz.preTouchPoint.x) / thiz.node.parent.getScale().x;
            var y = (p.y - thiz.preTouchPoint.y) / thiz.node.parent.getScale().x;
            thiz.node.setPosition(v3(thiz.node.position.x + x, thiz.node.position.y + y, 0));
            thiz.preTouchPoint = p;
            var dx = thiz.node.position.x - thiz.origin.x;
            if (Math.abs(dx) > thiz.cardDistance) {
              if (dx > 0) {
                thiz.cardList.swapCardRight(thiz.cardIndex);
              } else {
                thiz.cardList.swapCardLeft(thiz.cardIndex);
              }
            }
          }, this);
          this.node.on(Node.EventType.TOUCH_END, function (event) {
            thiz.onTouchEnd(event);
          }, this);
          this.node.on(Node.EventType.TOUCH_CANCEL, function (event) {
            thiz.onTouchEnd(event);
          }, this);
        };
        _proto.onTouchEnd = function onTouchEnd(event) {
          var thiz = this;
          if (!thiz.canTouch) return;
          this.isTouched = false;
          if (thiz.isMoved) {
            thiz.moveToOriginPosition();
            // thiz.node.setSiblingIndex(thiz.cardIndex);
            thiz.cardList.reOrderSibingIndex();
          } else {
            thiz.isSelect = !thiz.isSelect;
            thiz.setSelected(thiz.isSelect, false);
            thiz.cardList.onSelected(this, thiz.isSelect);
          }
          // var zz = "";
          // thiz.cardList.cardList.forEach(element => {
          //     zz = zz+ element.cardIndex.toString()+ ",";
          // });
          // console.log(zz);
        };

        _proto.moveToOriginPosition = function moveToOriginPosition() {
          if (!this.isTouched) {
            Tween.stopAllByTarget(this.node);
            var thiz = this;
            thiz.node.setSiblingIndex(thiz.cardIndex + 100);
            tween(thiz.node).to(0.2, {
              position: thiz.origin
            }).call(function () {
              thiz.node.setSiblingIndex(thiz.cardIndex);
            }).start();

            // var beforeMove = new CallFunc(function () {
            //     thiz.getParent().reorderChild(thiz, thiz.cardIndex + 100);
            // });
            // var afterMove = new CallFunc(function () {
            //     thiz.getParent().reorderChild(thiz, thiz.cardIndex);
            // });
            // var move = new MoveTo(0.2, p(this.origin.x, this.origin.y));
            // this.runAction(new Sequence(beforeMove, move, afterMove));

            this.isSelect = false;
          }
        };
        _proto.setSelected = function setSelected(selected, force) {
          if (force) {
            Tween.stopAllByTarget(this.node);
            this.node.setPosition(this.origin);
          }
          this.isSelect = selected;
          if (selected) {
            this.node.setPosition(v3(this.origin.x, this.origin.y + 50));
          } else {
            this.node.setPosition(this.origin);
          }
        };
        _proto.getFrameSprite = function getFrameSprite(nameCard) {};
        _proto.updateFrameCard = function updateFrameCard() {
          this.sprite.spriteFrame = this.cardList.cardFrames.children[this.idCard].getComponent(Sprite).spriteFrame;
        };
        _proto.initCard = function initCard(card, idCard, _cardList, _origin, canTouch, inew) {
          this.setCardWithId(card);
          this.idCard = idCard;
          this.cardIndex = inew;
          this.cardList = _cardList;
          this.origin = _origin;
          this.canTouch = canTouch;
        };
        _proto.update = function update(deltaTime) {}

        // update (dt) {}
        ;

        return Card;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "sprite", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/MiniGame.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, UIOpacity, Tween, Vec3, tween, easing, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      UIOpacity = module.UIOpacity;
      Tween = module.Tween;
      Vec3 = module.Vec3;
      tween = module.tween;
      easing = module.easing;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor, _descriptor2;
      cclegacy._RF.push({}, "18881MQVW1LoaUYdhaB5y6S", "MiniGame", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var MiniGame = exports('MiniGame', (_dec = ccclass('MiniGame'), _dec2 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(MiniGame, _Component);
        function MiniGame() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "gamePlay", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "nameGame", _descriptor2, _assertThisInitialized(_this));
          _this.uiOpacity = null;
          return _this;
        }
        var _proto = MiniGame.prototype;
        _proto.onLoad = function onLoad() {
          this.gamePlay.on(Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
          this.uiOpacity = this.gamePlay.getComponent(UIOpacity);
          if (!this.uiOpacity) {
            this.uiOpacity = this.gamePlay.addComponent(UIOpacity);
          }
        };
        _proto.onTouchMove = function onTouchMove(event) {
          var pos = this.gamePlay.getPosition();
          pos.x += event.getDeltaX();
          pos.y += event.getDeltaY();
          this.gamePlay.setPosition(pos);
        };
        _proto.reOrder = function reOrder() {
          this.node.setSiblingIndex(this.node.parent.children.length - 1);
        };
        _proto.show = function show() {
          var _this2 = this;
          this.reOrder();
          this.node.active = true;
          Tween.stopAllByTarget(this.gamePlay);
          Tween.stopAllByTarget(this.uiOpacity);
          this.gamePlay.setScale(new Vec3(0.8, 0.8, 0.8));
          this.uiOpacity.opacity = 255;
          tween(this.gamePlay).to(0.3, {
            scale: new Vec3(1, 1, 1)
          }, {
            easing: easing.backOut
          }).start();
          tween(this.uiOpacity).to(0.3, {
            opacity: 255
          }, {
            easing: easing.backOut
          }).call(function () {
            return _this2._onShowed();
          }).start();
        };
        _proto._onShowed = function _onShowed() {};
        _proto.dismiss = function dismiss() {
          var _this3 = this;
          Tween.stopAllByTarget(this.gamePlay);
          Tween.stopAllByTarget(this.uiOpacity);
          tween(this.gamePlay).to(0.3, {
            scale: new Vec3(0.8, 0.8, 0.8)
          }, {
            easing: easing.backIn
          }).start();
          tween(this.uiOpacity).to(0.3, {
            opacity: 150
          }, {
            easing: easing.backIn
          }).call(function () {
            return _this3._onDismissed();
          }).start();
        };
        _proto._onDismissed = function _onDismissed() {
          this.node.active = false;
        };
        return MiniGame;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "gamePlay", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "nameGame", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return "";
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/MiniGameSignalRClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Network.SignalRClient.ts', './Config.ts'], function (exports) {
  var _inheritsLoose, cclegacy, SignalRClient, Configs;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      SignalRClient = module.default;
    }, function (module) {
      Configs = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "76500uxLeJGO6yO3z9iEbW1", "MiniGameSignalRClient", undefined);
      var MiniGameSignalRClient = exports('default', /*#__PURE__*/function (_SignalRClient) {
        _inheritsLoose(MiniGameSignalRClient, _SignalRClient);
        function MiniGameSignalRClient() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _SignalRClient.call.apply(_SignalRClient, [this].concat(args)) || this;
          _this.onSuccess = void 0;
          return _this;
        }
        MiniGameSignalRClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new MiniGameSignalRClient();
          }
          return this.instance;
        };
        var _proto = MiniGameSignalRClient.prototype;
        _proto.onstart = function onstart() {
          this.onSuccess(true);
        };
        _proto.onError = function onError() {
          this.onSuccess(false);
        };
        _proto.connectHub = function connectHub(onSuccess) {
          this.onSuccess = onSuccess;
          _SignalRClient.prototype.connect.call(this, Configs.App.DOMAIN_CONFIG['MiniGameHubUrl']);
          this.isMiniGameHub = true;
        };
        return MiniGameSignalRClient;
      }(SignalRClient));
      MiniGameSignalRClient.instance = null;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/MiniGameTX1SignalRClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Network.SignalRClient.ts'], function (exports) {
  var _inheritsLoose, cclegacy, SignalRClient;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      SignalRClient = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "55952LPryBFnpNNH8mHy4vT", "MiniGameTX1SignalRClient", undefined);
      var MiniGameTX1SignalRClient = exports('default', /*#__PURE__*/function (_SignalRClient) {
        _inheritsLoose(MiniGameTX1SignalRClient, _SignalRClient);
        function MiniGameTX1SignalRClient() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _SignalRClient.call.apply(_SignalRClient, [this].concat(args)) || this;
          _this.onSuccess = void 0;
          return _this;
        }
        MiniGameTX1SignalRClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new MiniGameTX1SignalRClient();
          }
          return this.instance;
        };
        var _proto = MiniGameTX1SignalRClient.prototype;
        _proto.onstart = function onstart() {
          this.onSuccess(true);
        };
        _proto.onError = function onError() {
          this.onSuccess(false);
        };
        _proto.connectHub = function connectHub(onSuccess) {
          this.onSuccess = onSuccess;
          _SignalRClient.prototype.connect.call(this, "https://minigame-alpha.bavenoth.com/tx4/miniGameHub");
          this.isMiniGameHub = true;
        }

        // protected onclose() {
        //     super.onclose();
        //     this.connect("https://minigame-alpha.bavenoth.com/tx4/miniGameHub")
        // }
        ;

        return MiniGameTX1SignalRClient;
      }(SignalRClient));
      MiniGameTX1SignalRClient.instance = null;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/MiniGameTX2SignalRClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Network.SignalRClient.ts'], function (exports) {
  var _inheritsLoose, cclegacy, SignalRClient;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      SignalRClient = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "e2997XRlNJP15Lda7bGOMOg", "MiniGameTX2SignalRClient", undefined);
      var MiniGameTX2SignalRClient = exports('default', /*#__PURE__*/function (_SignalRClient) {
        _inheritsLoose(MiniGameTX2SignalRClient, _SignalRClient);
        function MiniGameTX2SignalRClient() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _SignalRClient.call.apply(_SignalRClient, [this].concat(args)) || this;
          _this.onSuccess = void 0;
          return _this;
        }
        MiniGameTX2SignalRClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new MiniGameTX2SignalRClient();
          }
          return this.instance;
        };
        var _proto = MiniGameTX2SignalRClient.prototype;
        _proto.onstart = function onstart() {
          this.onSuccess(true);
        };
        _proto.onError = function onError() {
          this.onSuccess(false);
        };
        _proto.connectHub = function connectHub(onSuccess) {
          this.onSuccess = onSuccess;
          _SignalRClient.prototype.connect.call(this, "https://minigame-alpha.bavenoth.com/tx5/miniGameHub");
          this.isMiniGameHub = true;
        }

        // protected onclose() {
        //     super.onclose();
        //     this.connect("https://minigame-alpha.bavenoth.com/tx5/miniGameHub")
        // }
        ;

        return MiniGameTX2SignalRClient;
      }(SignalRClient));
      MiniGameTX2SignalRClient.instance = null;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/MiniGameTX3SignalRClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Network.SignalRClient.ts'], function (exports) {
  var _inheritsLoose, cclegacy, SignalRClient;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      SignalRClient = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "9ea2dRR119LcIoTccQ7AV7J", "MiniGameTX3SignalRClient", undefined);
      var MiniGameTX3SignalRClient = exports('default', /*#__PURE__*/function (_SignalRClient) {
        _inheritsLoose(MiniGameTX3SignalRClient, _SignalRClient);
        function MiniGameTX3SignalRClient() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _SignalRClient.call.apply(_SignalRClient, [this].concat(args)) || this;
          _this.onSuccess = void 0;
          return _this;
        }
        MiniGameTX3SignalRClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new MiniGameTX3SignalRClient();
          }
          return this.instance;
        };
        var _proto = MiniGameTX3SignalRClient.prototype;
        _proto.onstart = function onstart() {
          this.onSuccess(true);
        };
        _proto.onError = function onError() {
          this.onSuccess(false);
        };
        _proto.connectHub = function connectHub(onSuccess) {
          this.onSuccess = onSuccess;
          _SignalRClient.prototype.connect.call(this, "https://minigame-alpha.bavenoth.com/tx6/miniGameHub");
          this.isMiniGameHub = true;
        }

        // protected onclose() {
        //     super.onclose();
        //     this.connect("https://minigame-alpha.bavenoth.com/tx6/miniGameHub")
        // }
        ;

        return MiniGameTX3SignalRClient;
      }(SignalRClient));
      MiniGameTX3SignalRClient.instance = null;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/MiniGameTXMD5SignalRClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Network.SignalRClient.ts', './Config.ts'], function (exports) {
  var _inheritsLoose, cclegacy, SignalRClient, Configs;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      SignalRClient = module.default;
    }, function (module) {
      Configs = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "b1018kqC1pHuY7pP1rMZstq", "MiniGameTXMD5SignalRClient", undefined);
      var MiniGameTXMD5SignalRClient = exports('default', /*#__PURE__*/function (_SignalRClient) {
        _inheritsLoose(MiniGameTXMD5SignalRClient, _SignalRClient);
        function MiniGameTXMD5SignalRClient() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _SignalRClient.call.apply(_SignalRClient, [this].concat(args)) || this;
          _this.onSuccess = void 0;
          return _this;
        }
        MiniGameTXMD5SignalRClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new MiniGameTXMD5SignalRClient();
          }
          return this.instance;
        };
        var _proto = MiniGameTXMD5SignalRClient.prototype;
        _proto.onstart = function onstart() {
          this.onSuccess(true);
        };
        _proto.onError = function onError() {
          this.onSuccess(false);
        };
        _proto.connectHub = function connectHub(onSuccess) {
          this.onSuccess = onSuccess;
          _SignalRClient.prototype.connect.call(this, Configs.App.DOMAIN_CONFIG['LuckyDiceMd5HubUrl']);
          this.isMiniGameHub = true;
        };
        return MiniGameTXMD5SignalRClient;
      }(SignalRClient));
      MiniGameTXMD5SignalRClient.instance = null;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/MissionChildren.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, Button, Component;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Button = module.Button;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _class;
      cclegacy._RF.push({}, "cbe06aTF4tCD7pKp/DRtoOv", "MissionChildren", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var MissionChildren = exports('default', (_dec = ccclass('MissionChildren'), _dec(_class = /*#__PURE__*/function (_Component) {
        _inheritsLoose(MissionChildren, _Component);
        function MissionChildren() {
          return _Component.apply(this, arguments) || this;
        }
        var _proto = MissionChildren.prototype;
        _proto.start = function start() {
          // Any initialization if needed
        };
        _proto.btnToDo = function btnToDo() {
          var _this$node$parent;
          var parentNode = (_this$node$parent = this.node.parent) == null || (_this$node$parent = _this$node$parent.parent) == null || (_this$node$parent = _this$node$parent.parent) == null ? void 0 : _this$node$parent.getChildByName("closeBtnRegis");
          if (parentNode) {
            var button = parentNode.getComponent(Button);
            if (button && button.clickEvents.length > 0) {
              var clickEvent = button.clickEvents[0];
              clickEvent == null || clickEvent.emit([]);
            }
          }
        };
        _proto.btnClaim = function btnClaim() {
          // Placeholder for future logic
        };
        return MissionChildren;
      }(Component)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/MyInbox.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './App.ts', './Http.ts', './Config.ts', './ItemInbox.ts', './Global.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, instantiate, log, Component, App, Http, Configs, ItemInbox, Global;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      instantiate = module.instantiate;
      log = module.log;
      Component = module.Component;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      ItemInbox = module.default;
    }, function (module) {
      Global = module.Global;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2, _descriptor3;
      cclegacy._RF.push({}, "eb8302DLdRJzJ3fSgzvEXKu", "MyInbox", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var MyInbox = exports('default', (_dec = property(Node), _dec2 = property(Node), _dec3 = property(Node), ccclass(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(MyInbox, _Component);
        function MyInbox() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "itemClone", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "parentInbox", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "listInBox", _descriptor3, _assertThisInitialized(_this));
          _this.isEmptyData = false;
          _this.page = 1;
          return _this;
        }
        var _proto = MyInbox.prototype;
        _proto.onEnable = function onEnable() {
          this.getInboxes();
        };
        _proto.getInboxes = function getInboxes() {
          var _this2 = this;
          App.instance.showLoading(true);
          Http.get(Configs.App.DOMAIN_CONFIG["IB_GetMessageInbox"], {
            "status": -1,
            "Page": this.page,
            "PageSize": 6
          }, function (status, json) {
            App.instance.showLoading(false);
            if (status === 200) {
              _this2.isEmptyData = false;
              var results = json['d'];
              if (results.length == 0) {
                _this2.isEmptyData = true;
                return;
              } else {
                _this2.page = json['p'][0] + 1;
              }
              console.log(results);
              _this2.parentInbox.removeAllChildren();
              for (var index = 0; index < results.length; index++) {
                var itemNode = instantiate(_this2.itemClone);
                itemNode.active = true;
                _this2.parentInbox.addChild(itemNode);
                itemNode.getComponent(ItemInbox).setData(results[index]);
              }
            }
          });
        };
        _proto.readInbox = function readInbox(data) {
          Http.post(Configs.App.DOMAIN_CONFIG["IB_AckMessage"], {
            "id": data["inboxID"]
          }, function (status, json) {
            App.instance.showLoading(false);
            if (status === 200) {
              log(JSON.stringify(json));
            }
          }, false);
        };
        _proto.deleteBox = function deleteBox(data) {
          Http.post(Configs.App.DOMAIN_CONFIG["IB_DeleteMessage"], {
            "id": data["inboxID"]
          }, function (status, json) {
            App.instance.showLoading(false);
            if (status === 200) {
              Global.LobbyController.getInboxes();
              log(JSON.stringify(json));
            }
          }, false);
        };
        _proto.scrollEvent = function scrollEvent(sender, event) {
          switch (event) {
            case 1:
              if (!this.isEmptyData) {
                this.getInboxes();
              }
              break;
            case 6:
              log("Bounce bottom");
              break;
          }
        };
        return MyInbox;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "itemClone", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "parentInbox", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "listInBox", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Network.SignalRClient.ts", ['cc', './Config.ts', './App.ts'], function (exports) {
  var cclegacy, log, director, Configs, App;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
      log = module.log;
      director = module.director;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      App = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "e4b773KcTpMXphgVEM7LDyq", "Network.SignalRClient", undefined);
      var SignalRClient = exports('default', /*#__PURE__*/function () {
        function SignalRClient() {
          this.connection = null;
          this.host = "";
          this.isAutoReconnect = true;
          this.isForceClose = false;
          this.MAX_RETRIES = 10;
          this.isMiniGameHub = false;
        }
        var _proto = SignalRClient.prototype;
        _proto.connect = function connect(host) {
          var _this = this;
          this.host = host;
          if (this.host == "") {
            return;
          }
          if (!SignalRClient.instances.has(this)) {
            SignalRClient.instances.add(this);
          }
          if (this.isConnected()) {
            this.onstart();
            return;
          }
          if (Configs.Login.AccessToken == "") {
            setTimeout(function () {
              return _this.connect(host);
            }, 500);
            return;
          }

          // @ts-ignore
          this.connection = new signalR.HubConnectionBuilder().withUrl(host, {
            accessTokenFactory: function accessTokenFactory() {
              return Configs.Login.AccessToken;
            },
            skipNegotiation: true,
            // @ts-ignore
            transport: signalR.HttpTransportType.WebSockets
          }).build();
          this.connection.start().then(function () {
            log("Connected to SignalR");
            _this.onstart();
          })["catch"](function (err) {
            log("Connection error:", err);
            _this.onError();
          });
          this.connection.onclose(function () {
            _this.onclose();
          });
        };
        SignalRClient.closeAll = function closeAll() {
          Array.from(SignalRClient.instances).forEach(function (instance) {
            try {
              if (instance.isConnected()) {
                instance.dontReceive();
                instance.close();
              }
            } catch (e) {
              log(e);
            }
            if (SignalRClient.instances.has(instance)) {
              SignalRClient.instances["delete"](instance);
            }
          });
        };
        _proto.dontReceiveAll = function dontReceiveAll() {
          Array.from(SignalRClient.instances).forEach(function (instance) {
            try {
              if (instance.isConnected()) {
                instance.dontReceive();
              }
            } catch (e) {
              log(e);
            }
          });
        };
        SignalRClient.closeHubMiniGameAll = function closeHubMiniGameAll() {
          // Array.from(SignalRClient.instances).forEach(instance => {
          //     if (instance.isConnected() && instance.isMiniGameHub) {
          //         instance.close();
          //     }
          // });
        };
        _proto.isConnecting = function isConnecting() {
          return this.connection != null && this.connection.connection.connectionState == 0;
        };
        _proto.isConnected = function isConnected() {
          return this.connection != null && this.connection.connection.connectionState == 1;
        };
        _proto.onError = function onError() {};
        _proto.onstart = function onstart() {};
        _proto.close = function close() {
          var _this2 = this;
          if (!this.isConnected()) {
            return;
          }
          this.connection.stop().then(function () {
            _this2.isForceClose = true;
          });
          this.connection = null;
        };
        _proto.onclose = function onclose() {
          SignalRClient.instances["delete"](this);
          this.connection = null;
          this.host = "";
          if (this.isForceClose) {
            log("Connection closed manually " + this.host);
            this.isForceClose = false; // Reset the flag
            return;
          }
          log("Connection closed unexpectedly " + this.host);
          if (this.host == Configs.App.DOMAIN_CONFIG['ChatHubUrl']) return;
          this.dontReceiveAll();
          if (this.isMiniGameHub) {
            var _App$instance$taiXiuJ, _App$instance$taiXiuM, _App$instance$hiLoMin, _App$instance$miniPok, _App$instance$phucSin, _App$instance$bauCuaM, _App$instance$luckyWi;
            (_App$instance$taiXiuJ = App.instance.taiXiuJackpotMiniGame) == null || _App$instance$taiXiuJ.dismiss();
            App.instance.taiXiuJackpotMiniGame = null;
            (_App$instance$taiXiuM = App.instance.taiXiuMD5MiniGame) == null || _App$instance$taiXiuM.dismiss();
            App.instance.taiXiuMD5MiniGame = null;
            (_App$instance$hiLoMin = App.instance.hiLoMiniGame) == null || _App$instance$hiLoMin.dismiss();
            App.instance.hiLoMiniGame = null;
            (_App$instance$miniPok = App.instance.miniPoker) == null || _App$instance$miniPok.dismiss();
            App.instance.miniPoker = null;
            (_App$instance$phucSin = App.instance.phucSinhMiniGame) == null || _App$instance$phucSin.dismiss();
            App.instance.phucSinhMiniGame = null;
            (_App$instance$bauCuaM = App.instance.bauCuaMiniGame) == null || _App$instance$bauCuaM.dismiss();
            App.instance.bauCuaMiniGame = null;
            (_App$instance$luckyWi = App.instance.luckyWildMiniGame) == null || _App$instance$luckyWi.dismiss();
            App.instance.luckyWildMiniGame = null;
          }
          App.instance.bigGameNode.removeAllChildren();
          App.instance.slotGameNode.removeAllChildren();
          App.instance.miniGameNode.removeAllChildren();
          App.instance.showErrLoading(App.instance.getTextLang("me11"));
          App.instance.slotGame = {};
          if (director.getScene().name !== "Lobby") ;
        };
        _proto.receiveArray = function receiveArray(method, callback, retries) {
          var _this3 = this;
          if (retries === void 0) {
            retries = 0;
          }
          if (retries >= this.MAX_RETRIES) {
            return;
          }
          if (this.isConnecting()) {
            setTimeout(function () {
              return _this3.receive(method, callback, retries + 1);
            }, 500);
            return;
          }
          if (this.isConnected()) {
            this.connection.on(method, function () {
              return callback.apply(void 0, arguments);
            });
            return;
          }
          this.connect(this.host);
          setTimeout(function () {
            return _this3.receive(method, callback, retries + 1);
          }, 500);
        };
        _proto.dontReceive = function dontReceive() {
          log("SignalRClient offAll " + this.host);
          if (this.connection === null) {
            return;
          }
          try {
            this.connection.offAll();
          } catch (e) {
            SignalRClient.instances["delete"](this);
            this.connection = null;
            this.host = "";
          }
        };
        _proto.receive = function receive(method, callback, retries) {
          var _this4 = this;
          if (retries === void 0) {
            retries = 0;
          }
          if (retries >= this.MAX_RETRIES) {
            return;
          }
          if (this.isConnecting()) {
            setTimeout(function () {
              return _this4.receive(method, callback, retries + 1);
            }, 500);
            return;
          }
          if (this.isConnected()) {
            this.connection.on(method, callback);
            return;
          }
          this.connect(this.host);
          setTimeout(function () {
            return _this4.receive(method, callback, retries + 1);
          }, 500);
        };
        _proto.send = function send(method, args, callback, retries) {
          var _this5 = this;
          if (retries === void 0) {
            retries = 0;
          }
          if (retries >= this.MAX_RETRIES) {
            return;
          }
          if (this.isConnecting()) {
            setTimeout(function () {
              return _this5.send(method, args, callback, retries + 1);
            }, 500);
            return;
          }
          if (this.isConnected()) {
            var _this$connection;
            (_this$connection = this.connection).invoke.apply(_this$connection, [method].concat(args)).then(callback)["catch"](function (err) {
              log("Invoke error on method " + method + ":", err);
            });
            return;
          }
          this.connect(this.host);
          setTimeout(function () {
            return _this5.send(method, args, callback, retries + 1);
          }, 500);
        };
        return SignalRClient;
      }());
      SignalRClient.instances = new Set();
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/NotifyRun.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './EventBus.ts', './App.ts', './ChatHubSignalRClient.ts', './Config.ts', './Utils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, NodePool, instantiate, RichText, view, UITransform, tween, v3, Component, eventBus, App, ChatHubSignalRClient, Configs, Utils;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      NodePool = module.NodePool;
      instantiate = module.instantiate;
      RichText = module.RichText;
      view = module.view;
      UITransform = module.UITransform;
      tween = module.tween;
      v3 = module.v3;
      Component = module.Component;
    }, function (module) {
      eventBus = module.default;
    }, function (module) {
      App = module.default;
    }, function (module) {
      ChatHubSignalRClient = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      Utils = module.Utils;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2;
      cclegacy._RF.push({}, "0e88aozF4pCZKWz7aZB1Dcb", "NotifyRun", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var NotifyRun = exports('default', (_dec = ccclass('NotifyRun'), _dec2 = property(Node), _dec3 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(NotifyRun, _Component);
        function NotifyRun() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "listNotify", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "notify", _descriptor2, _assertThisInitialized(_this));
          _this.speed = 100;
          _this.gap = 100;
          _this.queueNodeNotify = [];
          _this.pool = new NodePool();
          _this.maxNotifies = 10;
          _this.initialized = false;
          return _this;
        }
        var _proto = NotifyRun.prototype;
        _proto.onLoad = function onLoad() {
          for (var i = 0; i < this.maxNotifies; i++) {
            var item = instantiate(this.notify);
            this.pool.put(item);
          }
          this.listNotify.removeAllChildren();
          if (Configs.Login.IsLogin) {
            this.onLoginSuccess();
          } else {
            eventBus.on('LOGIN_SUCCESS', this.onLoginSuccess, this);
          }
          eventBus.on('LOGOUT', this.onLogout, this);
        };
        _proto.onEnable = function onEnable() {
          this.listNotify.removeAllChildren();
          this.queueNodeNotify = [];
          this.pool.clear();
          this.unscheduleAllCallbacks();
          if (this.initialized) {
            this.initHub();
          }
        };
        _proto.onDestroy = function onDestroy() {
          eventBus.off('LOGIN_SUCCESS', this.onLoginSuccess, this);
          eventBus.off('LOGOUT', this.onLogout, this);
        };
        _proto.onLogout = function onLogout() {
          this.initialized = false;
          eventBus.on('LOGIN_SUCCESS', this.onLoginSuccess, this);
          this.listNotify.removeAllChildren();
          this.queueNodeNotify = [];
          this.pool.clear();
          this.unscheduleAllCallbacks();
        };
        _proto.onLoginSuccess = function onLoginSuccess() {
          if (this.initialized) return;
          this.initialized = true;
          this.initHub();
        };
        _proto.initHub = function initHub() {
          var _this2 = this;
          var textWin = App.instance.getTextLang("TLN_WIN");
          ChatHubSignalRClient.getInstance().receiveNotify(function (data) {
            data.forEach(function (item, index) {
              _this2.scheduleOnce(function () {
                var messages = item.Message.split(',');
                if (messages.length < 4) {
                  _this2.addMessage(item.Message);
                  return;
                }
                var gameName = Configs.InGameIds.getGameName(item.GameID);
                var message = "<color=#fdad46><i>(" + gameName + ")</i></c>" + ("<color=#31b6ce> " + messages[1] + "</c>") + ("<color=#ffffff> " + textWin + "</c>") + ("<color=#f1cc0e> " + Utils.formatNumber(parseInt(messages[2])) + "</c>");
                _this2.addMessage(message);
              }, 0.1 * index);
            });
          });
        };
        _proto.addMessage = function addMessage(message) {
          var _this3 = this;
          if (!this.notify || !this.listNotify) return;
          if (this.queueNodeNotify.length >= this.maxNotifies) return;
          var notifyNode = this.pool.size() > 0 ? this.pool.get() : instantiate(this.notify);
          var labelComp = notifyNode.getComponent(RichText);
          if (labelComp) labelComp.string = message;
          notifyNode.active = false;
          this.listNotify.addChild(notifyNode);
          this.scheduleOnce(function () {
            var startX = view.getVisibleSize().width / 2;
            if (_this3.queueNodeNotify.length > 0) {
              var last = _this3.queueNodeNotify[_this3.queueNodeNotify.length - 1];
              var lastRight = last.position.x + last.getComponent(UITransform).width;
              startX = Math.max(startX, lastRight + _this3.gap);
            }
            notifyNode.setPosition(startX, 0);
            notifyNode.active = true;
            _this3.queueNodeNotify.push(notifyNode);
            _this3.runMarquee(notifyNode);
          }, 0);
        };
        _proto.runMarquee = function runMarquee(notifyNode) {
          var _this4 = this;
          var width = notifyNode.getComponent(UITransform).width;
          var distance = notifyNode.position.x + width + view.getVisibleSize().width / 2;
          var duration = distance / this.speed;
          tween(notifyNode).to(duration, {
            position: v3(-view.getVisibleSize().width / 2 - width, 0, 0)
          }, {
            easing: 'linear'
          }).call(function () {
            _this4.queueNodeNotify = _this4.queueNodeNotify.filter(function (n) {
              return n !== notifyNode;
            });
            notifyNode.removeFromParent();
            notifyNode.setPosition(v3(0, 0, 0));
            _this4.pool.put(notifyNode);
          }).start();
        };
        return NotifyRun;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "listNotify", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "notify", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/OceanSignalRClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Config.ts', './Network.SignalRClient.ts'], function (exports) {
  var _inheritsLoose, cclegacy, Configs, SignalRClient;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      SignalRClient = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "cfc8bIMMNRHrZ6uNn8EY1k9", "OceanSignalRClient", undefined);
      var OceanSignalRClient = exports('default', /*#__PURE__*/function (_SignalRClient) {
        _inheritsLoose(OceanSignalRClient, _SignalRClient);
        function OceanSignalRClient() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _SignalRClient.call.apply(_SignalRClient, [this].concat(args)) || this;
          _this.onSuccess = void 0;
          return _this;
        }
        OceanSignalRClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new OceanSignalRClient();
          }
          return this.instance;
        };
        var _proto = OceanSignalRClient.prototype;
        _proto.onstart = function onstart() {
          this.onSuccess(true);
        };
        _proto.onError = function onError() {
          this.onSuccess(false);
        };
        _proto.connectHub = function connectHub(onSuccess) {
          this.onSuccess = onSuccess;
          _SignalRClient.prototype.connect.call(this, Configs.App.DOMAIN_CONFIG['OceanHubUrl']);
        };
        return OceanSignalRClient;
      }(SignalRClient));
      OceanSignalRClient.instance = null;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/OracleSignalRClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Config.ts', './Network.SignalRClient.ts'], function (exports) {
  var _inheritsLoose, cclegacy, Configs, SignalRClient;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      SignalRClient = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "365acC6qgZJEbjQ+qjZTbOl", "OracleSignalRClient", undefined);
      var OracleSignalRClient = exports('default', /*#__PURE__*/function (_SignalRClient) {
        _inheritsLoose(OracleSignalRClient, _SignalRClient);
        function OracleSignalRClient() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _SignalRClient.call.apply(_SignalRClient, [this].concat(args)) || this;
          _this.onSuccess = void 0;
          return _this;
        }
        OracleSignalRClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new OracleSignalRClient();
          }
          return this.instance;
        };
        var _proto = OracleSignalRClient.prototype;
        _proto.onstart = function onstart() {
          this.onSuccess(true);
        };
        _proto.onError = function onError() {
          this.onSuccess(false);
        };
        _proto.connectHub = function connectHub(onSuccess) {
          this.onSuccess = onSuccess;
          _SignalRClient.prototype.connect.call(this, Configs.App.DOMAIN_CONFIG['OlympiaHubUrl']);
        };
        return OracleSignalRClient;
      }(SignalRClient));
      OracleSignalRClient.instance = null;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Pagging.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Button, Label, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Button = module.Button;
      Label = module.Label;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;
      cclegacy._RF.push({}, "fbc00HoTBBBTqeEPITz0twp", "Pagging", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var Pagging = exports('Pagging', (_dec = ccclass("Pagging"), _dec2 = property(Button), _dec3 = property(Button), _dec4 = property(Button), _dec5 = property(Button), _dec6 = property(Button), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(Pagging, _Component);
        function Pagging() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "btnPrevious", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "btnPagePrevious", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "btnPageCurrent", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "btnPageNext", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "btnNext", _descriptor5, _assertThisInitialized(_this));
          _this.pagingTarget = null;
          _this.currentPage = 0;
          _this.pageNext = 0;
          _this.pagePrevious = 0;
          _this.pageMax = 100;
          return _this;
        }
        var _proto = Pagging.prototype;
        _proto.init = function init(currentPage) {
          this.currentPage = currentPage;
          this.pageNext = currentPage + 1;
          this.pagePrevious = currentPage - 1;
          this.btnPageCurrent.getComponentInChildren(Label).string = "" + (currentPage + 1);
          this.btnPageNext.getComponentInChildren(Label).string = "" + (this.pageNext + 1);
          this.btnPageNext.node.active = this.pageNext + 1 > this.pageMax ? false : true;
          this.btnNext.node.active = this.btnPageNext.node.active;
          this.btnPrevious.node.active = this.currentPage != 0;
          this.btnPagePrevious.node.active = this.pagePrevious > 0;
          this.btnPagePrevious.getComponentInChildren(Label).string = "" + (this.pagePrevious + 1);
        };
        _proto.bindPagingEventTarget = function bindPagingEventTarget(target) {
          if (!target) return;
          this.pagingTarget = target;
        };
        _proto.onNext = function onNext() {
          if (typeof this.pagingTarget.onNextToPage === "function") {
            this.pagingTarget.onNextToPage(this.pageNext);
            this.init(this.pageNext);
          }
        };
        _proto.onPrevious = function onPrevious() {
          if (typeof this.pagingTarget.onPreviousToPage === "function") {
            this.pagingTarget.onPreviousToPage(this.pagePrevious);
            this.init(this.pagePrevious);
          }
        };
        _proto.setMaxPage = function setMaxPage(pageMax) {
          if (this.pageMax != pageMax) {
            this.pageMax = pageMax;
            this.btnPageNext.node.active = this.pageNext + 1 > this.pageMax ? false : true;
            this.btnNext.node.active = this.btnPageNext.node.active;
          }
        };
        return Pagging;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "btnPrevious", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "btnPagePrevious", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "btnPageCurrent", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "btnPageNext", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "btnNext", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Pagination.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Button, Node, Prefab, SpriteFrame, Component, instantiate, Label, Sprite;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Button = module.Button;
      Node = module.Node;
      Prefab = module.Prefab;
      SpriteFrame = module.SpriteFrame;
      Component = module.Component;
      instantiate = module.instantiate;
      Label = module.Label;
      Sprite = module.Sprite;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6;
      cclegacy._RF.push({}, "24287umPrZDVpwH4BCgGTi6", "Pagination", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PaginationUI = exports('default', (_dec = property(Button), _dec2 = property(Button), _dec3 = property(Node), _dec4 = property(Prefab), _dec5 = property(SpriteFrame), _dec6 = property(SpriteFrame), ccclass(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(PaginationUI, _Component);
        function PaginationUI() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "backButton", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "nextButton", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "pageButtonsContainer", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "pageButtonPrefab", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "activePageButtonSprite", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "inactivePageButtonSprite", _descriptor6, _assertThisInitialized(_this));
          _this.loadPageCallback = void 0;
          _this.currentPage = 1;
          _this.totalPages = 1;
          return _this;
        }
        var _proto = PaginationUI.prototype;
        _proto.onLoad = function onLoad() {
          this.backButton.node.on('click', this.onBackClicked, this);
          this.nextButton.node.on('click', this.onNextClicked, this);
        };
        _proto.initListener = function initListener(loadPageCallback) {
          this.loadPageCallback = loadPageCallback;
        };
        _proto.onBackClicked = function onBackClicked() {
          if (this.currentPage > 1) {
            this.loadPageCallback(this.currentPage - 1);
          }
        };
        _proto.onNextClicked = function onNextClicked() {
          if (this.currentPage < this.totalPages) {
            this.loadPageCallback(this.currentPage + 1);
          }
        };
        _proto.updatePagination = function updatePagination(totalPages, currentPage) {
          this.totalPages = totalPages;
          this.currentPage = currentPage;
          this.updatePaginationUI();
        };
        _proto.updatePaginationUI = function updatePaginationUI() {
          var _this2 = this;
          var visiblePages = 5;
          this.pageButtonsContainer.removeAllChildren();
          var startPage, endPage;
          if (this.totalPages <= visiblePages) {
            startPage = 1;
            endPage = this.totalPages;
          } else {
            var maxPagesBeforeCurrent = Math.floor(visiblePages / 2);
            var maxPagesAfterCurrent = Math.ceil(visiblePages / 2) - 1;
            if (this.currentPage <= maxPagesBeforeCurrent) {
              startPage = 1;
              endPage = visiblePages;
            } else if (this.currentPage + maxPagesAfterCurrent >= this.totalPages) {
              startPage = this.totalPages - visiblePages + 1;
              endPage = this.totalPages;
            } else {
              startPage = this.currentPage - maxPagesBeforeCurrent;
              endPage = this.currentPage + maxPagesAfterCurrent;
            }
          }

          // Create page buttons
          var _loop = function _loop(i) {
            var pageButtonNode = instantiate(_this2.pageButtonPrefab);
            var pageButton = pageButtonNode.getComponent(Button);
            var label = pageButtonNode.getComponentInChildren(Label);
            label.string = i.toString();
            if (i === _this2.currentPage) {
              pageButton.interactable = false;
              pageButtonNode.getComponentInChildren(Sprite).spriteFrame = _this2.activePageButtonSprite;
            } else {
              pageButtonNode.getComponentInChildren(Sprite).spriteFrame = _this2.inactivePageButtonSprite;
            }
            pageButton.node.on('click', function () {
              return _this2.loadPageCallback(i);
            });
            _this2.pageButtonsContainer.addChild(pageButtonNode);
          };
          for (var i = startPage; i <= endPage; i++) {
            _loop(i);
          }
          this.backButton.node.active = this.currentPage > 1;
          this.nextButton.node.active = this.currentPage < this.totalPages;
        };
        return PaginationUI;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "backButton", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "nextButton", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "pageButtonsContainer", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "pageButtonPrefab", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "activePageButtonSprite", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "inactivePageButtonSprite", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PanelMenu.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './App.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Toggle, tween, Vec3, easing, UIOpacity, Component, App;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Toggle = module.Toggle;
      tween = module.tween;
      Vec3 = module.Vec3;
      easing = module.easing;
      UIOpacity = module.UIOpacity;
      Component = module.Component;
    }, function (module) {
      App = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;
      cclegacy._RF.push({}, "3d870S17qNP5LoZBjVXvllh", "PanelMenu", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PanelMenu = exports('PanelMenu', (_dec = ccclass('Lobby.LobbyController.PanelMenu'), _dec2 = property({
        type: Node
      }), _dec3 = property({
        type: Node
      }), _dec4 = property({
        type: Toggle
      }), _dec5 = property({
        type: Toggle
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(PanelMenu, _Component);
        function PanelMenu() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "targetNode", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "bg", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "toggleMusic", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "toggleSound", _descriptor4, _assertThisInitialized(_this));
          _this.animate = false;
          return _this;
        }
        var _proto = PanelMenu.prototype;
        _proto.start = function start() {
          App.instance.isShowNotifyJackpot = true;

          // this.toggleMusic.node.on('toggle', () => {
          //     SPUtils.setMusicVolumn(this.toggleMusic.isChecked ? 1 : 0);
          //     BroadcastReceiver.send(BroadcastReceiver.ON_AUDIO_CHANGED);
          // });
          //
          // this.toggleSound.node.on('toggle', () => {
          //     SPUtils.setSoundVolumn(this.toggleSound.isChecked ? 1 : 0);
          //     BroadcastReceiver.send(BroadcastReceiver.ON_AUDIO_CHANGED);
          // });
          //
          // this.toggleMusic.isChecked = SPUtils.getMusicVolumn() > 0;
          // this.toggleSound.isChecked = SPUtils.getSoundVolumn() > 0;
          //
          // this.targetNode.active = false;
        };

        _proto.show = function show() {
          var _this2 = this;
          if (this.animate) return;
          this.animate = true;
          this.targetNode.parent.active = true;
          var opacityComp = this.getOrAddUIOpacity(this.bg);
          opacityComp.opacity = 150;
          this.bg.setScale(0.8, 0.8, 1);
          tween(this.bg).to(0.3, {
            scale: new Vec3(1.0, 1.0, 1.0)
          }, {
            easing: easing.backOut
          }).start();
          tween(opacityComp).to(0.3, {
            opacity: 255
          }, {
            easing: easing.backOut
          }).call(function () {
            _this2.animate = false;
          }).start();
        };
        _proto.hide = function hide() {
          var _this3 = this;
          var opacityComp = this.getOrAddUIOpacity(this.bg);
          tween(this.bg).to(0.3, {
            scale: new Vec3(0.8, 0.8, 1)
          }, {
            easing: easing.backIn
          }).start();
          tween(opacityComp).to(0.3, {
            opacity: 150
          }, {
            easing: easing.backIn
          }).call(function () {
            _this3.targetNode.parent.active = false;
            _this3.animate = false;
          }).start();
        };
        _proto.dismiss = function dismiss() {
          var _this4 = this;
          if (this.animate) return;
          this.animate = true;
          var opacityComp = this.getOrAddUIOpacity(this.bg);
          tween(this.bg).to(0.3, {
            scale: new Vec3(0.8, 0.8, 1)
          }, {
            easing: easing.backIn
          }).start();
          tween(opacityComp).to(0.3, {
            opacity: 150
          }, {
            easing: easing.backIn
          }).call(function () {
            _this4.targetNode.parent.active = false;
            _this4.animate = false;
          }).start();
        };
        _proto.toggle = function toggle() {
          if (this.targetNode.active) {
            this.dismiss();
          } else {
            this.show();
          }
        };
        _proto.getOrAddUIOpacity = function getOrAddUIOpacity(node) {
          if (!node) {
            console.error('getOrAddUIOpacity null');
            return null;
          }
          var comp = node.getComponent(UIOpacity);
          if (!comp) {
            comp = node.addComponent(UIOpacity);
          }
          return comp;
        };
        _proto.actMenu = function actMenu() {
          if (this.targetNode.parent.active == false) {
            this.targetNode.parent.active = true;
          } else {
            // this.panelMenu.node.parent.active = false;
            this.dismiss();
          }
          this.show();
        };
        return PanelMenu;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "targetNode", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "bg", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "toggleMusic", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "toggleSound", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PhotonClient.ts", ['cc', './App.ts', './Config.ts'], function (exports) {
  var cclegacy, App, Configs;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Configs = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "708466nxfdHZ7o/223oy9go", "PhotonClient", undefined);
      var EOperationCodes = /*#__PURE__*/function (EOperationCodes) {
        EOperationCodes[EOperationCodes["Account"] = 10] = "Account";
        EOperationCodes[EOperationCodes["Game"] = 20] = "Game";
        EOperationCodes[EOperationCodes["Shop"] = 30] = "Shop";
        EOperationCodes[EOperationCodes["Statistic"] = 40] = "Statistic";
        return EOperationCodes;
      }(EOperationCodes || {});
      var EParameterCodes = /*#__PURE__*/function (EParameterCodes) {
        EParameterCodes[EParameterCodes["OperationSubCode"] = 0] = "OperationSubCode";
        EParameterCodes[EParameterCodes["LoginMessage"] = 1] = "LoginMessage";
        return EParameterCodes;
      }(EParameterCodes || {});
      var EOperationSubCodes = /*#__PURE__*/function (EOperationSubCodes) {
        EOperationSubCodes[EOperationSubCodes["Login"] = 1] = "Login";
        return EOperationSubCodes;
      }(EOperationSubCodes || {});
      var PhotonClient = exports('PhotonClient', /*#__PURE__*/function () {
        function PhotonClient() {
          this.peer = void 0;
          this.host = "";
          this.isLoggedIn = false;
        }
        PhotonClient.getErrMsg = function getErrMsg(errCode) {
          return App.instance.getTextLang("fish_err" + Math.abs(errCode));
        };
        var _proto = PhotonClient.prototype;
        _proto.connect = function connect(host) {
          this.host = host;
          this.peer = new Photon.PhotonPeer(Photon.ConnectionProtocol.Wss, this.host);
          this.setupEventListeners();
          this.peer.connect('');
        };
        _proto.sendLoginRequest = function sendLoginRequest() {
          App.instance.showLoading(true);
          var payload = {
            a: Configs.Login.AccessToken,
            c: Configs.Login.CurrencyID,
            p: Configs.Login.PortalID
          };
          var params = [];
          params.push(EParameterCodes.OperationSubCode, EOperationSubCodes.Login);
          params.push(EParameterCodes.LoginMessage, JSON.stringify(payload));
          this.sendOperation(PhotonClient.EOperationCodes.Account, params, true);
        };
        _proto.setupEventListeners = function setupEventListeners() {
          var _this = this;
          this.addPeerStatusListener(Photon.PhotonPeer.StatusCodes.connect, function () {
            _this.sendLoginRequest();
          });
          this.addPeerStatusListener(Photon.PhotonPeer.StatusCodes.disconnect, function () {
            if (App.instance.skillsGameNode.children.length > 0) {
              App.instance.showErrLoading(App.instance.getTextLang("fish_err15"));
              App.instance.skillsGameNode.removeAllChildren();
            }
          });
        };
        _proto.handleErrorResponse = function handleErrorResponse(callback) {
          this.addPeerStatusListener(Photon.PhotonPeer.StatusCodes.error, function () {
            if (callback) {
              callback();
            }
          });
        };
        _proto.handleTimeoutResponse = function handleTimeoutResponse(callback) {
          this.addPeerStatusListener(Photon.PhotonPeer.StatusCodes.timeout, function () {
            if (callback) {
              callback();
            }
          });
        };
        _proto.addResponseListener = function addResponseListener(operationCode, callback) {
          this.peer.addResponseListener(operationCode, callback);
        };
        _proto.addPeerStatusListener = function addPeerStatusListener(statusCode, callback) {
          this.peer.addPeerStatusListener(statusCode, callback);
        };
        _proto.addEventListener = function addEventListener(eventCode, callback) {
          this.peer.addEventListener(eventCode, callback);
        };
        _proto.sendOperation = function sendOperation(operationCode, data, sendReliable, channelId) {
          this.peer.sendOperation(operationCode, data, sendReliable, channelId);
        };
        return PhotonClient;
      }());
      PhotonClient.EOperationCodes = EOperationCodes;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PlayerView.ts", ['cc'], function () {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      // // Learn TypeScript:
      cclegacy._RF.push({}, "0833fqZfAZEEqbtL1/4VRCx", "PlayerView", undefined);
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PopupAnnouncement.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Dialog.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, Dialog;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
    }, function (module) {
      Dialog = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;
      cclegacy._RF.push({}, "8a296q9codHHYkF/Jmp+kmh", "PopupAnnouncement", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PopupAnnouncement = exports('default', (_dec = ccclass('PopupAnnouncement'), _dec2 = property(Label), _dec(_class = (_class2 = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(PopupAnnouncement, _Dialog);
        function PopupAnnouncement() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Dialog.call.apply(_Dialog, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "lblContent", _descriptor, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = PopupAnnouncement.prototype;
        _proto.showDetail = function showDetail(content) {
          _Dialog.prototype.show.call(this);
          this.lblContent.string = content;
        };
        return PopupAnnouncement;
      }(Dialog), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "lblContent", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PopupCashout.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './App.ts', './Utils.ts', './Http.ts', './Config.ts', './BroadcastListener.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Toggle, Label, EditBox, Sprite, RichText, Color, instantiate, tween, UIOpacity, Vec3, easing, sys, Button, ToggleContainer, UITransform, Component, App, Utils, Http, Configs, BroadcastReceiver;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Toggle = module.Toggle;
      Label = module.Label;
      EditBox = module.EditBox;
      Sprite = module.Sprite;
      RichText = module.RichText;
      Color = module.Color;
      instantiate = module.instantiate;
      tween = module.tween;
      UIOpacity = module.UIOpacity;
      Vec3 = module.Vec3;
      easing = module.easing;
      sys = module.sys;
      Button = module.Button;
      ToggleContainer = module.ToggleContainer;
      UITransform = module.UITransform;
      Component = module.Component;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Utils = module.Utils;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      BroadcastReceiver = module.BroadcastReceiver;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _dec25, _dec26, _dec27, _dec28, _dec29, _dec30, _dec31, _dec32, _dec33, _dec34, _dec35, _dec36, _dec37, _dec38, _dec39, _dec40, _dec41, _dec42, _dec43, _dec44, _dec45, _dec46, _dec47, _dec48, _dec49, _dec50, _dec51, _dec52, _dec53, _dec54, _dec55, _dec56, _dec57, _dec58, _dec59, _dec60, _dec61, _dec62, _dec63, _dec64, _dec65, _dec66, _dec67, _dec68, _dec69, _dec70, _dec71, _dec72, _dec73, _dec74, _dec75, _dec76, _dec77, _dec78, _dec79, _dec80, _dec81, _dec82, _dec83, _dec84, _dec85, _dec86, _dec87, _dec88, _dec89, _dec90, _dec91, _dec92, _dec93, _dec94, _dec95, _dec96, _dec97, _dec98, _dec99, _dec100, _dec101, _dec102, _dec103, _dec104, _dec105, _dec106, _dec107, _dec108, _dec109, _dec110, _dec111, _dec112, _dec113, _dec114, _dec115, _dec116, _dec117, _dec118, _dec119, _dec120, _dec121, _dec122, _dec123, _dec124, _dec125, _dec126, _dec127, _dec128, _dec129, _dec130, _dec131, _dec132, _dec133, _dec134, _dec135, _dec136, _dec137, _dec138, _dec139, _dec140, _dec141, _dec142, _dec143, _dec144, _dec145, _dec146, _dec147, _dec148, _dec149, _dec150, _dec151, _dec152, _dec153, _dec154, _dec155, _dec156, _dec157, _dec158, _dec159, _dec160, _dec161, _dec162, _dec163, _dec164, _dec165, _dec166, _dec167, _dec168, _dec169, _dec170, _dec171, _dec172, _dec173, _dec174, _dec175, _dec176, _dec177, _dec178, _dec179, _dec180, _dec181, _dec182, _dec183, _dec184, _dec185, _dec186, _dec187, _dec188, _dec189, _dec190, _dec191, _dec192, _dec193, _dec194, _dec195, _dec196, _dec197, _dec198, _dec199, _dec200, _dec201, _dec202, _dec203, _dec204, _dec205, _dec206, _dec207, _dec208, _dec209, _dec210, _dec211, _dec212, _dec213, _dec214, _dec215, _dec216, _dec217, _dec218, _dec219, _dec220, _dec221, _dec222, _dec223, _dec224, _dec225, _dec226, _dec227, _dec228, _dec229, _dec230, _dec231, _dec232, _dec233, _dec234, _dec235, _dec236, _dec237, _dec238, _dec239, _dec240, _dec241, _dec242, _dec243, _dec244, _dec245, _dec246, _dec247, _dec248, _dec249, _dec250, _dec251, _dec252, _dec253, _dec254, _dec255, _dec256, _dec257, _dec258, _dec259, _dec260, _dec261, _dec262, _dec263, _dec264, _dec265, _dec266, _dec267, _dec268, _dec269, _dec270, _dec271, _dec272, _dec273, _dec274, _dec275, _dec276, _dec277, _dec278, _dec279, _dec280, _dec281, _dec282, _dec283, _dec284, _dec285, _dec286, _dec287, _dec288, _dec289, _dec290, _dec291, _dec292, _dec293, _dec294, _dec295, _dec296, _dec297, _dec298, _dec299, _dec300, _dec301, _dec302, _dec303, _dec304, _dec305, _dec306, _dec307, _dec308, _dec309, _dec310, _dec311, _dec312, _dec313, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _descriptor25, _descriptor26, _descriptor27, _descriptor28, _descriptor29, _descriptor30, _descriptor31, _descriptor32, _descriptor33, _descriptor34, _descriptor35, _descriptor36, _descriptor37, _descriptor38, _descriptor39, _descriptor40, _descriptor41, _descriptor42, _descriptor43, _descriptor44, _descriptor45, _descriptor46, _descriptor47, _descriptor48, _descriptor49, _descriptor50, _descriptor51, _descriptor52, _descriptor53, _descriptor54, _descriptor55, _descriptor56, _descriptor57, _descriptor58, _descriptor59, _descriptor60, _descriptor61, _descriptor62, _descriptor63, _descriptor64, _descriptor65, _descriptor66, _descriptor67, _descriptor68, _descriptor69, _descriptor70, _descriptor71, _descriptor72, _descriptor73, _descriptor74, _descriptor75, _descriptor76, _descriptor77, _descriptor78, _descriptor79, _descriptor80, _descriptor81, _descriptor82, _descriptor83, _descriptor84, _descriptor85, _descriptor86, _descriptor87, _descriptor88, _descriptor89, _descriptor90, _descriptor91, _descriptor92, _descriptor93, _descriptor94, _descriptor95, _descriptor96, _descriptor97, _descriptor98, _descriptor99, _descriptor100, _descriptor101, _descriptor102, _descriptor103, _descriptor104, _descriptor105, _descriptor106, _descriptor107, _descriptor108, _descriptor109, _descriptor110, _descriptor111, _descriptor112, _descriptor113, _descriptor114, _descriptor115, _descriptor116, _descriptor117, _descriptor118, _descriptor119, _descriptor120, _descriptor121, _descriptor122, _descriptor123, _descriptor124, _descriptor125, _descriptor126, _descriptor127, _descriptor128, _descriptor129, _descriptor130, _descriptor131, _descriptor132, _descriptor133, _descriptor134, _descriptor135, _descriptor136, _descriptor137, _descriptor138, _descriptor139, _descriptor140, _descriptor141, _descriptor142, _descriptor143, _descriptor144, _descriptor145, _descriptor146, _descriptor147, _descriptor148, _descriptor149, _descriptor150, _descriptor151, _descriptor152, _descriptor153, _descriptor154, _descriptor155, _descriptor156, _descriptor157, _descriptor158, _descriptor159, _descriptor160, _descriptor161, _descriptor162, _descriptor163, _descriptor164, _descriptor165, _descriptor166, _descriptor167, _descriptor168, _descriptor169, _descriptor170, _descriptor171, _descriptor172, _descriptor173, _descriptor174, _descriptor175, _descriptor176, _descriptor177, _descriptor178, _descriptor179, _descriptor180, _descriptor181, _descriptor182, _descriptor183, _descriptor184, _descriptor185, _descriptor186, _descriptor187, _descriptor188, _descriptor189, _descriptor190, _descriptor191, _descriptor192, _descriptor193, _descriptor194, _descriptor195, _descriptor196, _descriptor197, _descriptor198, _descriptor199, _descriptor200, _descriptor201, _descriptor202, _descriptor203, _descriptor204, _descriptor205, _descriptor206, _descriptor207, _descriptor208, _descriptor209, _descriptor210, _descriptor211, _descriptor212, _descriptor213, _descriptor214, _descriptor215, _descriptor216, _descriptor217, _descriptor218, _descriptor219, _descriptor220, _descriptor221, _descriptor222, _descriptor223, _descriptor224, _descriptor225, _descriptor226, _descriptor227, _descriptor228, _descriptor229, _descriptor230, _descriptor231, _descriptor232, _descriptor233, _descriptor234, _descriptor235, _descriptor236, _descriptor237, _descriptor238, _descriptor239, _descriptor240, _descriptor241, _descriptor242, _descriptor243, _descriptor244, _descriptor245, _descriptor246, _descriptor247, _descriptor248, _descriptor249, _descriptor250, _descriptor251, _descriptor252, _descriptor253, _descriptor254, _descriptor255, _descriptor256, _descriptor257, _descriptor258, _descriptor259, _descriptor260, _descriptor261, _descriptor262, _descriptor263, _descriptor264, _descriptor265, _descriptor266, _descriptor267, _descriptor268, _descriptor269, _descriptor270, _descriptor271, _descriptor272, _descriptor273, _descriptor274, _descriptor275, _descriptor276, _descriptor277, _descriptor278, _descriptor279, _descriptor280, _descriptor281, _descriptor282, _descriptor283, _descriptor284, _descriptor285, _descriptor286, _descriptor287, _descriptor288, _descriptor289, _descriptor290, _descriptor291, _descriptor292, _descriptor293, _descriptor294, _descriptor295, _descriptor296, _descriptor297, _descriptor298, _descriptor299, _descriptor300, _descriptor301, _descriptor302, _descriptor303, _descriptor304, _descriptor305, _descriptor306, _descriptor307, _descriptor308, _descriptor309, _descriptor310, _descriptor311, _descriptor312;
      cclegacy._RF.push({}, "26488vO7KFF5Lw7SoJ4GKI8", "PopupCashout", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;

      // const {ccclass, property} = cc._decorator;
      // var TW = cc.tween
      var PopupCashout = exports('default', (_dec = ccclass('PopupCashout'), _dec2 = property(Node), _dec3 = property(Node), _dec4 = property([Node]), _dec5 = property(Node), _dec6 = property([Toggle]), _dec7 = property(Node), _dec8 = property(Node), _dec9 = property(Node), _dec10 = property(Node), _dec11 = property(Node), _dec12 = property(Node), _dec13 = property(Node), _dec14 = property(Node), _dec15 = property(Node), _dec16 = property(Node), _dec17 = property(Label), _dec18 = property(Label), _dec19 = property(EditBox), _dec20 = property(Label), _dec21 = property(Label), _dec22 = property(Toggle), _dec23 = property(EditBox), _dec24 = property(Node), _dec25 = property(Node), _dec26 = property(Node), _dec27 = property(Node), _dec28 = property(Node), _dec29 = property(Node), _dec30 = property(Label), _dec31 = property(Label), _dec32 = property(Label), _dec33 = property(Node), _dec34 = property(Node), _dec35 = property(Label), _dec36 = property(Toggle), _dec37 = property(EditBox), _dec38 = property(EditBox), _dec39 = property(EditBox), _dec40 = property(Label), _dec41 = property(Label), _dec42 = property(Label), _dec43 = property(Label), _dec44 = property(Label), _dec45 = property(Node), _dec46 = property(EditBox), _dec47 = property(Toggle), _dec48 = property(Label), _dec49 = property(Label), _dec50 = property(Node), _dec51 = property(Node), _dec52 = property(Node), _dec53 = property(Label), _dec54 = property(Label), _dec55 = property(Label), _dec56 = property(Node), _dec57 = property(Node), _dec58 = property(Label), _dec59 = property(Toggle), _dec60 = property(EditBox), _dec61 = property(EditBox), _dec62 = property(EditBox), _dec63 = property(Label), _dec64 = property(Label), _dec65 = property(Label), _dec66 = property(Label), _dec67 = property(Label), _dec68 = property(Node), _dec69 = property(EditBox), _dec70 = property(Toggle), _dec71 = property(Label), _dec72 = property(Label), _dec73 = property(Node), _dec74 = property(Node), _dec75 = property(Node), _dec76 = property(Label), _dec77 = property(Label), _dec78 = property(Label), _dec79 = property(Label), _dec80 = property(Label), _dec81 = property(Label), _dec82 = property(EditBox), _dec83 = property(EditBox), _dec84 = property(Label), _dec85 = property(Label), _dec86 = property(Label), _dec87 = property(Node), _dec88 = property(Toggle), _dec89 = property(Label), _dec90 = property(Label), _dec91 = property([Toggle]), _dec92 = property(Node), _dec93 = property(Node), _dec94 = property(Node), _dec95 = property(Node), _dec96 = property([Toggle]), _dec97 = property([Node]), _dec98 = property([Node]), _dec99 = property([Node]), _dec100 = property([Node]), _dec101 = property(Label), _dec102 = property(Label), _dec103 = property(Label), _dec104 = property(EditBox), _dec105 = property(EditBox), _dec106 = property(Label), _dec107 = property(Label), _dec108 = property(Label), _dec109 = property(EditBox), _dec110 = property(Toggle), _dec111 = property(Label), _dec112 = property(Label), _dec113 = property(Node), _dec114 = property(Node), _dec115 = property(Node), _dec116 = property(Node), _dec117 = property([Toggle]), _dec118 = property([Node]), _dec119 = property([Node]), _dec120 = property([Node]), _dec121 = property([Node]), _dec122 = property(Label), _dec123 = property(Label), _dec124 = property(EditBox), _dec125 = property(EditBox), _dec126 = property(Label), _dec127 = property(Label), _dec128 = property(Label), _dec129 = property(EditBox), _dec130 = property(Toggle), _dec131 = property(Label), _dec132 = property(Label), _dec133 = property(Node), _dec134 = property(Sprite), _dec135 = property(Node), _dec136 = property(Node), _dec137 = property(Node), _dec138 = property(Node), _dec139 = property(Node), _dec140 = property(Node), _dec141 = property(Node), _dec142 = property(Node), _dec143 = property(Node), _dec144 = property(Node), _dec145 = property(Node), _dec146 = property(Node), _dec147 = property(Node), _dec148 = property(Node), _dec149 = property(Label), _dec150 = property(Label), _dec151 = property(Label), _dec152 = property(Label), _dec153 = property(Label), _dec154 = property(Label), _dec155 = property(Label), _dec156 = property([Toggle]), _dec157 = property([Node]), _dec158 = property([Node]), _dec159 = property([Node]), _dec160 = property([Node]), _dec161 = property([Toggle]), _dec162 = property([Node]), _dec163 = property([Node]), _dec164 = property([Node]), _dec165 = property([Node]), _dec166 = property(Node), _dec167 = property(Node), _dec168 = property(Node), _dec169 = property(Node), _dec170 = property(Node), _dec171 = property(Node), _dec172 = property(Label), _dec173 = property(Label), _dec174 = property(Label), _dec175 = property(EditBox), _dec176 = property(EditBox), _dec177 = property(Node), _dec178 = property(RichText), _dec179 = property(Node), _dec180 = property(Node), _dec181 = property(Label), _dec182 = property(Label), _dec183 = property(Label), _dec184 = property(Label), _dec185 = property(Label), _dec186 = property(Label), _dec187 = property(EditBox), _dec188 = property(Sprite), _dec189 = property(Node), _dec190 = property(Node), _dec191 = property(Label), _dec192 = property(Label), _dec193 = property(Label), _dec194 = property(Label), _dec195 = property(Label), _dec196 = property(Sprite), _dec197 = property(EditBox), _dec198 = property(Node), _dec199 = property(Node), _dec200 = property(Label), _dec201 = property(Label), _dec202 = property(Label), _dec203 = property(Label), _dec204 = property(Label), _dec205 = property(EditBox), _dec206 = property(Label), _dec207 = property(EditBox), _dec208 = property(Label), _dec209 = property(EditBox), _dec210 = property(Label), _dec211 = property(EditBox), _dec212 = property(Node), _dec213 = property(Node), _dec214 = property(Node), _dec215 = property(Node), _dec216 = property(EditBox), _dec217 = property(EditBox), _dec218 = property(EditBox), _dec219 = property(EditBox), _dec220 = property(Label), _dec221 = property(Label), _dec222 = property(Label), _dec223 = property(Label), _dec224 = property(Label), _dec225 = property(Node), _dec226 = property(Toggle), _dec227 = property(Label), _dec228 = property(EditBox), _dec229 = property([Toggle]), _dec230 = property([Node]), _dec231 = property([Node]), _dec232 = property([Node]), _dec233 = property([Node]), _dec234 = property(Node), _dec235 = property(Label), _dec236 = property(Node), _dec237 = property(Node), _dec238 = property(Node), _dec239 = property([Toggle]), _dec240 = property([Node]), _dec241 = property([Node]), _dec242 = property(EditBox), _dec243 = property(Node), _dec244 = property(Node), _dec245 = property(Node), _dec246 = property(Label), _dec247 = property(Label), _dec248 = property(Label), _dec249 = property(Node), _dec250 = property(EditBox), _dec251 = property(Node), _dec252 = property(Label), _dec253 = property(Label), _dec254 = property(Label), _dec255 = property(Node), _dec256 = property(Node), _dec257 = property(Label), _dec258 = property(Label), _dec259 = property(Label), _dec260 = property(Label), _dec261 = property(Label), _dec262 = property(Sprite), _dec263 = property(Label), _dec264 = property([Toggle]), _dec265 = property([Node]), _dec266 = property([Node]), _dec267 = property([Node]), _dec268 = property([Toggle]), _dec269 = property([Node]), _dec270 = property([Node]), _dec271 = property([Node]), _dec272 = property(Label), _dec273 = property(Label), _dec274 = property(Label), _dec275 = property(Label), _dec276 = property(Label), _dec277 = property(Node), _dec278 = property(Node), _dec279 = property(Label), _dec280 = property(Label), _dec281 = property(Label), _dec282 = property(Node), _dec283 = property(Label), _dec284 = property(Label), _dec285 = property(Node), _dec286 = property(Label), _dec287 = property(Label), _dec288 = property(Label), _dec289 = property(Label), _dec290 = property(Node), _dec291 = property(Label), _dec292 = property(Label), _dec293 = property(Node), _dec294 = property(Label), _dec295 = property([Toggle]), _dec296 = property([Node]), _dec297 = property([Node]), _dec298 = property(Node), _dec299 = property(Node), _dec300 = property(Node), _dec301 = property(Node), _dec302 = property(Label), _dec303 = property(EditBox), _dec304 = property(Label), _dec305 = property(Node), _dec306 = property(Node), _dec307 = property(Node), _dec308 = property(Label), _dec309 = property(EditBox), _dec310 = property(Label), _dec311 = property(Label), _dec312 = property(Label), _dec313 = property(Label), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(PopupCashout, _Component);
        function PopupCashout() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "bg", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "container", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabContents", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "toggleGroup", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabToggleMain", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerMenuCardWithdraw", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerStep1CardWithdraw", _descriptor7, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerStep2CardWithdraw", _descriptor8, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerStep3CardWithdraw", _descriptor9, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCardTableList", _descriptor10, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCardTableItem", _descriptor11, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCardDropList", _descriptor12, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCardDropListItem", _descriptor13, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCardDropListCost", _descriptor14, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCardDropListCostItem", _descriptor15, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCardDetailLabel", _descriptor16, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCardCostLabel", _descriptor17, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEdbQualityContent", _descriptor18, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCardTotalLabel", _descriptor19, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCardOTPOptionLabel", _descriptor20, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCardOTPOptionToggle", _descriptor21, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCardEdbOTP", _descriptor22, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCardListStep3", _descriptor23, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCardListStep3Item", _descriptor24, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCardContainerOTPStep2", _descriptor25, _assertThisInitialized(_this));
          _this.selectedProductID = "";
          _this.selectedPromotion = 0;
          //Withdraw VN
          _initializerDefineProperty(_this, "containerStep1BankVNWithdraw", _descriptor26, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerStep2BankVNWithdraw", _descriptor27, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerStep3BankVNWithdraw", _descriptor28, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankVNBalance", _descriptor29, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankVNValuePlaceholder", _descriptor30, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankVNBalanceToday", _descriptor31, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankVNListItems", _descriptor32, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankVNListItemTemplate", _descriptor33, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankVNSelectedBankLabel", _descriptor34, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankVNSelectedBankToggle", _descriptor35, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankVNEdbValue", _descriptor36, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankVNEdbNumberBank", _descriptor37, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankVNEdbAccountBank", _descriptor38, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankVNStep2BankName", _descriptor39, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankVNStep2BankAccount", _descriptor40, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankVNStep2BankNumber", _descriptor41, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankVNStep2BankAmout", _descriptor42, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankVNStep2BankValue", _descriptor43, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankVNStep2OTPContainer", _descriptor44, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankVNEdbStep2OTP", _descriptor45, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankVNOTPOptionToggle", _descriptor46, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankVNOTPOptionLabel", _descriptor47, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankVNStep3TransactionIDLabel", _descriptor48, _assertThisInitialized(_this));
          //Withdraw bank THAI
          _initializerDefineProperty(_this, "containerStep1BankTHAIWithdraw", _descriptor49, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerStep2BankTHAIWithdraw", _descriptor50, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerStep3BankTHAIWithdraw", _descriptor51, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankThaiLandBalance", _descriptor52, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankThaiLandValuePlaceholder", _descriptor53, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankThaiLandBalanceToday", _descriptor54, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankThaiLandListItems", _descriptor55, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankThaiLandListItemTemplate", _descriptor56, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankThaiLandSelectedBankLabel", _descriptor57, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankThaiLandSelectedBankToggle", _descriptor58, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankThaiLandEdbValue", _descriptor59, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankThaiLandEdbNumberBank", _descriptor60, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankThaiLandEdbAccountBank", _descriptor61, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankThaiLandStep2BankName", _descriptor62, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankThaiLandStep2BankAccount", _descriptor63, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankThaiLandStep2BankNumber", _descriptor64, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankThaiLandStep2BankAmout", _descriptor65, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankThaiLandStep2BankValue", _descriptor66, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankThaiLandStep2OTPContainer", _descriptor67, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankThaiLandEdbStep2OTP", _descriptor68, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankThaiLandOTPOptionToggle", _descriptor69, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankThaiLandOTPOptionLabel", _descriptor70, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawBankThaiLandStep3TransactionIDLabel", _descriptor71, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerStep1CryptoWithdraw", _descriptor72, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerStep2CryptoWithdraw", _descriptor73, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerStep3CryptoWithdraw", _descriptor74, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCryptoStep1LabelCrypto", _descriptor75, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCryptoStep2LabelCrypto", _descriptor76, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCryptoStep3LabelCrypto", _descriptor77, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCryptoStep1PlaceholderWalletNumber", _descriptor78, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCryptoStep1PlaceholderAmount", _descriptor79, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCryptoStep1LabelToday", _descriptor80, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCryptoStep1EdbWalletNumber", _descriptor81, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCryptoStep1EdbAmount", _descriptor82, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCryptoStep2ValueAddress", _descriptor83, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCryptoStep2ValueAmount", _descriptor84, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCryptoStep2ValueAmount2", _descriptor85, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCryptoStep2OTPContainer", _descriptor86, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCryptoOTPOptionToggle", _descriptor87, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCryptoOTPOptionLabel", _descriptor88, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawCryptoStep3TransactionIDLabel", _descriptor89, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabToggle", _descriptor90, _assertThisInitialized(_this));
          // --- EWallet Withdraw ---
          _initializerDefineProperty(_this, "containerStep1EWalletWithdraw", _descriptor91, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerStep2EWalletWithdraw", _descriptor92, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerStep3EWalletWithdraw", _descriptor93, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "eWalletCotainer", _descriptor94, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabToggleEWallet", _descriptor95, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteActiveEWallet", _descriptor96, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteNotActiveEWallet", _descriptor97, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteLgEWallet", _descriptor98, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteLabelEWallet", _descriptor99, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEWalletAddressPlaceholder", _descriptor100, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEWalletValuePlaceholder", _descriptor101, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEWalletBalanceToday", _descriptor102, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEWalletStep1EdbAddress", _descriptor103, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEWalletStep1EdbAmount", _descriptor104, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEWalletStep2Address", _descriptor105, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEWalletStep2Amount", _descriptor106, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEWalletStep2Amount2", _descriptor107, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEWalletEdbStep2OTP", _descriptor108, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEWalletOTPOptionToggle", _descriptor109, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEWalletOTPOptionLabel", _descriptor110, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEWalletStep3TransactionIDLabel", _descriptor111, _assertThisInitialized(_this));
          // --- EWalletVN ---
          _initializerDefineProperty(_this, "containerStep1EWalletVNWithdraw", _descriptor112, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerStep2EWalletVNWithdraw", _descriptor113, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerStep3EWalletVNWithdraw", _descriptor114, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "eWalletCotainerVN", _descriptor115, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabToggleEWalletVN", _descriptor116, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteActiveEWalletVN", _descriptor117, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteNotActiveEWalletVN", _descriptor118, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteLgEWalletVN", _descriptor119, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteLabelEWalletVN", _descriptor120, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEWalletVNValuePlaceholder", _descriptor121, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEWalletVNBalanceToday", _descriptor122, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEWalletVNStep1EdbAddress", _descriptor123, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEWalletVNStep1EdbAmount", _descriptor124, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEWalletVNStep2Address", _descriptor125, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEWalletVNStep2Amount", _descriptor126, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEWalletVNStep2Amount2", _descriptor127, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEWalletVNEdbStep2OTP", _descriptor128, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEWalletVNOTPOptionToggle", _descriptor129, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEWalletVNOTPOptionLabel", _descriptor130, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withdrawEWalletVNStep3TransactionIDLabel", _descriptor131, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerStep2EWalletVNWithdrawOTP", _descriptor132, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withDrawEWalletVNSpriteStep2", _descriptor133, _assertThisInitialized(_this));
          _this.withdrawBankVNSelectedBankCode = "";
          _this.productIDAndAmountMap = [];
          _this.withdrawBankVNMinToday = 0;
          _this.withdrawBankVNMaxToday = 0;
          _this.withdrawBankVNBalanceTodayValue = 0;
          _this.withdrawCryptoSelected = "";
          _this.withdrawCryptoSelectedWalletType = -1;
          _this.withdrawCryptoMinToday = 0;
          _this.withdrawCryptoMaxToday = 0;
          _this.withdrawCryptoRate = 0;
          _this.withdrawCryptoBalanceTodayValue = 0;
          _this.withdrawEWalletTypeSelected = -1;
          _this.withdrawEWalletMinToday = 0;
          _this.withdrawEWalletMaxToday = 0;
          _this.withdrawEWalletBalanceTodayValue = 0;
          _this.withdrawEWalletVNMinToday = 0;
          _this.withdrawEWalletVNMaxToday = 0;
          _this.withdrawEWalletVNBalanceTodayValue = 0;
          _this.withdrawBankThaiLandSelectedBankCode = "";
          _this.withdrawBankThaiLandMinToday = 0;
          _this.withdrawBankThaiLandMaxToday = 0;
          _this.withdrawBankThaiLandBalanceTodayValue = 0;
          // Deposit
          _initializerDefineProperty(_this, "containerMenuDeposit", _descriptor134, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerDepositWithCard", _descriptor135, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerDepositWithBank", _descriptor136, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerDepositWithWalletWorld", _descriptor137, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerDepositWithWalletVN", _descriptor138, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerDepositWithCryptoUSDT", _descriptor139, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerDepositWithCryptoUSDC", _descriptor140, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerDepositWithCryptoBUST", _descriptor141, _assertThisInitialized(_this));
          // Withdraw
          _initializerDefineProperty(_this, "containerWithDrawWithCard", _descriptor142, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerWithDrawWithBank", _descriptor143, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerWithDrawWithWalletWorld", _descriptor144, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerWithDrawWithWalletVN", _descriptor145, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerWithDrawWithCrypto", _descriptor146, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerWithDrawWithBankThaiLand", _descriptor147, _assertThisInitialized(_this));
          // Deposit Label
          _initializerDefineProperty(_this, "labelNumberBank", _descriptor148, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "labelContentBank", _descriptor149, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "labelNumberWalletWorld", _descriptor150, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "labelNumberWalletVN", _descriptor151, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "labelCodeCrypto", _descriptor152, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "labelCodeCryptoBUST", _descriptor153, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "labelCodeCryptoUSDC", _descriptor154, _assertThisInitialized(_this));
          // Deposit wallet world
          _initializerDefineProperty(_this, "tabToggleEWalletDepositWorld", _descriptor155, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteActiveEWalletDepositWorld", _descriptor156, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteNotActiveEWalletDepositWorld", _descriptor157, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteLgEWalletDepositWorld", _descriptor158, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteLabelEWalletDepositWorld", _descriptor159, _assertThisInitialized(_this));
          // Deposit wallet VN
          _initializerDefineProperty(_this, "tabToggleEWalletDepositVN", _descriptor160, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteActiveEWalletDepositVN", _descriptor161, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteNotActiveEWalletDepositVN", _descriptor162, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteLabelEWalletDepositVN", _descriptor163, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteLgEWalletDepositVN", _descriptor164, _assertThisInitialized(_this));
          // Deposit Card
          _initializerDefineProperty(_this, "depositCardTableList", _descriptor165, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositCardTableItem", _descriptor166, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositCardDropList", _descriptor167, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositCardDropListItem", _descriptor168, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositCardDropListCost", _descriptor169, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositCardDropListCostItem", _descriptor170, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositCardTelcoNameLabel", _descriptor171, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositCardTypeLabel", _descriptor172, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositCardCostLabel", _descriptor173, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositCardEdbSeri", _descriptor174, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositCardEdbCode", _descriptor175, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositCardNotifiConfirm", _descriptor176, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositCardNotifiConfirmLabel", _descriptor177, _assertThisInitialized(_this));
          // Deposit Bank VN
          _initializerDefineProperty(_this, "depositBankVNStep1", _descriptor178, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositBankVNStep2", _descriptor179, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositBankVNWalletNameLabel", _descriptor180, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositBankVNWalletNumberLabel", _descriptor181, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositBankVNWalletAccountLabel", _descriptor182, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositBankVNAmountLabel", _descriptor183, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositBankVNCode", _descriptor184, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositBankVNTime", _descriptor185, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbDepositBankVNAmount", _descriptor186, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositBankVNQR", _descriptor187, _assertThisInitialized(_this));
          _this.depositBankVNCountdownFunc = void 0;
          _this.depositBankVNAmount = 0;
          // Deposit EWallet
          _this.walletType = {
            1: "VN",
            // momo
            3: "VN",
            // zalo
            4: "VN",
            // ViettelPay
            5: "USDT",
            6: "VN",
            // VNPTPay
            7: "VN",
            // MobifoneMoney
            8: "BUST",
            9: "USDC",
            10: "World",
            // Paypal
            12: "World",
            // PerfectMoney
            13: "World",
            //WebMoney
            14: "World" // Payeer
          };

          _this.depositEWalletWalletType = void 0;
          // EWalletVN
          _initializerDefineProperty(_this, "depositEWalletVNStep1", _descriptor188, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositEWalletVNStep2", _descriptor189, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositEWalletVNWalletNumberLabel", _descriptor190, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositEWalletVNWalletAccountLabel", _descriptor191, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositEWalletVNAmount", _descriptor192, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositEWalletVNCode", _descriptor193, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositEWalletVNTime", _descriptor194, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositEWalletVNQR", _descriptor195, _assertThisInitialized(_this));
          _this.depositEWalletVNCountdownFunc = void 0;
          _initializerDefineProperty(_this, "edbDepositEWalletVNAmount", _descriptor196, _assertThisInitialized(_this));
          // EWallet World
          _initializerDefineProperty(_this, "depositEWalletWorldStep1", _descriptor197, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositEWalletWorldStep2", _descriptor198, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositEWalletWorldWalletNumberLabel", _descriptor199, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositEWalletWorldWalletAccountLabel", _descriptor200, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositEWalletWorldAmount", _descriptor201, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositEWalletWorldCode", _descriptor202, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositEWalletWorldTime", _descriptor203, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbDepositEWalletWorldAmount", _descriptor204, _assertThisInitialized(_this));
          // Coin
          _initializerDefineProperty(_this, "depositCoinUSDTWalletAddressLabel", _descriptor205, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositCoinUSDTEdbAmount", _descriptor206, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositCoinBUSTWalletAddressLabel", _descriptor207, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositCoinBUSTEdbAmount", _descriptor208, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositCoinUSDCWalletAddressLabel", _descriptor209, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositCoinUSDCEdbAmount", _descriptor210, _assertThisInitialized(_this));
          _this.depositCoinWalletType = void 0;
          // Transfer
          _initializerDefineProperty(_this, "step1ContainerTransfer", _descriptor211, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "step2ContainerTransfer", _descriptor212, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "step3ContainerTransfer", _descriptor213, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "stepSuccessContainerTransfer", _descriptor214, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "editBoxUserNameTransfer", _descriptor215, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "editBoxUserNameAgainTransfer", _descriptor216, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "editBoxReasonTransfer", _descriptor217, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "editBoxCoinTransfer", _descriptor218, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "textCoinTransferReceive", _descriptor219, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "textCoinTransferExist", _descriptor220, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "textCoinTransferReceiveStep3", _descriptor221, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "textUserNameStep3", _descriptor222, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "textCoinTransferExistStep3", _descriptor223, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "step3OTPContainer", _descriptor224, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "step3OTPToggle", _descriptor225, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "step3OTPTypeLabel", _descriptor226, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "step3OTPEdb", _descriptor227, _assertThisInitialized(_this));
          // Withdraw wallet world
          _initializerDefineProperty(_this, "tabToggleEWalletWithdrawWorld", _descriptor228, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteActiveEWalletWithdrawWorld", _descriptor229, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteNotActiveEWalletWithdrawWorld", _descriptor230, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteLgEWalletWithdrawWorld", _descriptor231, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteLabelEWalletWithdrawWorld", _descriptor232, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "withDrawEwalletWorldOTPContainerStep2", _descriptor233, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblTextAddressWithdrawEWalletWorld", _descriptor234, _assertThisInitialized(_this));
          // Cash QR
          _initializerDefineProperty(_this, "containerCashQR", _descriptor235, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "step1ContainerCashQR", _descriptor236, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "step2ContainerCashQR", _descriptor237, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabCashQR", _descriptor238, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteActiveTabCashQR", _descriptor239, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteNotActiveTabCashQR", _descriptor240, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbDepositCashQR", _descriptor241, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerCashQREWalletVN", _descriptor242, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerCashQREWalletWorld", _descriptor243, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "placeHolderEdbAmount", _descriptor244, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblTextUserNameCashQR", _descriptor245, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblTimeWhenNotQR", _descriptor246, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblTimeNoteWhenNotQR", _descriptor247, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "step1ContainerCashQRUSD", _descriptor248, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbDepositCashQRUSD", _descriptor249, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "placeHolderEdbAmountUSD", _descriptor250, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblTextUserNameCashQRUSD", _descriptor251, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblTextNotifiStep1", _descriptor252, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblTextNotifiStep1USD", _descriptor253, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerQRCodeSprite", _descriptor254, _assertThisInitialized(_this));
          // Cash QR Bank
          _initializerDefineProperty(_this, "boxDepositCashQRBankName", _descriptor255, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblDepositCashQRBankName", _descriptor256, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblDepositCashQRNumberSTK", _descriptor257, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblDepositCashQRNameOwner", _descriptor258, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblDepositCashQRAmount", _descriptor259, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblDepositCashQRContent", _descriptor260, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositSpriteCashQR", _descriptor261, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblDepositCashQRTime", _descriptor262, _assertThisInitialized(_this));
          _this.depositCashQRCountdownFunc = void 0;
          _this.depositCashQRBankWalletType = void 0;
          // Cash QR EWallet VN
          _initializerDefineProperty(_this, "tabToggleEWalletVNCashQR", _descriptor263, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteActiveEWalletVNCashQR", _descriptor264, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteNotActiveEWalletVNCashQR", _descriptor265, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteLabelEWalletVNCashQR", _descriptor266, _assertThisInitialized(_this));
          _this.depositEWalletWalletTypeCashQRVN = void 0;
          // Cash QR EWallet World
          _initializerDefineProperty(_this, "tabToggleEWalletWorldCashQR", _descriptor267, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteActiveEWalletWorldCashQR", _descriptor268, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteNotActiveEWalletWorldCashQR", _descriptor269, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteLabelEWalletWorldCashQR", _descriptor270, _assertThisInitialized(_this));
          _this.depositEWalletWalletTypeCashQRWorld = void 0;
          // Bank VN New
          _initializerDefineProperty(_this, "lblNameBankDeposit", _descriptor271, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblNumberBankDeposit", _descriptor272, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblNameAccountBank", _descriptor273, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblCodeContent", _descriptor274, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblTimeExpired", _descriptor275, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "btnCreateCodeContent", _descriptor276, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "nodeContentCodeBank", _descriptor277, _assertThisInitialized(_this));
          _this.walletCodeDeposit = void 0;
          // EWalletVN New
          _initializerDefineProperty(_this, "lblWalletAccountEWalletVNDeposit", _descriptor278, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblWalletAccountNameEWalletVNDeposit", _descriptor279, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblTimeExpiredEWalletVN", _descriptor280, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "btnCreateCodeContentEWalletVN", _descriptor281, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblContentEWalletVNDeposit", _descriptor282, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "keyWalletAccountEWalletVNDeposit", _descriptor283, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "nodeContentCodeEWalletVN", _descriptor284, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblContentNoteEWalletVN", _descriptor285, _assertThisInitialized(_this));
          _this.lblWalletNameEWalletVNDeposit = void 0;
          _this.lblWalletCodeEWalletVNDeposit = void 0;
          // EWallet World New
          _initializerDefineProperty(_this, "lblWalletAccountEWalletWorldDeposit", _descriptor286, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblWalletAccountNameEWalletWorldDeposit", _descriptor287, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblTimeExpiredEWalletWorld", _descriptor288, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "btnCreateCodeContentEWalletWorld", _descriptor289, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblContentEWalletWorldDeposit", _descriptor290, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "keyWalletAccountEWalletWorldDeposit", _descriptor291, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "nodeContentCodeEWalletWorld", _descriptor292, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblContentNoteEWalletWorld", _descriptor293, _assertThisInitialized(_this));
          _this.lblWalletNameEWalletWorldDeposit = void 0;
          _this.lblWalletCodeEWalletWorldDeposit = void 0;
          // Bank New
          _initializerDefineProperty(_this, "tabBank", _descriptor294, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteActiveTabBank", _descriptor295, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "spriteNotActiveTabBank", _descriptor296, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerBankGianTiep", _descriptor297, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerBankTrucTiep", _descriptor298, _assertThisInitialized(_this));
          // Bank Gián Tiếp
          _initializerDefineProperty(_this, "depositBankDropList", _descriptor299, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositBankDropListItem", _descriptor300, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositBankGianTiepLabel", _descriptor301, _assertThisInitialized(_this));
          _this.selectedBankName = "";
          _this.bankCode = "";
          _this.rate = 1;
          _this.minAmountBank = 0;
          _this.maxAmountBank = 0;
          _this.isDepositDropdownInitialized = false;
          _initializerDefineProperty(_this, "edbAmountBankGianTiep", _descriptor302, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblCoinReceive", _descriptor303, _assertThisInitialized(_this));
          //Bank ThaiLand
          _initializerDefineProperty(_this, "containerBankThaiLand", _descriptor304, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositBankDropListThaiLand", _descriptor305, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositBankDropListItemThaiLand", _descriptor306, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "depositBankGianTiepLabelThaiLand", _descriptor307, _assertThisInitialized(_this));
          _this.selectedBankNameThaiLand = "";
          _this.bankCodeThaiLand = "";
          _this.rateThaiLand = 1;
          _this.minAmountBankThaiLand = 0;
          _this.maxAmountBankThaiLand = 0;
          _this.isDepositDropdownInitializedThaiLand = false;
          _initializerDefineProperty(_this, "edbAmountBankGianTiepThaiLand", _descriptor308, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblCoinReceiveThaiLand", _descriptor309, _assertThisInitialized(_this));
          _this._internalToggleChange = false;
          _this._internalToggleChangeDepositBank = false;
          // private _internalToggleChangeDepositWorld = false;
          _this._internalToggleChangeDepositEWalletVN = false;
          _this._internalToggleChangeDepositCashQR = false;
          _this._internalToggleChangeDepositCashQREWalletVN = false;
          _this._internalToggleChangeDepositCashQREWalletWorld = false;
          _this._internalToggleChangeWithdrawEWalletWorld = false;
          _this._internalToggleChangeWithdrawEWalletVN = false;
          _initializerDefineProperty(_this, "lblToastDepositCard", _descriptor310, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblToastDepositBankGianTiep", _descriptor311, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblToastDepositBankGianTiepThaiLand", _descriptor312, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = PopupCashout.prototype;
        _proto.onLoad = function onLoad() {
          var _this2 = this;
          this.editBoxCoinTransfer.node.on('editing-did-ended', this.formatNumber, this);

          // this.edbAmountBankGianTiep.node.on('editing-did-ended', this.formatNumberBank, this);
          this.edbAmountBankGianTiep.node.on('text-changed', this.formatNumberBank, this);

          // this.edbAmountBankGianTiepThaiLand.node.on('editing-did-ended', this.formatNumberBankThaiLand, this);
          this.edbAmountBankGianTiepThaiLand.node.on('text-changed', this.formatNumberBankThaiLand, this);
          this.edbDepositCashQR.node.on('editing-did-began', function () {
            if (_this2.placeHolderEdbAmount) {
              _this2.placeHolderEdbAmount.active = false;
            }
          });
          this.edbDepositCashQR.node.on('editing-did-ended', function () {
            if (_this2.placeHolderEdbAmount) {
              _this2.placeHolderEdbAmount.active = _this2.edbDepositCashQR.string.trim() === '';
            }
          });
          this.edbDepositCashQR.node.on('editing-did-ended', this.formatNumberInput, this);
          this.edbDepositCashQRUSD.node.on('editing-did-began', function () {
            if (_this2.placeHolderEdbAmountUSD) {
              _this2.placeHolderEdbAmountUSD.active = false;
            }
          });
          this.edbDepositCashQRUSD.node.on('editing-did-ended', function () {
            if (_this2.placeHolderEdbAmountUSD) {
              _this2.placeHolderEdbAmountUSD.active = _this2.edbDepositCashQRUSD.string.trim() === '';
            }
          });
          this.edbDepositCashQRUSD.node.on('editing-did-ended', this.formatNumberInputUSD, this);
        };
        _proto.start = function start() {
          this.textCoinTransferExist.string = Configs.Login.GoldBalance.toLocaleString("vi-VN");
        };
        _proto.formatNumberInput = function formatNumberInput() {
          var inputText = this.edbDepositCashQR.string.trim();
          var cleaned = inputText.replace(/[^0-9]/g, '');
          var number = parseInt(cleaned, 10);
          if (!isNaN(number)) {
            this.edbDepositCashQR.string = number.toLocaleString('vi-VN');
          } else {
            this.edbDepositCashQR.string = '';
          }
        };
        _proto.formatNumberInputUSD = function formatNumberInputUSD() {
          var inputText = this.edbDepositCashQRUSD.string.trim();
          var cleaned = inputText.replace(/[^0-9]/g, '');
          var number = parseInt(cleaned, 10);
          if (!isNaN(number)) {
            this.edbDepositCashQRUSD.string = number.toLocaleString('vi-VN');
          } else {
            this.edbDepositCashQRUSD.string = '';
          }
        };
        _proto.formatNumber = function formatNumber() {
          var inputText = this.editBoxCoinTransfer.string.trim();
          var cleanedText = inputText.replace(/[^0-9]/g, '');
          var numberValue = parseInt(cleanedText, 10);
          if (!isNaN(numberValue)) {
            this.editBoxCoinTransfer.string = numberValue.toString();
            var receivedValue = Math.floor(numberValue * 0.9604);
            this.textCoinTransferReceive.string = receivedValue.toLocaleString("vi-VN");
          } else {
            this.editBoxCoinTransfer.string = "0";
            this.textCoinTransferReceive.string = "0";
          }
        };
        _proto.formatNumberBank = function formatNumberBank() {
          var inputText = this.edbAmountBankGianTiep.string.trim();
          var cleanedText = inputText.replace(/[^0-9]/g, '');
          var numberValue = parseInt(cleanedText, 10);
          if (!isNaN(numberValue)) {
            this.edbAmountBankGianTiep.string = Utils.formatNumber(numberValue);
            var receivedValue = Math.floor(numberValue * this.rate);
            this.lblCoinReceive.string = Utils.formatNumber(receivedValue);
          } else {
            this.edbAmountBankGianTiep.string = "";
            this.lblCoinReceive.string = "0";
          }
        };
        _proto.formatNumberBankThaiLand = function formatNumberBankThaiLand() {
          var inputText = this.edbAmountBankGianTiepThaiLand.string.trim();
          var cleanedText = inputText.replace(/[^0-9]/g, '');
          var numberValue = parseInt(cleanedText, 10);
          if (!isNaN(numberValue)) {
            this.edbAmountBankGianTiepThaiLand.string = Utils.formatNumber(numberValue);
            var receivedValue = Math.floor(numberValue * this.rateThaiLand);
            this.lblCoinReceiveThaiLand.string = Utils.formatNumber(receivedValue);
          } else {
            this.edbAmountBankGianTiepThaiLand.string = "";
            this.lblCoinReceiveThaiLand.string = "0";
          }
        };
        _proto.actContinueTransfer = function actContinueTransfer() {
          var _this3 = this;
          if (this.editBoxUserNameTransfer.string.trim() === "" || this.editBoxUserNameAgainTransfer.string.trim() === "") {
            App.instance.alertDialog.showMsg(App.instance.getTextLang("txt_please_enter_full_recipient_name"));
            return;
          }
          if (this.editBoxUserNameTransfer.string.trim() !== this.editBoxUserNameAgainTransfer.string.trim()) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang("txt_recipient_name_mismatch"));
            return;
          }
          if (this.editBoxCoinTransfer.string.trim() === "0" || this.editBoxCoinTransfer.string.trim() === "") {
            App.instance.alertDialog.showMsg(App.instance.getTextLang("txt_please_enter_transfer_amount"));
            return;
          }
          var amountValue = parseInt(this.editBoxCoinTransfer.string);
          var data = {
            CurrencyID: 1,
            Username: this.editBoxUserNameTransfer.string.trim(),
            Amount: amountValue,
            Reason: this.editBoxReasonTransfer.string.trim(),
            Timestamp: Utils.getTicks()
          };
          var json = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          App.instance.showLoading(true);
          Http.post(Configs.App.DOMAIN_CONFIG['TransferAccount'], json, function (status, res) {
            if (status === 200 && res.c === 0) {
              _this3.step3OTPContainer.active = !!res.p[0];
              _this3.textCoinTransferReceiveStep3.string = _this3.textCoinTransferReceive.string;
              _this3.textUserNameStep3.string = _this3.editBoxUserNameTransfer.string;
              _this3.textCoinTransferExistStep3.string = _this3.textCoinTransferExist.string;
              _this3.step1ContainerTransfer.active = false;
              _this3.step2ContainerTransfer.active = false;
              _this3.step3ContainerTransfer.active = true;
            }
            App.instance.showLoading(false);
          });
        };
        _proto.populateOTPStep3Transfer = function populateOTPStep3Transfer(event, data) {
          this.step3OTPToggle.isChecked = false;
          if (data == "sms") {
            this.step3OTPTypeLabel.string = 'SMS OTP';
            return;
          }
          if (data == "telesafe") {
            this.step3OTPTypeLabel.string = 'Telesafe OTP';
            return;
          }
        };
        _proto.backToStep2ContinerTransfer = function backToStep2ContinerTransfer() {
          this.step1ContainerTransfer.active = false;
          this.step2ContainerTransfer.active = true;
          this.step3ContainerTransfer.active = false;
        };
        _proto.actConfirmTransfer = function actConfirmTransfer() {
          var _this4 = this;
          var data = {
            OTPType: 1,
            OTP: "000000",
            Timestamp: Utils.getTicks()
          };
          if (this.step3OTPContainer.active) {
            data.OTP = this.step3OTPEdb.string;
            data.OTPType = this.step3OTPTypeLabel.string === "SMS OTP" ? 1 : 3;
          }
          var json = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          App.instance.showLoading(true);
          Http.post(Configs.App.DOMAIN_CONFIG['TranferAccountConfirm'], json, function (status, res) {
            App.instance.showLoading(false);
            if (parseInt(res["c"]) === 0) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang("txt_transfer_success"));
              BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);
              _this4.step3ContainerTransfer.active = false;
              _this4.stepSuccessContainerTransfer.active = true;
            } else {
              App.instance.alertDialog.showMsg(res["r"]);
            }
          });
        };
        _proto.showWithdrawCard = function showWithdrawCard() {
          this.showTab(2);
          this.hideContainerMenuWithdraw();
          // this.containerMenuCardWithdraw.getComponentsInChildren(Toggle).forEach((toggle, i) => {
          //     toggle.isChecked = i === 0;
          // });
          this.showContainerWithdrawCard();
        };
        _proto.onTabSelected = function onTabSelected(toggle, index) {
          // toggle.isChecked = true;
          if (this._internalToggleChange) return;
          var tabIndex = parseInt(index);
          if (toggle.isChecked === false) return;
          this.showTab(tabIndex);
          this.eWalletCotainer.active = false;
          this.eWalletCotainerVN.active = false;
          this.containerDepositWithCard.active = false;
          this.containerDepositWithBank.active = false;
          this.containerDepositWithWalletWorld.active = false;
          this.containerDepositWithWalletVN.active = false;
          this.containerDepositWithCryptoUSDC.active = false;
          this.containerDepositWithCryptoUSDT.active = false;
          this.containerDepositWithCryptoBUST.active = false;
          this.step2ContainerTransfer.active = false;
          this.step3ContainerTransfer.active = false;
          this.stepSuccessContainerTransfer.active = false;
          this.containerCashQR.active = false;
          this.containerBankThaiLand.active = false;
          this.containerWithDrawWithWalletWorld.active = false;
          this.containerWithDrawWithWalletVN.active = false;
          this.containerWithDrawWithCrypto.active = false;
          this.containerWithDrawWithBankThaiLand.active = false;
          this.containerWithDrawWithCard.active = false;
          this.containerWithDrawWithBank.active = false;
        };
        _proto.showTab = function showTab(index) {
          this._internalToggleChange = true;
          this.tabToggleMain.forEach(function (tab, i) {
            tab.isChecked = i === index;
          });
          this.tabToggle.forEach(function (tab, i) {
            tab.isChecked = i === index;
            var textNode = tab.node.getChildByName("text");
            if (textNode) {
              var label = textNode.getComponent(Label);
              if (label) {
                label.color = i === index ? Color.fromHEX(new Color(), "#FFE242") : Color.WHITE;
              }
            }
          });
          this.tabContents.forEach(function (tab, i) {
            tab.active = i === index;
          });
          this._internalToggleChange = false;
          this.containerMenuDeposit.active = true;
          if (index === 2) {
            this.containerMenuCardWithdraw.active = true;
            // this.containerMenuCardWithdraw.getComponentsInChildren(Toggle).forEach((toggle, i) => {
            //     toggle.isChecked = false;
            // });
          }

          if (index === 1) {
            this.step1ContainerTransfer.active = true;
          }
        };
        _proto.submitWithdrawCardStep1 = function submitWithdrawCardStep1() {
          var _this5 = this;
          var amount = parseInt(this.withdrawCardCostLabel.string.replace(/\./g, ""));
          var quality = parseInt(this.withdrawEdbQualityContent.string);
          if (isNaN(amount) || isNaN(quality) || amount === 0 || quality === 0) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_invalid_input'));
            return;
          }
          App.instance.showLoading(true);
          var data = {
            "CurrencyID": Configs.Login.CurrencyID,
            "ProductID": this.productIDAndAmountMap[amount].productID,
            "Quantity": parseInt(this.withdrawEdbQualityContent.string),
            "Timestamp": Utils.getTicks()
          };
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['BuyItemUrl'], payload, function (status, response) {
            App.instance.showLoading(false);
            if (status === 200 && response.c === 0) {
              if (response.p[0]) {
                _this5.withdrawCardContainerOTPStep2.active = true;
              } else {
                _this5.withdrawCardContainerOTPStep2.active = false;
              }
              _this5.containerStep2CardWithdraw.getChildByName('value1').getComponent(Label).string = _this5.withdrawCardDetailLabel.string;
              _this5.containerStep2CardWithdraw.getChildByName('value2').getComponent(Label).string = _this5.withdrawCardCostLabel.string;
              _this5.containerStep2CardWithdraw.getChildByName('value3').getComponent(Label).string = _this5.withdrawEdbQualityContent.string;
              _this5.containerStep2CardWithdraw.getChildByName('value4').getComponent(Label).string = _this5.withdrawCardTotalLabel.string;
              _this5.containerStep1CardWithdraw.active = false;
              _this5.containerStep2CardWithdraw.active = true;
              BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);
            }
          });
        };
        _proto.backWithdrawCardStep1 = function backWithdrawCardStep1() {
          this.containerStep1CardWithdraw.active = true;
          this.containerStep2CardWithdraw.active = false;
          this.containerStep3CardWithdraw.active = false;
        };
        _proto.backWithdrawBankVNStep2 = function backWithdrawBankVNStep2() {
          this.containerStep1BankVNWithdraw.active = true;
          this.containerStep2BankVNWithdraw.active = false;
          this.containerStep3BankVNWithdraw.active = false;
        };
        _proto.backWithdrawCryptoStep2 = function backWithdrawCryptoStep2() {
          this.containerStep1CryptoWithdraw.active = true;
          this.containerStep2CryptoWithdraw.active = false;
          this.containerStep3CryptoWithdraw.active = false;
        };
        _proto.withdrawCardGetOTPStep2 = function withdrawCardGetOTPStep2(event, value) {
          var data = value.split(":");
          var ServiceID = data[0];
          var label = this.withdrawCardOTPOptionLabel.string;
          if (data[1] == 'BankVN') {
            label = this.withdrawBankVNOTPOptionLabel.string;
          } else if (data[1] == 'Crypto') {
            label = this.withdrawCryptoOTPOptionLabel.string;
          } else if (data[1] == 'EWallet') {
            label = this.withdrawEWalletOTPOptionLabel.string;
          } else if (data[1] == 'EWalletVN') {
            label = this.withdrawEWalletVNOTPOptionLabel.string;
          } else if (data[1] == 'Transfer') {
            label = this.step3OTPTypeLabel.string;
          } else if (data[1] == 'BankTHAI') {
            label = this.withdrawBankThaiLandOTPOptionLabel.string;
          }
          if (label === "SMS OTP") {
            App.instance.showLoading(true);
            var payload = {
              ServiceID: parseInt(ServiceID),
              CurrencyID: Configs.Login.CurrencyID
            };
            Http.post(Configs.App.DOMAIN_CONFIG['GetSmsOtp'], payload, function (status, res) {
              App.instance.showLoading(false);
              if (status === 200) {
                App.instance.alertDialog.showMsg(App.instance.getTextLang('sms_sent_check'));
              }
            });
            return;
          }
          if (label === "Telesafe OTP") {
            App.instance.showLoading(true);
            Http.post(Configs.App.DOMAIN_CONFIG['GetTeleSafeOtp'], {
              IsVerify: false
            }, function (status, res) {
              App.instance.showLoading(false);
              if (status === 200) {
                App.instance.alertDialog.showMsg(App.instance.getTextLang('sms_sent_check'));
              }
            });
            return;
          }
        };
        _proto.submitWithdrawCardStep2 = function submitWithdrawCardStep2() {
          var _this6 = this;
          // var otpType = this.withdrawCardOTPOptionLabel.string === "SMS OTP" ? 1 : 3;

          var data = {
            OTPType: 1,
            OTP: "000000",
            Timestamp: Utils.getTicks()
          };
          if (this.withdrawCardContainerOTPStep2.active) {
            data.OTPType = this.withdrawCardOTPOptionLabel.string === "SMS OTP" ? 1 : 3;
            data.OTP = this.withdrawCardEdbOTP.string;
          }
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['ConfirmBuyItem'], payload, function (status, response) {
            if (status === 200) {
              _this6.showWithdrawCardStep3(response.d);
              BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);
            }
          });
        };
        _proto.showWithdrawCardStep3 = function showWithdrawCardStep3(data) {
          var _this7 = this;
          this.withdrawCardListStep3.removeAllChildren();
          data.forEach(function (item) {
            var tableItem = instantiate(_this7.withdrawCardListStep3Item);
            tableItem.active = true;
            tableItem.getChildByName("1").getComponent(Label).string = '#' + item.productItemID;
            tableItem.getChildByName("2").getComponent(Label).string = item.value.toLocaleString("vi-VN");
            tableItem.getChildByName("3").getComponent(Label).string = item.serial;
            tableItem.getChildByName("4").getComponent(Label).string = item.code;
            _this7.withdrawCardListStep3.addChild(tableItem);
          });
          this.containerStep1CardWithdraw.active = false;
          this.containerStep2CardWithdraw.active = false;
          this.containerStep3CardWithdraw.active = true;
        };
        _proto.backWithdrawCardStep3 = function backWithdrawCardStep3() {
          this.containerStep1CardWithdraw.active = true;
          this.containerStep2CardWithdraw.active = false;
          this.containerStep3CardWithdraw.active = false;
          this.withdrawCardListStep3.removeAllChildren();
        };
        _proto.hideContainerMenuWithdraw = function hideContainerMenuWithdraw() {
          this.containerMenuCardWithdraw.active = false;
        };
        _proto.showWithdrawCrypto = function showWithdrawCrypto(event, data) {
          var _this8 = this;
          this.containerWithDrawWithCrypto.active = true;
          this.containerStep1CryptoWithdraw.active = true;
          this.containerStep2CryptoWithdraw.active = false;
          this.containerStep3CryptoWithdraw.active = false;
          this.containerMenuCardWithdraw.active = false;
          this.withdrawCryptoSelected = data;
          this.withdrawCryptoStep1EdbWalletNumber.string = "";
          this.withdrawCryptoStep1EdbAmount.string = "";
          var txt_wallet_address = App.instance.getTextLang('txt_wallet_address');
          this.withdrawCryptoStep1LabelCrypto.string = txt_wallet_address + ' ' + data + " " + "(TRC20)";
          this.withdrawCryptoStep1PlaceholderWalletNumber.string = App.instance.getTextLang('txt_input_wallet_address') + ' ' + data + " " + "(TRC20)";
          this.withdrawCryptoStep2LabelCrypto.string = txt_wallet_address + ' ' + data + "(TRC20)";
          this.withdrawCryptoStep3LabelCrypto.string = App.instance.getTextLang('txt_trans_success') + ' ' + this.withdrawCryptoSelected + ' ' + App.instance.getTextLang('txt_success');
          if (this.withdrawCryptoSelected == "USDT") {
            this.withdrawCryptoSelectedWalletType = 5;
          } else if (this.withdrawCryptoSelected == "BUST") {
            this.withdrawCryptoSelectedWalletType = 8;
          } else if (this.withdrawCryptoSelected == "USDC") {
            this.withdrawCryptoSelectedWalletType = 9;
          } else {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
            this.showTab(2);
            return;
          }
          Http.get(Configs.App.DOMAIN_CONFIG['ECoinGetInfoForCashOut'], {
            WalletType: this.withdrawCryptoSelectedWalletType,
            CurrencyID: Configs.Login.CurrencyID
          }, function (status, response) {
            if (status === 200 && response.c === 0) {
              _this8.withdrawCryptoBalanceTodayValue = response.d.walletInfo.amountEnable;
              _this8.withdrawCryptoMinToday = response.d.walletInfo.minValue;
              _this8.withdrawCryptoMaxToday = response.d.walletInfo.maxValue;
              _this8.withdrawCryptoRate = response.d.config.rate;
              var form = App.instance.getTextLang('txt_from_value');
              var to = App.instance.getTextLang('txt_to_value');
              _this8.withdrawCryptoStep1PlaceholderAmount.string = form + " " + _this8.withdrawCryptoMinToday.toLocaleString("vi-VN") + " " + to + " " + _this8.withdrawCryptoMaxToday.toLocaleString("vi-VN");
              _this8.withdrawCryptoStep1LabelToday.string = _this8.withdrawCryptoBalanceTodayValue.toLocaleString("vi-VN");
            }
          });
        };
        _proto.actSubmitWithdrawCryptoStep1 = function actSubmitWithdrawCryptoStep1() {
          var _this9 = this;
          var address = this.withdrawCryptoStep1EdbWalletNumber.string;
          var amountStr = this.withdrawCryptoStep1EdbAmount.string;
          var amount = parseInt(amountStr);
          if (address === "") {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('wallet_address_required'));
            return;
          }
          if (amountStr === "") {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('amount_required'));
            return;
          }
          if (amount > this.withdrawCryptoMaxToday) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('amount_must_be_less_than') + " " + this.withdrawCryptoMaxToday.toLocaleString("vi-VN"));
            return;
          }
          if (amount < this.withdrawCryptoMinToday) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('amount_must_be_greater_than') + " " + this.withdrawCryptoMinToday.toLocaleString("vi-VN"));
            return;
          }
          if (isNaN(amount)) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('value_invalid_amount'));
            return;
          }

          // if (address === "" || isNaN(amount) || amount < this.withdrawCryptoMinToday || amount > this.withdrawCryptoMaxToday) {
          //     App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_invalid_input'));
          //     return;
          // }

          var data = {
            CurrencyID: Configs.Login.CurrencyID,
            Address: address,
            CashoutValue: amount,
            WalletType: this.withdrawCryptoSelectedWalletType,
            Timestamp: Utils.getTicks()
          };
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['CashOutECoinCreateTrans'], payload, function (status, response) {
            if (status === 200 && response.c === 0) {
              if (response.p[0]) {
                _this9.withdrawCryptoStep2OTPContainer.active = true;
              } else {
                _this9.withdrawCryptoStep2OTPContainer.active = false;
              }
              _this9.withdrawCryptoStep2ValueAddress.string = address;
              _this9.withdrawCryptoStep2ValueAmount.string = amount.toLocaleString("VN");
              var value = parseFloat((amount / _this9.withdrawCryptoRate).toFixed(3));
              _this9.withdrawCryptoStep2ValueAmount2.string = value.toLocaleString("VN");
              // this.withdrawCryptoStep2OTPContainer.active = true;
              _this9.containerStep1CryptoWithdraw.active = false;
              _this9.containerStep2CryptoWithdraw.active = true;
            }
          });
        };
        _proto.actSubmitWithdrawCryptoStep2 = function actSubmitWithdrawCryptoStep2() {
          var _this10 = this;
          var data = {
            OTPType: 1,
            OTP: "000000",
            Timestamp: Utils.getTicks()
          };
          if (this.withdrawCryptoStep2OTPContainer.active) {
            data.OTPType = this.withdrawCardOTPOptionLabel.string === "SMS OTP" ? 1 : 3;
            data.OTP = this.withdrawCardEdbOTP.string;
          }
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['CashOutECoinCreateTransConfirm'], payload, function (status, response) {
            if (status === 200 && response.c === 0) {
              _this10.containerStep2CryptoWithdraw.active = false;
              _this10.containerStep3CryptoWithdraw.active = true;
              _this10.withdrawCryptoStep3TransactionIDLabel.string = "TransactionID: " + response.d.transactionID;
              BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);
            }
          });
        };
        _proto.showContainerWithdrawCard = function showContainerWithdrawCard() {
          var _this11 = this;
          if (!Configs.Login.IsLogin) {
            return;
          }
          this.hideContainerMenuWithdraw();
          this.containerWithDrawWithCard.active = true;
          this.withdrawCardDropListCost.active = false;
          this.containerStep1CardWithdraw.active = true;
          this.containerStep2CardWithdraw.active = false;
          this.containerStep3CardWithdraw.active = false;
          Http.get(Configs.App.DOMAIN_CONFIG['GetListTelco'], {
            telcoType: 1
          }, function (status, response) {
            if (status === 200 && response.c === 0) {
              // this.populateDropdownWithdraw(response.d);
              // cc.log(response.d);
              var viettelItem = response.d.find(function (item) {
                return item.telcoCode.toLowerCase().includes("vtel");
              });
              if (viettelItem) {
                _this11.withdrawCardDetailLabel.string = viettelItem.telcoName;
                _this11.onDropdownItemSelectedWithdraw(viettelItem.telcoCode);
              }
            }
          });

          // Http.get(Configs.App.DOMAIN_CONFIG['GetProductList'], {
          //     TelcoName: "vtel",
          //     telcoType: 1
          // }, (status, response) => {
          //     if (status === 200 && response.c === 0) {
          //
          //         cc.log(response.d)
          //
          //         const viettel100k = response.d.find(item =>
          //             item.productCode.includes("VTEL100")
          //         );
          //
          //         this.populateDropdownItemCostWithdraw(viettel100k);
          //     }
          // });
        };

        _proto.getCardDataWithdraw = function getCardDataWithdraw() {
          var _this12 = this;
          if (!Configs.Login.IsLogin) {
            return;
          }
          Http.get(Configs.App.DOMAIN_CONFIG['GetListTelco'], {
            telcoType: 1
          }, function (status, response) {
            if (status === 200 && response.c === 0) {
              _this12.populateDropdownWithdraw(response.d);
            }
          });
        };
        _proto.populateDropdownWithdraw = function populateDropdownWithdraw(data) {
          var _this13 = this;
          this.withdrawCardDropList.removeAllChildren();
          this.withdrawCardCostLabel.string = App.instance.getTextLang('txt_select_card_cost');
          this.withdrawCardDropListCost.active = false;
          data.forEach(function (item) {
            var dropdownItem = instantiate(_this13.withdrawCardDropListItem);
            dropdownItem.active = true;
            dropdownItem.getChildByName("Label").getComponent(Label).string = item.telcoName;
            dropdownItem.on(Node.EventType.TOUCH_END, function () {
              _this13.onDropdownItemSelectedWithdraw(item.telcoCode);
              _this13.withdrawCardDropList.active = !_this13.withdrawCardDropList.active;
              _this13.withdrawCardDetailLabel.string = item.telcoName;
            });
            _this13.withdrawCardDropList.addChild(dropdownItem);
          });
        };
        _proto.onDropdownItemSelectedWithdraw = function onDropdownItemSelectedWithdraw(telcoCode) {
          var _this14 = this;
          Http.get(Configs.App.DOMAIN_CONFIG['GetProductList'], {
            TelcoName: telcoCode,
            telcoType: 1
          }, function (status, response) {
            if (status === 200 && response.c === 0) {
              // cc.log(response.d);
              _this14.populateDropdownItemCostWithdraw(response.d);
            }
          });
        };
        _proto.populateDropdownItemCostWithdraw = function populateDropdownItemCostWithdraw(data) {
          var _this15 = this;
          this.withdrawCardDropListCost.removeAllChildren();
          this.withdrawCardCostLabel.string = App.instance.getTextLang('txt_select_card_cost');
          this.withdrawEdbQualityContent.string = "";
          this.withdrawCardDropList.active = false;
          this.productIDAndAmountMap = [];
          this.withdrawCardTableList.removeAllChildren();
          var autoFocusAmount = 100000;
          data.forEach(function (item) {
            var dropdownItem = instantiate(_this15.withdrawCardDropListCostItem);
            dropdownItem.active = true;
            dropdownItem.getChildByName("Label").getComponent(Label).string = item.amount.toLocaleString("vi-VN");
            dropdownItem.on(Node.EventType.TOUCH_END, function () {
              _this15.withdrawCardDropListCost.active = !_this15.withdrawCardDropListCost.active;
              _this15.withdrawCardCostLabel.string = item.amount.toLocaleString("vi-VN");
              _this15.selectedProductID = item.productID;
              _this15.selectedPromotion = item.promotion;
            });
            _this15.productIDAndAmountMap[item.amount] = {
              productID: item.productID,
              promotion: item.promotion
            };
            _this15.withdrawCardDropListCost.addChild(dropdownItem);
            var tableItem = instantiate(_this15.withdrawCardTableItem);
            tableItem.active = true;
            tableItem.getChildByName("MenhGia").getComponent(Label).string = item.amount.toLocaleString("vi-VN");
            tableItem.getChildByName("Tong").getComponent(Label).string = item.amount.toLocaleString("vi-VN") + "";
            _this15.withdrawCardTableList.addChild(tableItem);
            if (item.amount === autoFocusAmount) {
              _this15.withdrawCardCostLabel.string = item.amount.toLocaleString("vi-VN");
              _this15.selectedProductID = item.productID;
              _this15.selectedPromotion = item.promotion;
            }
          });
        };
        _proto.updateCardCostByQualityWithdraw = function updateCardCostByQualityWithdraw(edbQuality) {
          try {
            var q = parseInt(edbQuality.string);
            var c = parseInt(this.withdrawCardCostLabel.string.replace(/\./g, ""));
            var targetValue = q * c;
            var labelTarget = this.withdrawCardTotalLabel;
            var currentValue = parseInt(labelTarget.string.replace(/\./g, "")) || 0;
            tween({
              value: currentValue
            }).to(0.1, {
              value: targetValue
            }, {
              onUpdate: function onUpdate(val) {
                labelTarget.string = Utils.formatNumber(Math.round(val.value));
              }
            }).start();
          } catch (error) {
            console.warn("updateCardCostByQualityWithdraw error:", error);
            return;
          }
        };
        _proto.getDataWithdrawBankVN = function getDataWithdrawBankVN() {
          var _this16 = this;
          this.containerWithDrawWithBank.active = true;
          this.containerStep1BankVNWithdraw.active = true;
          this.containerStep2BankVNWithdraw.active = false;
          this.containerStep3BankVNWithdraw.active = false;
          Http.get(Configs.App.DOMAIN_CONFIG['GetButtons'], {
            CurrencyID: 1,
            ButtonType: 2
          }, function (status, response) {
            if (status === 200 && response.c === 0) {
              var isEnable = false;
              console.log(response.d);
              response.d.forEach(function (button) {
                if (button.walletType === 2) {
                  isEnable = true;
                }
              });
              if (isEnable) {
                _this16.getDataWithdrawBankVNAfterCheckGetButtons();
              } else {
                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
                _this16.showTab(2);
              }
            } else {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
              _this16.showTab(2);
            }
          }, false);
        };
        _proto.getDataWithdrawBankVNAfterCheckGetButtons = function getDataWithdrawBankVNAfterCheckGetButtons() {
          var _this17 = this;
          this.withdrawBankVNListItems.removeAllChildren();
          this.withdrawBankVNEdbValue.string = "";
          this.withdrawBankVNEdbNumberBank.string = "";
          this.withdrawBankVNEdbAccountBank.string = "";
          this.withdrawBankVNSelectedBankCode = "";
          this.withdrawBankVNSelectedBankLabel.string = App.instance.getTextLang('iap250');
          App.instance.showLoading(true);
          Http.get(Configs.App.DOMAIN_CONFIG['WalletGetInfoForCashOut'], {
            WalletType: 2,
            CurrencyID: Configs.Login.CurrencyID
          }, function (status, response) {
            if (status === 200 && response.c === 0) {
              _this17.withdrawBankVNBalanceTodayValue = response.d.walletInfo.amountEnable;
              _this17.withdrawBankVNMinToday = response.d.walletInfo.minValue;
              _this17.withdrawBankVNMaxToday = response.d.walletInfo.maxValue;
              var form = App.instance.getTextLang('txt_from_value');
              var to = App.instance.getTextLang('txt_to_value');
              _this17.withdrawBankVNBalance.string = Configs.Login.GoldBalance.toLocaleString("vi-VN");
              _this17.withdrawBankVNBalanceToday.string = _this17.withdrawBankVNBalanceTodayValue.toLocaleString("vi-VN");
              _this17.withdrawBankVNValuePlaceholder.string = form + " " + _this17.withdrawBankVNMinToday.toLocaleString("vi-VN") + " " + to + " " + _this17.withdrawBankVNMaxToday.toLocaleString("vi-VN");
            }
          });
          Http.get(Configs.App.DOMAIN_CONFIG['GetAccountBankinfoForCashout'], {
            CurrencyID: Configs.Login.CurrencyID,
            MoneyType: 'All'
          }, function (status, response) {
            App.instance.showLoading(false);
            if (status === 200 && response.c === 0) {
              App.instance.showLoading(false);
              response.d.banks.forEach(function (bank) {
                var item = instantiate(_this17.withdrawBankVNListItemTemplate);
                item.parent = _this17.withdrawBankVNListItems;
                var bankName = bank.bankName;
                item.getChildByName("label").getComponent(Label).string = bankName;
                item.on("click", function () {
                  _this17.withdrawBankVNSelectedBankCode = bank.bankCode;
                  _this17.withdrawBankVNSelectedBankLabel.string = bankName;
                  _this17.withdrawBankVNSelectedBankToggle.isChecked = false;
                });
              });
            }
          });
        };
        _proto.hasVietnameseDiacritics = function hasVietnameseDiacritics(str) {
          var normalized = str.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
          return str !== normalized;
        };
        _proto.actSubmitWithdrawBankVNStep1 = function actSubmitWithdrawBankVNStep1() {
          var _this18 = this;
          var value = parseInt(this.withdrawBankVNEdbValue.string);
          var numberBank = this.withdrawBankVNEdbNumberBank.string;
          var accountBank = this.withdrawBankVNEdbAccountBank.string;
          if (numberBank === "") {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('account_number_required'));
            return;
          }
          if (accountBank === "") {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('account_name_required'));
            return;
          }
          if (this.hasVietnameseDiacritics(accountBank)) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('account_name_no_accent'));
            return;
          }
          if (isNaN(value)) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('value_invalid_amount'));
            return;
          }
          if (value > this.withdrawBankVNMaxToday) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang("amount_required_in_range") + " " + Utils.formatNumber(this.withdrawBankVNMinToday) + " " + App.instance.getTextLang("iap35") + " " + Utils.formatNumber(this.withdrawBankVNMaxToday));
            // App.instance.alertDialog.showMsg(`${App.instance.getTextLang('amount_must_be_less_than')} ${this.withdrawBankVNMaxToday.toLocaleString("vi-VN")}`);
            return;
          }
          if (value < this.withdrawBankVNMinToday) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang("amount_required_in_range") + " " + Utils.formatNumber(this.withdrawBankVNMinToday) + " " + App.instance.getTextLang("iap35") + " " + Utils.formatNumber(this.withdrawBankVNMaxToday));
            // App.instance.alertDialog.showMsg(`${App.instance.getTextLang('amount_must_be_greater_than')} ${this.withdrawBankVNMinToday.toLocaleString("vi-VN")}`);
            return;
          }
          App.instance.showLoading(true);
          var data = {
            WalletCode: this.withdrawBankVNSelectedBankCode,
            WalletAccount: accountBank,
            CashoutValue: value,
            WalletType: 2,
            CurrencyID: Configs.Login.CurrencyID,
            Timestamp: Utils.getTicks()
          };
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['BankCashOut'], payload, function (status, response) {
            App.instance.showLoading(false);
            if (status === 200 && response.c === 0) {
              if (response.p[0]) {
                _this18.withdrawBankVNStep2OTPContainer.active = true;
              } else {
                _this18.withdrawBankVNStep2OTPContainer.active = false;
              }
              _this18.withdrawBankVNStep2BankName.string = _this18.withdrawBankVNSelectedBankLabel.string;
              _this18.withdrawBankVNStep2BankAccount.string = accountBank;
              _this18.withdrawBankVNStep2BankNumber.string = numberBank;
              _this18.withdrawBankVNStep2BankAmout.string = value.toLocaleString("vi-VN");
              _this18.withdrawBankVNStep2BankValue.string = value.toLocaleString("vi-VN");
              _this18.withdrawBankVNEdbStep2OTP.string = "";
              _this18.containerStep1BankVNWithdraw.active = false;
              _this18.containerStep2BankVNWithdraw.active = true;
            }
          });
        };
        _proto.actSubmitWithdrawBankVNStep2 = function actSubmitWithdrawBankVNStep2() {
          var _this19 = this;
          var data = {
            OTPType: 1,
            OTP: "000000",
            Timestamp: Utils.getTicks()
          };
          if (this.withdrawBankVNStep2OTPContainer.active) {
            data.OTPType = this.withdrawBankVNOTPOptionLabel.string === "SMS OTP" ? 1 : 3;
            data.OTP = this.withdrawBankVNEdbStep2OTP.string;
          }
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['BankCashOutConfirm'], payload, function (status, response) {
            if (status === 200 && response.c === 0) {
              _this19.containerStep2BankVNWithdraw.active = false;
              _this19.containerStep3BankVNWithdraw.active = true;
              _this19.withdrawBankVNStep3TransactionIDLabel.string = 'TransactionID: ' + response.d.transactionID;
              BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);
            }
          });
        };
        _proto.populateOTPOptionWithdraw = function populateOTPOptionWithdraw(option) {
          this.withdrawCardOTPOptionToggle.isChecked = false;
          if (option.target.name == "OptionSMS") {
            this.withdrawCardOTPOptionLabel.string = 'SMS OTP';
            return;
          }
          if (option.target.name == "OptionTelesafe") {
            this.withdrawCardOTPOptionLabel.string = 'Telesafe OTP';
            return;
          }
        };
        _proto.populateOTPOptionWithdrawBankVN = function populateOTPOptionWithdrawBankVN(option) {
          this.withdrawBankVNOTPOptionToggle.isChecked = false;
          if (option.target.name == "OptionSMS") {
            this.withdrawBankVNOTPOptionLabel.string = 'SMS OTP';
            return;
          }
          if (option.target.name == "OptionTelesafe") {
            this.withdrawBankVNOTPOptionLabel.string = 'Telesafe OTP';
            return;
          }
        };
        _proto.populateOTPOptionWithdrawCrypto = function populateOTPOptionWithdrawCrypto(event, data) {
          this.withdrawCryptoOTPOptionToggle.isChecked = false;
          if (data == "sms") {
            this.withdrawCryptoOTPOptionLabel.string = 'SMS OTP';
            return;
          }
          if (data == "telesafe") {
            this.withdrawCryptoOTPOptionLabel.string = 'Telesafe OTP';
            return;
          }
        };
        _proto.dismiss = function dismiss() {
          var _this20 = this;
          if (!this.bg) this.bg = this.node.getChildByName("Bg");
          if (!this.container) this.container = this.node.getChildByName("Container");

          // Stop all actions: Không còn dùng runAction nên không cần stopAllActions
          // Đảm bảo có UIOpacity
          var bgOpacity = this.bg.getComponent(UIOpacity) || this.bg.addComponent(UIOpacity);
          bgOpacity.opacity = 128;
          tween(bgOpacity).to(0.2, {
            opacity: 0
          }).start();
          var containerOpacity = this.container.getComponent(UIOpacity) || this.container.addComponent(UIOpacity);
          containerOpacity.opacity = 255;
          this.container.setScale(new Vec3(1, 1, 1));
          tween(this.container).to(0.3, {
            scale: new Vec3(0.8, 0.8, 0.8)
          }, {
            easing: easing.backIn
          }).call(function () {
            containerOpacity.opacity = 150;
            _this20._onDismissed(); // Gọi hàm callback sau tween
          }).start();
        };
        _proto._onDismissed = function _onDismissed() {
          var edits = this.node.getComponentsInChildren(EditBox);
          for (var i = 0; i < edits.length; i++) {
            edits[i].tabIndex = -1;
          }
          this.node.active = false;
        };
        _proto.showEWalletContainer = function showEWalletContainer(event, data) {
          var _this21 = this;
          this.hideContainerMenuWithdraw();
          this.eWalletCotainer.active = true;
          this.scheduleOnce(function () {
            _this21.showEWallet(0);
          }, 0.05);
        };
        _proto.selectedToggleEWallet = function selectedToggleEWallet(toggle, index) {
          if (this._internalToggleChangeWithdrawEWalletWorld) return;
          if (this._internalToggleChangeWithdrawEWalletVN) return;

          // toggle.isChecked = true;
          var tabIndex = parseInt(index);
          this.showEWallet(tabIndex);
        };
        _proto.showEWallet = function showEWallet(index) {
          var _this22 = this;
          // EWallet not EWalletVN
          if (index < 4) {
            this._internalToggleChangeWithdrawEWalletWorld = true;
            this.tabToggleEWalletWithdrawWorld.forEach(function (tab, i) {
              tab.isChecked = i === index;
            });
            this._internalToggleChangeWithdrawEWalletWorld = false;
            this.spriteActiveEWalletWithdrawWorld.forEach(function (tab, i) {
              tab.active = i === index;
            });
            this.spriteNotActiveEWalletWithdrawWorld.forEach(function (sprite, i) {
              sprite.active = i !== index;
            });
            this.spriteLgEWalletWithdrawWorld.forEach(function (tab, i) {
              tab.active = i === index;
            });
            this.spriteLabelEWalletWithdrawWorld.forEach(function (label, i) {
              var uiOpacity = label.getComponent(UIOpacity);
              if (!uiOpacity) {
                uiOpacity = label.addComponent(UIOpacity);
              }
              uiOpacity.opacity = i === index ? 255 : 180;
            });
            this._internalToggleChangeWithdrawEWalletVN = true;
            this.tabToggleEWalletVN.forEach(function (tab, i) {
              tab.isChecked = i === index;
            });
            this._internalToggleChangeWithdrawEWalletVN = false;
            this.spriteActiveEWalletVN.forEach(function (tab, i) {
              tab.active = i === index;
            });
            this.spriteNotActiveEWalletVN.forEach(function (sprite, i) {
              sprite.active = i !== index;
            });
            this.spriteLabelEWalletVN.forEach(function (label, i) {
              var uiOpacity = label.getComponent(UIOpacity);
              if (!uiOpacity) {
                uiOpacity = label.addComponent(UIOpacity);
              }
              uiOpacity.opacity = i === index ? 255 : 180;
            });
            this.spriteLgEWalletVN.forEach(function (tab, i) {
              tab.active = i === index;
            });
          }
          if (index === 0) {
            this.lblTextAddressWithdrawEWalletWorld.string = App.instance.getTextLang("iap274") + " " + "Paypal";
            this.withdrawEWalletTypeSelected = 10;
          } else if (index === 1) {
            this.lblTextAddressWithdrawEWalletWorld.string = App.instance.getTextLang("iap274") + " " + "Payeer";
            this.withdrawEWalletTypeSelected = 12;
          } else if (index === 2) {
            this.lblTextAddressWithdrawEWalletWorld.string = App.instance.getTextLang("iap274") + " " + "Perfect Money";
            this.withdrawEWalletTypeSelected = 14;
          } else if (index === 3) {
            this.lblTextAddressWithdrawEWalletWorld.string = App.instance.getTextLang("iap274") + " " + "Web Money";
            this.withdrawEWalletTypeSelected = 13;
          } else if (index === 4) {
            this.withdrawEWalletTypeSelected = 1;
          } else if (index === 5) {
            this.withdrawEWalletTypeSelected = 3;
          } else if (index === 6) {
            this.withdrawEWalletTypeSelected = 4;
          }
          Http.get(Configs.App.DOMAIN_CONFIG['GetButtons'], {
            CurrencyID: 1,
            ButtonType: 2
          }, function (status, response) {
            if (status === 200 && response.c === 0) {
              var isEnable = false;
              response.d.forEach(function (button) {
                if (button.walletType === _this22.withdrawEWalletTypeSelected) {
                  isEnable = true;
                }
              });
              if (isEnable) {
                if (index < 4) {
                  _this22.getDataWithdrawEWalletAfterCheckGetButtons();
                } else {
                  _this22.getDataWithdrawEWalletVNAfterCheckGetButtons();
                }
              } else {
                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
                _this22.showTab(2);
              }
            } else {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
              _this22.showTab(2);
            }
          }, false);
          this.withdrawEWalletVNStep1EdbAddress.string = "";
          this.withdrawEWalletVNStep1EdbAmount.string = "";
          this.withdrawEWalletVNStep2Address.string = "";
          this.withdrawEWalletVNStep2Amount.string = "";
          this.withdrawEWalletVNStep2Amount2.string = "";
          this.withdrawEWalletVNEdbStep2OTP.string = "";
          this.withdrawEWalletVNOTPOptionLabel.string = "SMS OTP";
          this.withdrawEWalletVNStep3TransactionIDLabel.string = "";
          this.containerStep1EWalletVNWithdraw.active = true;
          this.containerStep2EWalletVNWithdraw.active = false;
          this.containerStep3EWalletVNWithdraw.active = false;
          this.containerStep1EWalletWithdraw.active = true;
          this.containerStep2EWalletWithdraw.active = false;
          this.containerStep3EWalletWithdraw.active = false;
          this.withdrawEWalletStep1EdbAddress.string = "";
          this.withdrawEWalletStep1EdbAmount.string = "";
          this.withdrawEWalletStep2Address.string = "";
          this.withdrawEWalletStep2Amount.string = "";
          this.withdrawEWalletStep2Amount2.string = "";
          this.withdrawEWalletEdbStep2OTP.string = "";
          this.withdrawEWalletOTPOptionLabel.string = "SMS OTP";
          this.withdrawEWalletStep3TransactionIDLabel.string = "";
        };
        _proto.getDataWithdrawEWalletAfterCheckGetButtons = function getDataWithdrawEWalletAfterCheckGetButtons() {
          var _this23 = this;
          Http.get(Configs.App.DOMAIN_CONFIG['WalletGetInfoForCashOut'], {
            WalletType: this.withdrawEWalletTypeSelected,
            CurrencyID: Configs.Login.CurrencyID
          }, function (status, response) {
            if (status === 200 && response.c === 0) {
              _this23.withdrawEWalletBalanceTodayValue = response.d.walletInfo.amountEnable;
              _this23.withdrawEWalletMinToday = response.d.walletInfo.minValue;
              _this23.withdrawEWalletMaxToday = response.d.walletInfo.maxValue;
              var form = App.instance.getTextLang('txt_from_value');
              var to = App.instance.getTextLang('txt_to_value');
              if (_this23.withdrawEWalletTypeSelected == 10) {
                _this23.withdrawEWalletAddressPlaceholder.string = App.instance.getTextLang('iap300');
              } else {
                _this23.withdrawEWalletAddressPlaceholder.string = App.instance.getTextLang('iap301');
              }
              _this23.withdrawEWalletValuePlaceholder.string = form + " " + _this23.withdrawEWalletMinToday.toLocaleString("vi-VN") + " " + to + " " + _this23.withdrawEWalletMaxToday.toLocaleString("vi-VN");
              _this23.withdrawEWalletBalanceToday.string = _this23.withdrawEWalletBalanceTodayValue.toLocaleString("vi-VN");
            }
          });
        };
        _proto.getDataWithdrawEWalletVNAfterCheckGetButtons = function getDataWithdrawEWalletVNAfterCheckGetButtons() {
          var _this24 = this;
          Http.get(Configs.App.DOMAIN_CONFIG['WalletGetInfoForCashOut'], {
            WalletType: this.withdrawEWalletTypeSelected,
            CurrencyID: Configs.Login.CurrencyID
          }, function (status, response) {
            if (status === 200 && response.c === 0) {
              _this24.withdrawEWalletVNBalanceTodayValue = response.d.walletInfo.amountEnable;
              _this24.withdrawEWalletVNMinToday = response.d.walletInfo.minValue;
              _this24.withdrawEWalletVNMaxToday = response.d.walletInfo.maxValue;
              var form = App.instance.getTextLang('txt_from_value');
              var to = App.instance.getTextLang('txt_to_value');
              _this24.withdrawEWalletVNValuePlaceholder.string = form + " " + _this24.withdrawEWalletVNMinToday.toLocaleString("vi-VN") + " " + to + " " + _this24.withdrawEWalletVNMaxToday.toLocaleString("vi-VN");
              _this24.withdrawEWalletVNBalanceToday.string = _this24.withdrawEWalletVNBalanceTodayValue.toLocaleString("vi-VN");
            }
          });
        };
        _proto.actSubmitWithdrawEWalletStep1 = function actSubmitWithdrawEWalletStep1() {
          var _this25 = this;
          var address = this.withdrawEWalletStep1EdbAddress.string;
          var amountStr = this.withdrawEWalletStep1EdbAmount.string;
          var amount = parseInt(amountStr);
          if (address === "") {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('wallet_address_required'));
            return;
          }
          switch (this.withdrawEWalletTypeSelected) {
            case 10:
              //Paypal
              if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(address)) {
                App.instance.alertDialog.showMsg("Địa chỉ Paypal không hợp lệ!");
                return;
              }
              break;
            case 12:
              //Payeer
              if (!/^P\d{6,10}$/.test(address)) {
                App.instance.alertDialog.showMsg("Địa chỉ Payeer không hợp lệ!");
                return;
              }
              break;
            case 14:
              //Perfect Money
              if (!/^[UEGB]\d{5,10}$/.test(address)) {
                App.instance.alertDialog.showMsg("Địa chỉ Perfect Money không hợp lệ!");
                return;
              }
              break;
            case 13:
              //WebMoney
              if (!/^[ZREUB]\d{12}$/.test(address)) {
                App.instance.alertDialog.showMsg("Địa chỉ WebMoney không hợp lệ!");
                return;
              }
              break;
            default:
              App.instance.alertDialog.showMsg("Loại ví không hợp lệ!");
              return;
          }

          // let emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
          // if (!emailRegex.test(address)) {
          //     App.instance.alertDialog.showMsg(App.instance.getTextLang('email_invalid_format'));
          //     return;
          // }

          if (amountStr === "") {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('amount_required'));
            return;
          }
          if (amount > this.withdrawEWalletMaxToday) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('amount_must_be_less_than') + " " + this.withdrawEWalletMaxToday.toLocaleString("vi-VN"));
            return;
          }
          if (amount < this.withdrawEWalletMinToday) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('amount_must_be_greater_than') + " " + this.withdrawEWalletMinToday.toLocaleString("vi-VN"));
            return;
          }
          if (isNaN(amount)) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('value_invalid_amount'));
            return;
          }
          var data = {
            WalletAccount: amount,
            WalletAccountName: address,
            WalletType: this.withdrawEWalletTypeSelected,
            CurrencyID: Configs.Login.CurrencyID,
            Timestamp: Utils.getTicks()
          };
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          var rateVNDToUSD = 0;
          var url = Configs.App.DOMAIN_CONFIG['WalletGetInfoForCashOut'];
          var params = {
            CurrencyID: 1,
            WalletType: this.withdrawEWalletTypeSelected
          };
          Http.get(url, params, function (status, res) {
            if (res.c < 0) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang("me" + res.c));
              return;
            }
            rateVNDToUSD = parseFloat(res.d.config.rate);
            Http.post(Configs.App.DOMAIN_CONFIG['CashOutWalletCreateTrans'], payload, function (status, response) {
              App.instance.showLoading(false);
              if (status === 200 && response.c === 0) {
                if (response.p[0]) {
                  _this25.withDrawEwalletWorldOTPContainerStep2.active = true;
                } else {
                  _this25.withDrawEwalletWorldOTPContainerStep2.active = false;
                }
                _this25.withdrawEWalletStep2Address.string = address;
                var vndAmount = amount;
                _this25.withdrawEWalletStep2Amount.string = vndAmount.toLocaleString("vi-VN");
                var usdAmount = vndAmount / rateVNDToUSD;
                _this25.withdrawEWalletStep2Amount2.string = "$" + usdAmount.toFixed(2);
                _this25.containerStep1EWalletWithdraw.active = false;
                _this25.containerStep2EWalletWithdraw.active = true;
              }
            });
          });
        };
        _proto.actSubmitWithdrawEWalletStep2 = function actSubmitWithdrawEWalletStep2() {
          var _this26 = this;
          var data = {
            OTPType: 1,
            OTP: "000000",
            Timestamp: Utils.getTicks()
          };
          if (this.withDrawEwalletWorldOTPContainerStep2.active) {
            data.OTPType = this.withdrawEWalletOTPOptionLabel.string === "SMS OTP" ? 1 : 3;
            data.OTP = this.withdrawEWalletEdbStep2OTP.string;
          }
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['CashOutWalletCreateTransConfirm'], payload, function (status, response) {
            if (status === 200 && response.c === 0) {
              _this26.containerStep2EWalletWithdraw.active = false;
              _this26.containerStep3EWalletWithdraw.active = true;
              _this26.withdrawEWalletStep3TransactionIDLabel.string = "TransactionID: " + response.d.transactionID;
              BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);
            }
          });
        };
        _proto.populateOTPOptionWithdrawEWallet = function populateOTPOptionWithdrawEWallet(event, data) {
          this.withdrawEWalletOTPOptionToggle.isChecked = false;
          if (data == "sms") {
            this.withdrawEWalletOTPOptionLabel.string = 'SMS OTP';
            return;
          }
          if (data == "telesafe") {
            this.withdrawEWalletOTPOptionLabel.string = 'Telesafe OTP';
            return;
          }
        };
        _proto.backWithdrawEWalletStep2 = function backWithdrawEWalletStep2() {
          this.containerStep1EWalletWithdraw.active = true;
          this.containerStep2EWalletWithdraw.active = false;
          this.containerStep3EWalletWithdraw.active = false;
        };
        _proto.actSubmitWithdrawEWalletVNStep1 = function actSubmitWithdrawEWalletVNStep1() {
          var _this27 = this;
          var address = this.withdrawEWalletVNStep1EdbAddress.string;
          var amountStr = this.withdrawEWalletVNStep1EdbAmount.string;
          var amount = parseInt(amountStr);

          // switch (this.withdrawEWalletTypeSelected) {
          //     case 1:
          //         //momo
          //         this.withDrawEWalletVNSpriteStep2.spriteFrame = this.spriteLgEWalletVN[0].getComponent(cc.Sprite).spriteFrame;
          //         break;
          //     case 3:
          //         //zalo
          //         this.withDrawEWalletVNSpriteStep2.spriteFrame = this.spriteLgEWalletVN[1].getComponent(cc.Sprite).spriteFrame;
          //         break;
          //     case 4:
          //         //vietelmoney
          //         this.withDrawEWalletVNSpriteStep2.spriteFrame = this.spriteLgEWalletVN[2].getComponent(cc.Sprite).spriteFrame;
          //         break;
          //     default:
          //      break;
          // }

          if (address === "") {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('wallet_address_required'));
            return;
          }
          if (amountStr === "") {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('amount_required'));
            return;
          }
          if (amount > this.withdrawEWalletVNMaxToday) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('amount_must_be_less_than') + " " + this.withdrawEWalletVNMaxToday.toLocaleString("vi-VN"));
            return;
          }
          if (amount < this.withdrawEWalletVNMinToday) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('amount_must_be_greater_than') + " " + this.withdrawEWalletVNMinToday.toLocaleString("vi-VN"));
            return;
          }
          if (isNaN(amount)) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('value_invalid_amount'));
            return;
          }

          // if (address === "" || isNaN(amount) || amount < this.withdrawEWalletVNMinToday || amount > this.withdrawEWalletVNMaxToday) {
          //     App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_invalid_input'));
          //     return;
          // }

          var data = {
            WalletAccount: amount,
            WalletAccountName: address,
            WalletType: this.withdrawEWalletTypeSelected,
            CurrencyID: Configs.Login.CurrencyID,
            Timestamp: Utils.getTicks()
          };
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['CashOutWalletCreateTrans'], payload, function (status, response) {
            App.instance.showLoading(false);
            if (status === 200 && response.c === 0) {
              if (response.p[0]) {
                _this27.containerStep2EWalletVNWithdrawOTP.active = true;
              } else {
                _this27.containerStep2EWalletVNWithdrawOTP.active = false;
              }
              _this27.withdrawEWalletVNStep2Address.string = address;
              _this27.withdrawEWalletVNStep2Amount.string = amount.toLocaleString("vi-VN");
              _this27.withdrawEWalletVNStep2Amount2.string = amount.toLocaleString("vi-VN");
              _this27.containerStep1EWalletVNWithdraw.active = false;
              _this27.containerStep2EWalletVNWithdraw.active = true;
            }
          });
        };
        _proto.actSubmitWithdrawEWalletVNStep2 = function actSubmitWithdrawEWalletVNStep2() {
          var _this28 = this;
          var data = {
            OTPType: 1,
            OTP: "000000",
            Timestamp: Utils.getTicks()
          };
          if (this.containerStep2EWalletVNWithdrawOTP.active) {
            data.OTPType = this.withdrawEWalletVNOTPOptionLabel.string === "SMS OTP" ? 1 : 3;
            data.OTP = this.withdrawEWalletVNEdbStep2OTP.string;
          }
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['CashOutWalletCreateTransConfirm'], payload, function (status, response) {
            if (status === 200 && response.c === 0) {
              _this28.containerStep2EWalletVNWithdraw.active = false;
              _this28.containerStep3EWalletVNWithdraw.active = true;
              _this28.withdrawEWalletVNStep3TransactionIDLabel.string = "TransactionID: " + response.d.transactionID;
              BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);
            }
          });
        };
        _proto.populateOTPOptionWithdrawVNEWallet = function populateOTPOptionWithdrawVNEWallet(event, data) {
          this.withdrawEWalletVNOTPOptionToggle.isChecked = false;
          if (data == "sms") {
            this.withdrawEWalletVNOTPOptionLabel.string = 'SMS OTP';
            return;
          }
          if (data == "telesafe") {
            this.withdrawEWalletVNOTPOptionLabel.string = 'Telesafe OTP';
            return;
          }
        };
        _proto.backWithdrawEWalletVNStep2 = function backWithdrawEWalletVNStep2() {
          this.containerStep1EWalletVNWithdraw.active = true;
          this.containerStep2EWalletVNWithdraw.active = false;
          this.containerStep3EWalletVNWithdraw.active = false;
        };
        _proto.showEWalletContainerVN = function showEWalletContainerVN() {
          this.hideContainerMenuWithdraw();
          this.eWalletCotainerVN.active = true;
          this.showEWallet(4);
        };
        _proto.hideContainerMenuDeposit = function hideContainerMenuDeposit() {
          this.containerMenuDeposit.active = false;
        };
        _proto.showContainerDepositWithCard = function showContainerDepositWithCard() {
          var _this29 = this;
          Http.get(Configs.App.DOMAIN_CONFIG['GetButtons'], {
            CurrencyID: 1,
            ButtonType: 1
          }, function (status, response) {
            if (status === 200 && response.c === 0) {
              var isEnable = false;
              response.d.forEach(function (button) {
                if (button.walletType === 20) {
                  isEnable = true;
                }
              });
              if (isEnable) {
                _this29.containerDepositWithCard.active = true;
                _this29.hideContainerMenuDeposit();
                _this29.depositCardCostLabel.string = App.instance.getTextLang('txt_select_card_cost');
                _this29.depositCardEdbSeri.string = "";
                _this29.depositCardEdbCode.string = "";
                _this29.depositCardCostLabel.node.getChildByName('error').active = false;
                _this29.depositCardEdbSeri.node.getChildByName('error').active = false;
                _this29.depositCardEdbCode.node.getChildByName('error').active = false;
                _this29.depositCardCostLabel.node.parent.getComponent(Toggle).node.on('toggle', function () {
                  _this29.depositCardCostLabel.node.getChildByName('error').active = false;
                }, _this29);
                _this29.depositCardEdbSeri.node.on('editing-did-began', function () {
                  _this29.depositCardEdbSeri.node.getChildByName('error').active = false;
                });
                _this29.depositCardEdbCode.node.on('editing-did-began', function () {
                  _this29.depositCardEdbCode.node.getChildByName('error').active = false;
                });
                Http.get(Configs.App.DOMAIN_CONFIG['GetListTelco'], {
                  telcoType: 0
                }, function (status, response) {
                  if (status === 200 && response.c === 0) {
                    _this29.populateDropdownDeposit(response.d);
                    var viettelItem = response.d.find(function (item) {
                      return item.telcoName.toLowerCase().includes("viettel");
                    });
                    if (viettelItem) {
                      _this29.depositCardTelcoNameLabel.string = viettelItem.telcoName;
                      _this29.onDropdownItemSelectedDeposit(viettelItem.telcoName);
                    }
                  }
                });
              } else {
                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
              }
            } else {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
            }
          }, false);
        };
        _proto.showContainerDepositWithBank = function showContainerDepositWithBank() {
          var _this30 = this;
          App.instance.showLoading(true);
          Http.get(Configs.App.DOMAIN_CONFIG['GetButtons'], {
            CurrencyID: 1,
            ButtonType: 1
          }, function (status, response) {
            if (status === 200 && response.c === 0) {
              var isEnable = false;
              response.d.forEach(function (button) {
                if (button.walletType === 2) {
                  isEnable = true;
                }
              });
              if (isEnable) {
                _this30.containerDepositWithBank.active = true;
                _this30.hideContainerMenuDeposit();
                _this30.showTabBank(0);
                // this.depositBankVNStep1.active = true;
                // this.depositBankVNStep2.active = false;
                // this.clearInputTempAmountDeposit(this.depositBankVNStep1.getComponentInChildren(cc.ToggleContainer));
                // Http.get(Configs.App.DOMAIN_CONFIG['GetListBank'], { CurrencyID: 1}, (status, res) => {
                //     if (status === 200 && res.c === 0) {
                //         this.showTabBank(0);
                //         this.lblNameBankDeposit.string = res.d.walletName;
                //         this.lblNumberBankDeposit.string = res.d.walletAccount;
                //         this.lblNameAccountBank.string = res.d.walletAccountName;
                //         this.walletCodeDeposit = res.d.walletCode;
                //
                //         this.btnCreateCodeContent.getComponent(cc.Button).interactable = true;
                //         this.btnCreateCodeContent.getChildByName("Active").active = true;
                //         this.btnCreateCodeContent.getChildByName("notActive").active = false;
                //         this.lblCodeContent.string = "";
                //         this.lblTimeExpired.string = "";
                //     } else {
                //         App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
                //     }
                // }, false);
              } else {
                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
              }
            } else {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
            }
            App.instance.showLoading(false);
          }, false);
        };
        _proto.showContainerDepositWithEWalletWorld = function showContainerDepositWithEWalletWorld() {
          var _this31 = this;
          App.instance.showLoading(true);
          Http.get(Configs.App.DOMAIN_CONFIG['GetButtons'], {
            CurrencyID: 1,
            ButtonType: 1
          }, function (status, response) {
            if (status === 200 && response.c === 0) {
              var enabledWalletTypes = response.d.map(function (button) {
                return button.walletType;
              });
              _this31.tabToggleEWalletDepositWorld.forEach(function (toggle, index) {
                var walletType = [10, 14, 12, 13][index];
                toggle.node.active = enabledWalletTypes.includes(walletType);
              });
              for (var i = 0; i < _this31.tabToggleEWalletDepositWorld.length; i++) {
                if (_this31.tabToggleEWalletDepositWorld[i].node.active) {
                  _this31.selectedToggleEWalletDepositWorld(_this31.tabToggleEWalletDepositWorld[i], "" + i);
                  break;
                }
              }
            } else {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
            }
            App.instance.showLoading(false);
          }, false);
        };
        _proto.copyLabelText = function copyLabelText(event, labelName) {
          var label = this[labelName];
          if (label instanceof Label) {
            var text = label.string;
            if (sys.isBrowser) {
              navigator.clipboard.writeText(text).then(function () {
                // App.instance.alertDialog.showMsg("Copied");
              })["catch"](function (err) {
                // cc.log("Error Copy", err);
              });
            }
          }
        };
        _proto.selectedToggleEWalletDepositWorld = function selectedToggleEWalletDepositWorld(toggle, index) {
          var _this32 = this;
          // if (this._internalToggleChangeDepositWorld) return;
          // if (toggle.isChecked) return;

          // toggle.isChecked = true;
          var tabIndex = parseInt(index);
          this.updateToggleUIEWalletWorld(tabIndex);
          this.nodeContentCodeEWalletWorld.active = false;
          if (tabIndex === 0) {
            this.lblContentNoteEWalletWorld.string = App.instance.getTextLang("paypal_topup_instructions");
            this.depositEWalletWalletType = 10;
            this.keyWalletAccountEWalletWorldDeposit.string = App.instance.getTextLang("paypal_account_number");
          } else if (tabIndex === 1) {
            this.lblContentNoteEWalletWorld.string = App.instance.getTextLang("ewallet_topup_instructions_payeer");
            this.depositEWalletWalletType = 14;
            this.keyWalletAccountEWalletWorldDeposit.string = App.instance.getTextLang("payeer_account_number");
          } else if (tabIndex === 2) {
            this.lblContentNoteEWalletWorld.string = App.instance.getTextLang("ewallet_topup_instructions_perfectmoney");
            this.depositEWalletWalletType = 12;
            this.keyWalletAccountEWalletWorldDeposit.string = App.instance.getTextLang("perfectmoney_account_number");
          } else if (tabIndex === 3) {
            this.lblContentNoteEWalletWorld.string = App.instance.getTextLang("ewallet_topup_instructions_webmoney");
            this.depositEWalletWalletType = 13;
            this.keyWalletAccountEWalletWorldDeposit.string = App.instance.getTextLang("webmoney_account_number");
          }
          App.instance.showLoading(true);
          Http.get(Configs.App.DOMAIN_CONFIG['GetButtons'], {
            CurrencyID: 1,
            ButtonType: 1
          }, function (status, response) {
            if (status === 200 && response.c === 0) {
              var isEnable = false;
              response.d.forEach(function (button) {
                if (button.walletType === _this32.depositEWalletWalletType) {
                  var _toggle$node$getChild;
                  var promoNode = (_toggle$node$getChild = toggle.node.getChildByName("Promotion")) == null || (_toggle$node$getChild = _toggle$node$getChild.getChildByName("promo-sticker-flip")) == null ? void 0 : _toggle$node$getChild.getChildByName("lblPromotion");
                  if (promoNode && promoNode.getComponent(Label)) {
                    var percent = button.promotion ? button.promotion - 100 : 0;
                    // promoNode.getComponent(cc.Label).string = `${percent}%`;
                    if (percent > 0) {
                      promoNode.getComponent(Label).string = percent + "%";
                      promoNode.parent.active = true;
                    } else {
                      promoNode.parent.active = false;
                    }
                  }
                  isEnable = true;
                }
              });
              if (isEnable) {
                // toggle.isChecked = true;
                _this32.containerDepositWithWalletWorld.active = true;
                _this32.hideContainerMenuDeposit();
                _this32.depositEWalletWorldStep1.active = true;

                // this.depositEWalletWorldStep2.active = false;
                // this.clearInputTempAmountDeposit(this.depositEWalletWorldStep1.getComponentInChildren(cc.ToggleContainer));

                Http.get(Configs.App.DOMAIN_CONFIG['GetWalletGetInfo'], {
                  WalletType: _this32.depositEWalletWalletType,
                  CurrencyID: 1
                }, function (status, res) {
                  if (status === 200 && res.c === 0) {
                    _this32.lblWalletAccountEWalletWorldDeposit.string = res.d.walletAccount;
                    _this32.lblWalletAccountNameEWalletWorldDeposit.string = res.d.walletAccountName;
                    _this32.lblWalletNameEWalletWorldDeposit = res.d.walletName;
                    _this32.lblWalletCodeEWalletWorldDeposit = res.d.walletCode;
                    _this32.btnCreateCodeContentEWalletWorld.getComponent(Button).interactable = true;
                    _this32.btnCreateCodeContentEWalletWorld.getChildByName("Active").active = true;
                    _this32.btnCreateCodeContentEWalletWorld.getChildByName("notActive").active = false;
                    _this32.lblContentEWalletWorldDeposit.string = "";
                  } else {
                    App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
                  }
                }, false);
              } else {
                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
              }
            } else {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
            }
            App.instance.showLoading(false);
          }, false);
        };
        _proto.updateToggleUIEWalletWorld = function updateToggleUIEWalletWorld(selectedIndex) {
          this.spriteActiveEWalletDepositWorld.forEach(function (sprite, i) {
            sprite.active = i === selectedIndex;
          });
          this.spriteNotActiveEWalletDepositWorld.forEach(function (sprite, i) {
            sprite.active = i !== selectedIndex;
          });
          this.spriteLgEWalletDepositWorld.forEach(function (sprite, i) {
            sprite.active = i === selectedIndex;
          });
          this.spriteLabelEWalletDepositWorld.forEach(function (label, i) {
            var uiOpacity = label.getComponent(UIOpacity);
            if (!uiOpacity) {
              uiOpacity = label.addComponent(UIOpacity);
            }
            uiOpacity.opacity = i === selectedIndex ? 255 : 180;
          });
        };
        _proto.showContainerDepositWithEWalletVN = function showContainerDepositWithEWalletVN() {
          this.selectedToggleEWalletDepositVN(this.tabToggleEWalletDepositVN[0], "0");
        };
        _proto.selectedToggleEWalletDepositVN = function selectedToggleEWalletDepositVN(toggle, index) {
          var _this33 = this;
          if (this._internalToggleChangeDepositEWalletVN) return;
          var tabIndex = parseInt(index);
          this.nodeContentCodeEWalletVN.active = false;
          this.showEWalletDepositVN(tabIndex);
          if (tabIndex === 0) {
            this.depositEWalletWalletType = 1;
            this.lblContentNoteEWalletVN.string = App.instance.getTextLang("momo_topup_instructions");
            this.keyWalletAccountEWalletVNDeposit.string = App.instance.getTextLang("momo_account_number");
          } else if (tabIndex === 1) {
            this.depositEWalletWalletType = 3;
            this.lblContentNoteEWalletVN.string = App.instance.getTextLang("zalopay_topup_instructions");
            this.keyWalletAccountEWalletVNDeposit.string = App.instance.getTextLang("zalo_account_number");
          } else if (tabIndex === 2) {
            this.depositEWalletWalletType = 4;
            this.lblContentNoteEWalletVN.string = App.instance.getTextLang("viettelpay_topup_instructions");
            this.keyWalletAccountEWalletVNDeposit.string = App.instance.getTextLang("viettel_account_number");
          } else if (tabIndex === 3) {
            this.depositEWalletWalletType = 6;
            this.lblContentNoteEWalletVN.string = App.instance.getTextLang("vnptpay_topup_instructions");
            this.keyWalletAccountEWalletVNDeposit.string = App.instance.getTextLang("vnpt_account_number");
          } else if (tabIndex === 4) {
            this.depositEWalletWalletType = 7;
            this.lblContentNoteEWalletVN.string = App.instance.getTextLang("mobifonemoney_topup_instructions");
            this.keyWalletAccountEWalletVNDeposit.string = App.instance.getTextLang("mobifone_account_number");
          }
          App.instance.showLoading(true);
          Http.get(Configs.App.DOMAIN_CONFIG['GetButtons'], {
            CurrencyID: 1,
            ButtonType: 1
          }, function (status, response) {
            if (status === 200 && response.c === 0) {
              var isEnable = false;
              response.d.forEach(function (button) {
                var _toggle$node$getChild2;
                if (button.walletType === _this33.depositEWalletWalletType) {
                  isEnable = true;
                }
                var promoNode = (_toggle$node$getChild2 = toggle.node.getChildByName("promo")) == null || (_toggle$node$getChild2 = _toggle$node$getChild2.getChildByName("promo-sticker-flip")) == null ? void 0 : _toggle$node$getChild2.getChildByName("lblPromotion");
                if (promoNode && promoNode.getComponent(Label)) {
                  var percent = button.promotion ? button.promotion - 100 : 0;
                  // promoNode.getComponent(cc.Label).string = `${percent}%`;
                  if (percent > 0) {
                    promoNode.getComponent(Label).string = percent + "%";
                    promoNode.parent.active = true;
                  } else {
                    promoNode.parent.active = false;
                  }
                }
              });
              if (isEnable) {
                // toggle.isChecked = true;
                _this33.containerDepositWithWalletVN.active = true;
                _this33.hideContainerMenuDeposit();
                _this33.depositEWalletVNStep1.active = true;
                Http.get(Configs.App.DOMAIN_CONFIG['GetWalletGetInfo'], {
                  WalletType: _this33.depositEWalletWalletType,
                  CurrencyID: 1
                }, function (status, res) {
                  if (status === 200 && res.c === 0) {
                    _this33.lblWalletAccountEWalletVNDeposit.string = res.d.walletAccount;
                    _this33.lblWalletAccountNameEWalletVNDeposit.string = res.d.walletAccountName;
                    _this33.lblWalletNameEWalletVNDeposit = res.d.walletName;
                    _this33.lblWalletCodeEWalletVNDeposit = res.d.walletCode;
                    _this33.btnCreateCodeContentEWalletVN.getComponent(Button).interactable = true;
                    _this33.btnCreateCodeContentEWalletVN.getChildByName("Active").active = true;
                    _this33.btnCreateCodeContentEWalletVN.getChildByName("notActive").active = false;
                    _this33.lblContentEWalletVNDeposit.string = "";
                    // cc.log(res.d);
                  } else {
                    App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
                  }
                }, false);

                // this.depositEWalletVNStep2.active = false;
                // this.clearInputTempAmountDeposit(this.depositEWalletVNStep1.getComponentInChildren(cc.ToggleContainer));
              } else {
                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
              }
            } else {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
            }
            App.instance.showLoading(false);
          }, false);
        };
        _proto.showEWalletDepositVN = function showEWalletDepositVN(index) {
          // Deposit EWalletVN
          this._internalToggleChangeDepositEWalletVN = true;
          this.tabToggleEWalletDepositVN.forEach(function (tab, i) {
            tab.isChecked = i === index;
          });
          this._internalToggleChangeDepositEWalletVN = false;
          this.spriteActiveEWalletDepositVN.forEach(function (tab, i) {
            tab.active = i === index;
          });
          this.spriteNotActiveEWalletDepositVN.forEach(function (sprite, i) {
            sprite.active = i !== index;
          });
          this.spriteLabelEWalletDepositVN.forEach(function (label, i) {
            var uiOpacity = label.getComponent(UIOpacity);
            if (!uiOpacity) {
              uiOpacity = label.addComponent(UIOpacity);
            }
            uiOpacity.opacity = i === index ? 255 : 180;
          });
          this.spriteLgEWalletDepositVN.forEach(function (tab, i) {
            tab.active = i === index;
          });
        };
        _proto.showContainerDepositWithCrypToUSDT = function showContainerDepositWithCrypToUSDT() {
          this.depositCoinWalletType = 5;
          this.showContainerDepositCoin();
        };
        _proto.showContainerDepositWithCrypToBUST = function showContainerDepositWithCrypToBUST() {
          this.depositCoinWalletType = 8;
          this.showContainerDepositCoin();
        };
        _proto.showContainerDepositWithCrypToUSDC = function showContainerDepositWithCrypToUSDC() {
          this.depositCoinWalletType = 9;
          this.showContainerDepositCoin();
        };
        _proto.showContainerDepositCoin = function showContainerDepositCoin() {
          var _this34 = this;
          App.instance.showLoading(true);
          Http.get(Configs.App.DOMAIN_CONFIG['GetButtons'], {
            CurrencyID: 1,
            ButtonType: 1
          }, function (status, response) {
            if (status === 200 && response.c === 0) {
              var isEnable = false;
              response.d.forEach(function (button) {
                if (button.walletType === _this34.depositCoinWalletType) {
                  isEnable = true;
                }
              });
              if (isEnable) {
                _this34.getDataDepositCoin();
                if (_this34.depositCoinWalletType === 5) {
                  _this34.containerDepositWithCryptoUSDT.active = true;
                  _this34.depositCoinUSDTEdbAmount.string = "";
                } else if (_this34.depositCoinWalletType === 8) {
                  _this34.containerDepositWithCryptoBUST.active = true;
                  _this34.depositCoinBUSTEdbAmount.string = "";
                } else if (_this34.depositCoinWalletType === 9) {
                  _this34.containerDepositWithCryptoUSDC.active = true;
                  _this34.depositCoinUSDCEdbAmount.string = "";
                }
                _this34.hideContainerMenuDeposit();
              } else {
                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
              }
            } else {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
            }
            App.instance.showLoading(false);
          }, false);
        };
        _proto.getCardDataDeposit = function getCardDataDeposit() {
          var _this35 = this;
          if (!Configs.Login.IsLogin) {
            return;
          }
          Http.get(Configs.App.DOMAIN_CONFIG['GetListTelco'], {
            telcoType: 0
          }, function (status, response) {
            if (status === 200 && response.c === 0) {
              _this35.populateDropdownDeposit(response.d);
            }
          });
        };
        _proto.populateDropdownDeposit = function populateDropdownDeposit(data) {
          var _this36 = this;
          this.depositCardDropList.removeAllChildren();
          this.depositCardCostLabel.string = App.instance.getTextLang('txt_select_card_cost');
          this.depositCardDropListCost.active = false;
          this.depositCardEdbSeri.string = "";
          this.depositCardEdbCode.string = "";
          data.forEach(function (item) {
            var dropdownItem = instantiate(_this36.depositCardDropListItem);
            dropdownItem.active = true;
            dropdownItem.getChildByName("Label").getComponent(Label).string = item.telcoName;
            dropdownItem.on(Node.EventType.TOUCH_END, function () {
              _this36.onDropdownItemSelectedDeposit(item.telcoName);
              _this36.depositCardDropList.active = !_this36.depositCardDropList.active;
              _this36.depositCardTelcoNameLabel.string = item.telcoName;
            });
            _this36.depositCardDropList.addChild(dropdownItem);
          });
        };
        _proto.onDropdownItemSelectedDeposit = function onDropdownItemSelectedDeposit(telcoName) {
          var _this37 = this;
          Http.get(Configs.App.DOMAIN_CONFIG['GetProductList'], {
            TelcoName: telcoName,
            telcoType: 0
          }, function (status, response) {
            if (status === 200 && response.c === 0) {
              _this37.populateDropdownItemCostDeposit(response.d);
            }
          });
        };
        _proto.populateDropdownItemCostDeposit = function populateDropdownItemCostDeposit(data) {
          var _this38 = this;
          this.depositCardDropListCost.removeAllChildren();
          this.depositCardCostLabel.string = App.instance.getTextLang('txt_select_card_cost');
          this.depositCardDropListCost.active = false;
          this.depositCardTableList.removeAllChildren();
          data.forEach(function (item) {
            var dropdownItem = instantiate(_this38.depositCardDropListCostItem);
            dropdownItem.active = true;
            dropdownItem.getChildByName("Label").getComponent(Label).string = item.amount.toLocaleString("vi-VN");
            dropdownItem.on(Node.EventType.TOUCH_END, function () {
              _this38.depositCardDropListCost.active = !_this38.depositCardDropListCost.active;
              _this38.depositCardCostLabel.string = item.amount.toLocaleString("vi-VN");
            });
            _this38.depositCardDropListCost.addChild(dropdownItem);
            var tableItem = instantiate(_this38.depositCardTableItem);
            tableItem.active = true;
            var menhGia = item.amount;
            var tong = item.amount * (item.promotion / 100);
            tableItem.getChildByName("MenhGia").getComponent(Label).string = menhGia.toLocaleString("vi-VN");
            tableItem.getChildByName("Tong").getComponent(Label).string = tong.toLocaleString("vi-VN") + "";
            if (tong > menhGia) {
              var khuyenMai = (tong - menhGia) / menhGia * 100;
              tableItem.getChildByName("km").getComponent(Label).string = khuyenMai.toLocaleString() + "%";
            } else {
              tableItem.getChildByName("km").getComponent(Label).string = "";
            }
            _this38.depositCardTableList.addChild(tableItem);
          });
        };
        _proto.actShowNotifiDepositCard = function actShowNotifiDepositCard() {
          var amount = parseInt(this.depositCardCostLabel.string.replace(/\./g, ""));
          var seri = this.depositCardEdbSeri.string;
          var code = this.depositCardEdbCode.string;
          var hasError = false;
          var fields = [{
            value: amount,
            condition: isNaN(amount),
            errorNode: this.depositCardCostLabel.node.getChildByName('error')
          }, {
            value: seri,
            condition: seri.trim() === "",
            errorNode: this.depositCardEdbSeri.node.getChildByName('error')
          }, {
            value: code,
            condition: code.trim() === "",
            errorNode: this.depositCardEdbCode.node.getChildByName('error')
          }];
          fields.forEach(function (f) {
            return f.errorNode.active = false;
          });
          fields.forEach(function (f) {
            if (f.condition) {
              f.errorNode.active = true;
              hasError = true;
            }
          });
          if (hasError) {
            return;
          }
          this.depositCardNotifiConfirm.active = true;
          var seriText = "<color=#FFED26>" + seri + "</color>";
          var telcoText = "<color=#FFED26>" + this.depositCardTelcoNameLabel.string + "</color>";
          var amountText = "<color=#FFED26>" + amount.toLocaleString("vi-VN") + "</color>";
          var confirmMsg = App.instance.getTextLang("card_code_entered") + " " + seriText + ", " + telcoText + ", " + App.instance.getTextLang("card_denomination") + " " + amountText + ", " + App.instance.getTextLang("check_card_denomination_warning");
          this.depositCardNotifiConfirmLabel.getComponent(RichText).string = confirmMsg;
        };
        _proto.actAgreeSubmitDepositCard = function actAgreeSubmitDepositCard() {
          var _this39 = this;
          this.actCancelSubmitDepositCard();
          var data = {
            CurrencyID: Configs.Login.CurrencyID,
            SeriCode: this.depositCardEdbSeri.string,
            CardCode: this.depositCardEdbCode.string,
            Telco: this.depositCardTelcoNameLabel.string,
            Price: parseInt(this.depositCardCostLabel.string.replace(/\./g, "")),
            Timestamp: Utils.getTicks()
          };
          App.instance.showLoading(true);
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['TopupUrl'], payload, function (status, response) {
            App.instance.showLoading(false);
            if (response["c"] != 0) {
              _this39.showToast(_this39.lblToastDepositCard, response["r"]);
              return;
            }
            _this39.showToast(_this39.lblToastDepositCard, App.instance.getTextLang('iap259_success_transaction_processing'));
            BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);
            _this39.depositCardEdbSeri.string = "";
            _this39.depositCardEdbCode.string = "";
            _this39.depositCardCostLabel.string = App.instance.getTextLang('txt_select_card_cost');

            // if (status === 200 && response.c === 0) {
            //     // App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_deposit_card_success'));
            //     this.showToast(App.instance.getTextLang('iap259_success_transaction_processing'));
            //     BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);
            //     this.depositCardEdbSeri.string = "";
            //     this.depositCardEdbCode.string = "";
            //     this.depositCardCostLabel.string = App.instance.getTextLang('txt_select_card_cost');
            //     // this.showTab(0);
            // }else {
            //     this.showToast(App.instance.getTextLang('iap259_error_invalid_card'));
            // }
          }, false);
        };
        _proto.actCancelSubmitDepositCard = function actCancelSubmitDepositCard() {
          this.depositCardNotifiConfirm.active = false;
        };
        _proto.actSubmitDepositCard = function actSubmitDepositCard() {
          var amount = parseInt(this.depositCardCostLabel.string.replace(/\./g, ""));
          var seri = this.depositCardEdbSeri.string;
          var code = this.depositCardEdbCode.string;
          var seriText = "<color=#FFED26>" + seri + "</color>";
          var telcoText = "<color=#FFED26>" + this.depositCardTelcoNameLabel.string + "</color>";
          var amountText = "<color=#FFED26>" + amount.toLocaleString("vi-VN") + "</color>";
          var confirmMsg = "B\u1EA1n \u0111\xE3 nh\u1EADp m\xE3 " + seriText + ", " + telcoText + ", m\u1EC7nh gi\xE1 " + amountText + ", vui l\xF2ng ki\u1EC3m tra \u0111\xFAng m\u1EC7nh gi\xE1 th\u1EBB, n\u1EBFu sai Nh\xE0 Ph\xE1t H\xE0nh kh\xF4ng h\u1ED7 tr\u1EE3";
          App.instance.confirmDialog.show3(confirmMsg, App.instance.getTextLang("TITLE_MESSAGE"), function (isConfirm) {
            if (isConfirm) {
              if (!isConfirm) return;
              // let data = {
              //     CurrencyID: Configs.Login.CurrencyID,
              //     SeriCode: seri,
              //     CardCode: code,
              //     Telco: this.depositCardTelcoNameLabel.string,
              //     Price: amount,
              //     Timestamp: Utils.getTicks()
              // }
              //
              // let payload = {
              //     "Input": Utils.encryptWithRSA(JSON.stringify(data)),
              // }
              //
              // Http.post(Configs.App.DOMAIN_CONFIG['TopupUrl'], payload, (status, response) => {
              //     if (status === 200 && response.c === 0) {
              //         App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_deposit_card_success'));
              //         BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);
              //         this.showTab(0);
              //     }
              // });
            }
          });
        };

        _proto.actSubmitDepositBankVN = function actSubmitDepositBankVN() {
          var _this40 = this;
          var amount = parseInt(this.edbDepositBankVNAmount.string);
          this.clearInputTempAmountDeposit(this.depositBankVNStep1.getComponentInChildren(ToggleContainer));
          if (isNaN(amount)) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_invalid_input'));
            return;
          }
          App.instance.showLoading(true);
          var data = {
            WalletType: 2,
            IAmount: amount,
            CurrencyID: Configs.Login.CurrencyID,
            Timestamp: Utils.getTicks()
          };
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['BankTopup'], payload, function (_status, response) {
            App.instance.showLoading(false);
            if (response.c < 0) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang("me" + response.c));
              return;
            }
            _this40.depositBankVNStep1.active = false;
            _this40.depositBankVNStep2.active = true;
            _this40.depositBankVNCode.string = response.d.referTransID;
            _this40.depositBankVNWalletNameLabel.string = response.d.walletName;
            _this40.depositBankVNWalletNumberLabel.string = response.d.walletAccount;
            _this40.depositBankVNWalletAccountLabel.string = response.d.walletAccountName;
            _this40.depositBankVNAmountLabel.string = amount.toLocaleString("VN");
            Utils.loadSpriteFrameFromBase64(response.d.qrCode, function (sprFrame) {
              _this40.depositBankVNQR.spriteFrame = sprFrame;
            });
            _this40.schedule(_this40.depositBankVNCountdownFunc = function () {
              var time = new Date(response.d.timeExpired).getTime() - new Date().getTime();
              if (time < 0) {
                _this40.unschedule(_this40.depositBankVNCountdownFunc);
                _this40.depositBankVNTime.string = '00:00';
                _this40.depositBankVNStep1.active = true;
                _this40.depositBankVNStep2.active = false;
                return;
              }
              var minutes = Math.floor(time % (1000 * 60 * 60) / (1000 * 60));
              var seconds = Math.floor(time % (1000 * 60) / 1000);
              var minutesStr = minutes < 10 ? "0" + minutes : "" + minutes;
              var secondsStr = seconds < 10 ? "0" + seconds : "" + seconds;
              _this40.depositBankVNTime.string = minutesStr + ":" + secondsStr;
            }, 1);
          });
        };
        _proto.actSubmitDepositEWallet = function actSubmitDepositEWallet() {
          var _this41 = this;
          var amount = 0;
          if ([1, 3, 4, 6, 7].includes(this.depositEWalletWalletType)) {
            amount = parseInt(this.edbDepositEWalletVNAmount.string);
            this.clearInputTempAmountDeposit(this.depositEWalletVNStep1.getComponentInChildren(ToggleContainer));
          } else if ([10, 12, 13, 14].includes(this.depositEWalletWalletType)) {
            amount = parseInt(this.edbDepositEWalletWorldAmount.string);
            this.clearInputTempAmountDeposit(this.depositEWalletWorldStep1.getComponentInChildren(ToggleContainer));
          }
          if (isNaN(amount) || amount == 0) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_invalid_input'));
            return;
          }
          App.instance.showLoading(true);
          var data = {
            WalletType: this.depositEWalletWalletType,
            IAmount: amount,
            CurrencyID: Configs.Login.CurrencyID,
            Timestamp: Utils.getTicks()
          };
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['WalletCreateTrans'], payload, function (status, response) {
            App.instance.showLoading(false);
            if (response.c < 0) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang("me" + response.c));
              return;
            }
            var walletAccountName = response.d.walletAccountName;
            var walletAccount = response.d.walletAccount;
            var walletCode = response.d.walletCode;
            var timeExpired = response.d.timeExpired;
            if ([1, 3, 4, 6, 7].includes(_this41.depositEWalletWalletType)) {
              _this41.depositEWalletVNStep1.active = false;
              _this41.depositEWalletVNStep2.active = true;
              _this41.depositEWalletVNWalletAccountLabel.string = walletAccountName;
              _this41.depositEWalletVNWalletNumberLabel.string = walletAccount;
              _this41.depositEWalletVNAmount.string = amount.toLocaleString("VN");
              _this41.depositEWalletVNCode.string = walletCode;
              Utils.loadSpriteFrameFromBase64(response.d.qrCode, function (sprFrame) {
                _this41.depositEWalletVNQR.spriteFrame = sprFrame;
              });
              _this41.unschedule(_this41.depositEWalletVNCountdownFunc);
              _this41.schedule(_this41.depositEWalletVNCountdownFunc = function () {
                var time = new Date(timeExpired).getTime() - new Date().getTime();
                if (time < 0) {
                  _this41.unschedule(_this41.depositEWalletVNCountdownFunc);
                  _this41.depositEWalletVNTime.string = '00:00';
                  _this41.depositEWalletVNStep1.active = true;
                  _this41.depositEWalletVNStep2.active = false;
                  return;
                }
                var minutes = Math.floor(time % (1000 * 60 * 60) / (1000 * 60));
                var seconds = Math.floor(time % (1000 * 60) / 1000);
                var minutesStr = minutes < 10 ? "0" + minutes : "" + minutes;
                var secondsStr = seconds < 10 ? "0" + seconds : "" + seconds;
                _this41.depositEWalletVNTime.string = minutesStr + ":" + secondsStr;
              }, 1);
            } else if ([10, 12, 13, 14].includes(_this41.depositEWalletWalletType)) {
              _this41.depositEWalletWorldStep1.active = false;
              _this41.depositEWalletWorldStep2.active = true;
              _this41.depositEWalletWorldWalletAccountLabel.string = walletAccountName;
              _this41.depositEWalletWorldWalletNumberLabel.string = walletAccount;
              _this41.depositEWalletWorldAmount.string = amount.toLocaleString("VN");
              _this41.depositEWalletWorldCode.string = walletCode;
              _this41.depositEWalletWorldTime.string = new Date(response.d.timeExpired).toLocaleString("VN");
            }
          });
        };
        _proto.getDataDepositCoin = function getDataDepositCoin() {
          var _this42 = this;
          Http.get(Configs.App.DOMAIN_CONFIG['ECoinGetInfo'], {
            CurrencyID: Configs.Login.CurrencyID,
            WalletType: this.depositCoinWalletType
          }, function (status, response) {
            if (status === 200) {
              var key = _this42.walletType[_this42.depositCoinWalletType];
              _this42["depositCoin" + key + "WalletAddressLabel"].string = response.d.address;
            }
          });
        };
        _proto.actSubmitDepositCoin = function actSubmitDepositCoin() {
          var key = this.walletType[this.depositCoinWalletType];
          var amountStr = this["depositCoin" + key + "EdbAmount"].string.trim();
          if (amountStr === "") {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_empty_amount'));
            return;
          }
          var amount = parseFloat(amountStr);
          if (isNaN(amount)) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_invalid_amount'));
            return;
          }
          if (amount < 5) {
            var warnKey = key === "USDT" ? 'usdt_minimum_warning' : 'usdc_minimum_warning';
            App.instance.alertDialog.showMsg(App.instance.getTextLang(warnKey));
            return;
          }
          App.instance.showLoading(true);
          var data = {
            Address: this["depositCoin" + key + "WalletAddressLabel"].string,
            Amount: amount,
            WalletType: this.depositCoinWalletType,
            CurrencyID: Configs.Login.CurrencyID,
            Timestamp: Utils.getTicks()
          };
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['ECoinCreateTrans'], payload, function (status, response) {
            App.instance.showLoading(false);
            if (status === 200) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_success'));
            }
          });
        };
        _proto.actNexStep2Transfer = function actNexStep2Transfer() {
          this.step1ContainerTransfer.active = false;
          this.step2ContainerTransfer.active = true;
          this.editBoxUserNameTransfer.string = "";
          this.editBoxUserNameAgainTransfer.string = "";
          this.editBoxCoinTransfer.string = "";
          this.editBoxReasonTransfer.string = "";
        };
        _proto.onclickTempAmountDeposit = function onclickTempAmountDeposit(event, data) {
          this.edbDepositBankVNAmount.string = data;
          this.edbDepositEWalletVNAmount.string = data;
          this.edbDepositEWalletWorldAmount.string = data;
          var target = event.target.getComponent(Toggle);
          target.node.parent.getComponent(ToggleContainer).toggleItems.forEach(function (toggle) {
            var textNode = toggle.node.getChildByName('text');
            var label = textNode == null ? void 0 : textNode.getComponent(Label);
            if (!label) return;
            if (target !== toggle) {
              toggle.isChecked = false;
              label.color = new Color().fromHEX('#69250D');
            } else {
              toggle.isChecked = true;
              label.color = Color.WHITE;
            }
          });
        };
        _proto.clearInputTempAmountDepositUI = function clearInputTempAmountDepositUI(event) {
          this.clearInputTempAmountDeposit(event.target.parent.parent.getComponentInChildren(ToggleContainer));
        };
        _proto.clearInputTempAmountDeposit = function clearInputTempAmountDeposit(tc) {
          this.edbDepositBankVNAmount.string = "";
          this.edbDepositEWalletVNAmount.string = "";
          this.edbDepositEWalletWorldAmount.string = "";
          tc.toggleItems.forEach(function (toggle) {
            toggle.isChecked = false;
            var textNode = toggle.node.getChildByName('text');
            var label = textNode == null ? void 0 : textNode.getComponent(Label);
            if (label) {
              label.color = new Color().fromHEX('#69250D');
            }
          });
        };
        _proto.backToMenuDeposit = function backToMenuDeposit() {
          this.showTab(0);
          this.containerDepositWithCard.active = false;
          this.containerDepositWithBank.active = false;
          this.containerDepositWithWalletWorld.active = false;
          this.containerDepositWithWalletVN.active = false;
          this.containerDepositWithCryptoUSDT.active = false;
          this.containerDepositWithCryptoUSDC.active = false;
          this.containerDepositWithCryptoBUST.active = false;
          this.containerCashQR.active = false;
          this.containerBankThaiLand.active = false;
        };
        _proto.backToMenuWithdraw = function backToMenuWithdraw() {
          this.showTab(2);
          this.containerWithDrawWithCard.active = false;
          this.containerWithDrawWithBank.active = false;
          this.containerWithDrawWithWalletWorld.active = false;
          this.containerWithDrawWithWalletVN.active = false;
          this.containerWithDrawWithCrypto.active = false;
          this.containerWithDrawWithBankThaiLand.active = false;
        };
        _proto.onTabSelectedCashQR = function onTabSelectedCashQR(toggle, index) {
          // toggle.isChecked = true;
          if (this._internalToggleChangeDepositCashQR) return;
          var tabIndex = parseInt(index);
          this.showTabCashQR(tabIndex);
        };
        _proto.showTabCashQR = function showTabCashQR(index) {
          this._internalToggleChangeDepositCashQR = true;
          this.tabCashQR.forEach(function (tab, i) {
            tab.isChecked = i === index;
          });
          this._internalToggleChangeDepositCashQR = false;
          this.spriteActiveTabCashQR.forEach(function (tab, i) {
            tab.active = i === index;
          });
          this.spriteNotActiveTabCashQR.forEach(function (sprite, i) {
            sprite.active = i !== index;
          });
          if (index === 2) {
            this.depositCashQRBankWalletType = 17;
            this.boxDepositCashQRBankName.active = true;
            this.containerCashQREWalletVN.active = false;
            this.containerCashQREWalletWorld.active = false;
            this.clearInputTempAmountDepositCashQR(this.step1ContainerCashQR.getComponentInChildren(ToggleContainer));
            this.step2ContainerCashQR.active = false;
            this.step1ContainerCashQR.active = true;
            this.step1ContainerCashQRUSD.active = false;
            this.lblTextNotifiStep1USD.string = "";
            this.lblTextNotifiStep1.string = "";
          }
          if (index === 0) {
            this.showEWalletDepositVNCashQR(0);
            this.depositCashQRBankWalletType = 18;
            this.containerCashQREWalletVN.active = true;
            this.containerCashQREWalletWorld.active = false;
            this.clearInputTempAmountDepositCashQR(this.step1ContainerCashQR.getComponentInChildren(ToggleContainer));
            this.step2ContainerCashQR.active = false;
            this.step1ContainerCashQR.active = true;
            this.step1ContainerCashQRUSD.active = false;
            this.lblTextNotifiStep1USD.string = "";
            this.lblTextNotifiStep1.string = "";
            this.placeHolderEdbAmount.active = true;
          }
          if (index === 1) {
            this.setEnableDisableEWalletWorldCashQR();
            // this.showEWalletDepositWorldCashQR(0);
            this.depositCashQRBankWalletType = 23;
            this.containerCashQREWalletVN.active = false;
            this.containerCashQREWalletWorld.active = true;
            this.clearInputTempAmountDepositCashQRUSD(this.step1ContainerCashQRUSD.getComponentInChildren(ToggleContainer));
            this.step2ContainerCashQR.active = false;
            this.step1ContainerCashQR.active = false;
            this.step1ContainerCashQRUSD.active = true;
            this.lblTextNotifiStep1USD.string = "";
            this.lblTextNotifiStep1.string = "";
            this.placeHolderEdbAmountUSD.active = true;
          }
        };
        _proto.setEnableDisableEWalletWorldCashQR = function setEnableDisableEWalletWorldCashQR() {
          var _this43 = this;
          Http.get(Configs.App.DOMAIN_CONFIG['GetButtons'], {
            CurrencyID: 1,
            ButtonType: 1
          }, function (status, response) {
            if (status === 200 && response.c === 0) {
              var enabledWallets = response.d.map(function (b) {
                return b.walletType;
              });
              var walletMap = [{
                eWalletType: 10
              },
              // PayPal
              {
                eWalletType: 12
              },
              // PerfectMoney
              {
                eWalletType: 14
              },
              // Payeer
              {
                eWalletType: 13
              } // WebMoney
              ];

              _this43.tabToggleEWalletWorldCashQR.forEach(function (toggleNode, i) {
                var walletType = walletMap[i].eWalletType;
                toggleNode.node.active = enabledWallets.includes(walletType);
              });
              var firstEnabledIndex = walletMap.findIndex(function (w) {
                return enabledWallets.includes(w.eWalletType);
              });
              if (firstEnabledIndex !== -1) {
                _this43.showEWalletDepositWorldCashQR(firstEnabledIndex);
                _this43.depositCashQRBankWalletType = [23, 26, 24, 25][firstEnabledIndex];
                _this43.depositEWalletWalletTypeCashQRWorld = walletMap[firstEnabledIndex].eWalletType;
              } else {
                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
              }
            } else {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
            }
            App.instance.showLoading(false);
          });
        };
        _proto.showContainerCashQR = function showContainerCashQR() {
          var _this44 = this;
          App.instance.showLoading(true);
          Http.get(Configs.App.DOMAIN_CONFIG['GetButtons'], {
            CurrencyID: 1,
            ButtonType: 1
          }, function (status, response) {
            if (status === 200 && response.c === 0) {
              var isEnable = false;
              response.d.forEach(function (button) {
                if (button.walletType === 2) {
                  isEnable = true;
                }
              });
              if (isEnable) {
                _this44.showTabCashQR(0);
                _this44.showEWalletDepositVNCashQR(0);
                _this44.depositCashQRBankWalletType = 18;
                _this44.containerCashQR.active = true;
                _this44.hideContainerMenuDeposit();
                _this44.step1ContainerCashQR.active = true;
                _this44.step2ContainerCashQR.active = false;
                _this44.clearInputTempAmountDepositCashQR(_this44.step1ContainerCashQR.getComponentInChildren(ToggleContainer));
                _this44.containerCashQREWalletVN.active = true;
                _this44.containerCashQREWalletWorld.active = false;
              } else {
                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
              }
            } else {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
            }
            App.instance.showLoading(false);
          }, false);
        };
        _proto.onclickTempAmountCashQR = function onclickTempAmountCashQR(event, data) {
          this.placeHolderEdbAmount.active = false;
          var number = parseInt(data.replace(/\D/g, ''), 10);
          this.edbDepositCashQR.string = isNaN(number) ? "0" : number.toLocaleString("vi-VN");

          // var target = event.target.getComponent(Toggle);
          // target.node.parent.getComponent(ToggleContainer).toggleItems.forEach((toggle: Toggle) => {
          //     const textNode = toggle.node.getChildByName('text');
          //     const label = textNode?.getComponent(Label);
          //     if (!label) return;
          //
          //     if (target !== toggle) {
          //         toggle.isChecked = false;
          //         label.color = new Color().fromHEX('#69250D');
          //     } else {
          //         toggle.isChecked = true;
          //         label.color = Color.WHITE;
          //     }
          // });
        };

        _proto.onclickTempAmountCashQRUSD = function onclickTempAmountCashQRUSD(event, data) {
          this.placeHolderEdbAmountUSD.active = false;
          var number = parseInt(data.replace(/\D/g, ''), 10);
          this.edbDepositCashQRUSD.string = isNaN(number) ? "0" : number.toLocaleString("vi-VN");

          // var target = event.target.getComponent(Toggle);
          // target.node.parent.getComponent(ToggleContainer).toggleItems.forEach((toggle: Toggle) => {
          //     const textNode = toggle.node.getChildByName('text');
          //     const label = textNode?.getComponent(Label);
          //     if (!label) return;
          //
          //     if (target !== toggle) {
          //         toggle.isChecked = false;
          //         label.color = new Color().fromHEX('#69250D');
          //     } else {
          //         toggle.isChecked = true;
          //         label.color = Color.WHITE;
          //     }
          // });
        };

        _proto.clearInputTempAmountDepositCashQR = function clearInputTempAmountDepositCashQR(tc) {
          this.edbDepositCashQR.string = "";
          tc.toggleItems.forEach(function (toggle) {
            toggle.setIsCheckedWithoutNotify(false);
          });

          // tc.toggleItems.forEach((toggle: Toggle) => {
          //     toggle.isChecked = false;
          //
          //     const textNode = toggle.node.getChildByName('text');
          //     const label = textNode?.getComponent(Label);
          //     if (label) {
          //         label.color = new Color().fromHEX('#69250D');
          //     }
          // });
        };

        _proto.clearInputTempAmountDepositCashQRUSD = function clearInputTempAmountDepositCashQRUSD(tc) {
          this.edbDepositCashQRUSD.string = "";
          tc.toggleItems.forEach(function (toggle) {
            toggle.setIsCheckedWithoutNotify(false);
          });
          // tc.toggleItems.forEach((toggle: Toggle) => {
          //     toggle.isChecked = false;
          //
          //     const textNode = toggle.node.getChildByName('text');
          //     const label = textNode?.getComponent(Label);
          //     if (label) {
          //         label.color = new Color().fromHEX('#69250D');
          //     }
          // });
        };

        _proto.clearInputTempAmountCashQRUI = function clearInputTempAmountCashQRUI(event) {
          this.clearInputTempAmountDepositCashQR(event.target.parent.parent.getComponentInChildren(ToggleContainer));
          this.placeHolderEdbAmount.active = true;
        };
        _proto.selectedToggleEWalletDepositVNCashQR = function selectedToggleEWalletDepositVNCashQR(toggle, index) {
          var _this45 = this;
          if (this._internalToggleChangeDepositCashQREWalletVN) return;
          var tabIndex = parseInt(index);
          this.showEWalletDepositVNCashQR(tabIndex);
          this.lblTextNotifiStep1.string = "";
          this.placeHolderEdbAmount.active = true;
          if (tabIndex === 0) {
            this.depositCashQRBankWalletType = 18;
            this.depositEWalletWalletTypeCashQRVN = 1;
          } else if (tabIndex === 1) {
            this.depositCashQRBankWalletType = 19;
            this.depositEWalletWalletTypeCashQRVN = 3;
          } else if (tabIndex === 2) {
            this.depositCashQRBankWalletType = 27;
            this.depositEWalletWalletTypeCashQRVN = 4;
          } else if (tabIndex === 3) {
            this.depositCashQRBankWalletType = 21;
            this.depositEWalletWalletTypeCashQRVN = 6;
          } else if (tabIndex === 4) {
            this.depositCashQRBankWalletType = 22;
            this.depositEWalletWalletTypeCashQRVN = 7;
          }
          App.instance.showLoading(true);
          Http.get(Configs.App.DOMAIN_CONFIG['GetButtons'], {
            CurrencyID: 1,
            ButtonType: 1
          }, function (status, response) {
            if (status === 200 && response.c === 0) {
              var isEnable = false;
              // cc.log(response.d);
              response.d.forEach(function (button) {
                if (button.walletType === _this45.depositEWalletWalletTypeCashQRVN) {
                  isEnable = true;
                }
              });
              if (isEnable) {
                // toggle.isChecked = true;
                // this.showEWalletDepositVNCashQR(tabIndex);
                _this45.clearInputTempAmountDepositCashQR(_this45.step1ContainerCashQR.getComponentInChildren(ToggleContainer));
                _this45.step2ContainerCashQR.active = false;
                _this45.step1ContainerCashQR.active = true;
              } else {
                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
              }
            } else {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
            }
            App.instance.showLoading(false);
          }, false);
        };
        _proto.showEWalletDepositVNCashQR = function showEWalletDepositVNCashQR(index) {
          // Deposit EWalletVN
          this._internalToggleChangeDepositCashQREWalletVN = true;
          this.tabToggleEWalletVNCashQR.forEach(function (tab, i) {
            tab.isChecked = i === index;
          });
          this._internalToggleChangeDepositCashQREWalletVN = false;
          this.spriteActiveEWalletVNCashQR.forEach(function (tab, i) {
            tab.active = i === index;
          });
          this.spriteNotActiveEWalletVNCashQR.forEach(function (sprite, i) {
            sprite.active = i !== index;
          });
          this.spriteLabelEWalletVNCashQR.forEach(function (label, i) {
            var uiOpacity = label.getComponent(UIOpacity);
            if (uiOpacity) {
              uiOpacity.opacity = i === index ? 255 : 180;
            }
          });
        };
        _proto.selectedToggleEWalletDepositWorldCashQR = function selectedToggleEWalletDepositWorldCashQR(toggle, index) {
          var _this46 = this;
          if (this._internalToggleChangeDepositCashQREWalletWorld) return;
          var tabIndex = parseInt(index);
          this.showEWalletDepositWorldCashQR(tabIndex);
          this.lblTextNotifiStep1USD.string = "";
          this.placeHolderEdbAmountUSD.active = true;
          if (tabIndex === 0) {
            this.depositCashQRBankWalletType = 23;
            this.depositEWalletWalletTypeCashQRWorld = 10;
          } else if (tabIndex === 1) {
            this.depositCashQRBankWalletType = 26;
            this.depositEWalletWalletTypeCashQRWorld = 12;
          } else if (tabIndex === 2) {
            this.depositCashQRBankWalletType = 24;
            this.depositEWalletWalletTypeCashQRWorld = 14;
          } else if (tabIndex === 3) {
            this.depositCashQRBankWalletType = 25;
            this.depositEWalletWalletTypeCashQRWorld = 13;
          }
          App.instance.showLoading(true);
          Http.get(Configs.App.DOMAIN_CONFIG['GetButtons'], {
            CurrencyID: 1,
            ButtonType: 1
          }, function (status, response) {
            if (status === 200 && response.c === 0) {
              var isEnable = false;
              response.d.forEach(function (button) {
                if (button.walletType === _this46.depositEWalletWalletTypeCashQRWorld) {
                  isEnable = true;
                }
              });
              if (isEnable) {
                // toggle.isChecked = true;
                // this.showEWalletDepositWorldCashQR(tabIndex);
                _this46.clearInputTempAmountDepositCashQR(_this46.step1ContainerCashQR.getComponentInChildren(ToggleContainer));
                _this46.step2ContainerCashQR.active = false;
                _this46.step1ContainerCashQR.active = false;
                _this46.step1ContainerCashQRUSD.active = true;
              } else {
                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
              }
            } else {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
            }
            App.instance.showLoading(false);
          }, false);
        };
        _proto.showEWalletDepositWorldCashQR = function showEWalletDepositWorldCashQR(index) {
          // Deposit EWalletWorld
          this._internalToggleChangeDepositCashQREWalletWorld = true;
          this.tabToggleEWalletWorldCashQR.forEach(function (tab, i) {
            tab.isChecked = i === index;
          });
          this._internalToggleChangeDepositCashQREWalletWorld = false;
          this.spriteActiveEWalletWorldCashQR.forEach(function (tab, i) {
            tab.active = i === index;
          });
          this.spriteNotActiveEWalletWorldCashQR.forEach(function (sprite, i) {
            sprite.active = i !== index;
          });
          this.spriteLabelEWalletWorldCashQR.forEach(function (label, i) {
            var uiOpacity = label.getComponent(UIOpacity);
            if (uiOpacity) {
              uiOpacity.opacity = i === index ? 255 : 180;
            }
            // label.opacity = i === index ? 255 : 180;
          });
        };

        _proto.actSubmitDepositCashQR = function actSubmitDepositCashQR() {
          var _this47 = this;
          var amount = 0;
          var isVND = false;
          // cc.log("---depositCashQRBankWalletType " +this.depositCashQRBankWalletType);
          if (this.depositCashQRBankWalletType === 17) {
            isVND = true;
            this.boxDepositCashQRBankName.active = true;
            amount = parseFloat(this.edbDepositCashQR.string.replace(/\./g, ''));
            this.clearInputTempAmountDepositCashQR(this.step1ContainerCashQR.getComponentInChildren(ToggleContainer));
          } else if ([18, 19, 21, 22, 27].includes(this.depositCashQRBankWalletType)) {
            isVND = true;
            this.boxDepositCashQRBankName.active = false;
            amount = parseFloat(this.edbDepositCashQR.string.replace(/\./g, ''));
            this.clearInputTempAmountDepositCashQR(this.step1ContainerCashQR.getComponentInChildren(ToggleContainer));
          } else if ([23, 24, 25, 26].includes(this.depositCashQRBankWalletType)) {
            isVND = false;
            this.boxDepositCashQRBankName.active = false;
            amount = parseFloat(this.edbDepositCashQRUSD.string.replace(/\./g, ''));
            this.clearInputTempAmountDepositCashQRUSD(this.step1ContainerCashQRUSD.getComponentInChildren(ToggleContainer));
          }
          if (isNaN(amount) || amount <= 0) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_invalid_input'));
            return;
          }
          if (isVND) {
            if (amount < 10000 || amount > 20000000) {
              this.lblTextNotifiStep1.string = "Bạn cần nhập tối thiểu 10.000 và tối đa 20.000.000";
              return;
            }
          } else {
            if (amount < 1 || amount > 5000) {
              this.lblTextNotifiStep1USD.string = "Bạn cần nhập tối thiểu 1 và tối đa 5.000";
              return;
            }
          }

          // if (isVND && amount < 10000 || amount > 20000000) {
          //     this.lblTextNotifiStep1.string = "Bạn cần nhập tối thiểu 10.000 và tối đa 20.000.000";
          //     return;
          // }
          //
          // if (!isVND && amount < 1 || amount > 5000) {
          //     this.lblTextNotifiStep1USD.string = "Bạn cần nhập tối thiểu 1 và tối đa 5.000";
          //     return;
          // }

          App.instance.showLoading(true);
          var data = {
            IAmount: amount,
            WalletType: this.depositCashQRBankWalletType,
            CurrencyID: Configs.Login.CurrencyID,
            Timestamp: Utils.getTicks()
          };
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['QRCodeCreateTran'], payload, function (status, response) {
            App.instance.showLoading(false);
            if (response.c < 0) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang("me" + response.c));
              return;
            }
            _this47.checkWallet(Number(_this47.depositCashQRBankWalletType));

            // cc.log(response.d);
            var walletBankName = response.d.walletName;
            var walletAccountName = response.d.walletAccountName;
            var walletAccount = response.d.walletAccount;
            var walletCode = response.d.walletCode;
            var timeExpired = response.d.timeExpired;
            var referTransID = response.d.referTransID;
            _this47.step1ContainerCashQR.active = false;
            _this47.step1ContainerCashQRUSD.active = false;
            _this47.step2ContainerCashQR.active = true;
            _this47.lblDepositCashQRBankName.string = walletBankName;
            _this47.lblDepositCashQRNumberSTK.string = walletAccount;
            _this47.lblDepositCashQRNameOwner.string = walletAccountName;
            _this47.lblDepositCashQRContent.string = referTransID;
            if (isVND) {
              _this47.lblDepositCashQRAmount.string = amount.toLocaleString("vi-VN") + " VNĐ";
            } else {
              _this47.lblDepositCashQRAmount.string = amount.toLocaleString("vi-VN") + " USD";
            }
            // cc.log(response.d.qrCode);
            if (response.d.qrCode) {
              _this47.lblTimeWhenNotQR.string = "";
              _this47.lblTimeNoteWhenNotQR.string = "";
              _this47.depositSpriteCashQR.spriteFrame = null;
              _this47.containerQRCodeSprite.active = true;
              Utils.loadSpriteFrameFromBase64(response.d.qrCode, function (sprFrame) {
                _this47.depositSpriteCashQR.spriteFrame = sprFrame;
                _this47.depositSpriteCashQR.node.getComponent(UITransform).setContentSize(300, 300);
              });
            } else {
              _this47.containerQRCodeSprite.active = false;
              _this47.depositSpriteCashQR.spriteFrame = null;
              var expiredDate = new Date(response.d.timeExpired);
              var day = expiredDate.getDate().toString().padStart(2, '0');
              var month = (expiredDate.getMonth() + 1).toString().padStart(2, '0');
              var year = expiredDate.getFullYear();
              var hours = expiredDate.getHours().toString().padStart(2, '0');
              var minutes = expiredDate.getMinutes().toString().padStart(2, '0');
              var seconds = expiredDate.getSeconds().toString().padStart(2, '0');
              _this47.lblTimeWhenNotQR.string = App.instance.getTextLang("iap242") + (" " + day + "/" + month + "/" + year + " " + hours + ":" + minutes + ":" + seconds);
              _this47.lblTimeNoteWhenNotQR.string = App.instance.getTextLang("one_time_code");
              return;
            }
            _this47.unschedule(_this47.depositCashQRCountdownFunc);
            _this47.schedule(_this47.depositCashQRCountdownFunc = function () {
              var time = new Date(timeExpired).getTime() - new Date().getTime();
              if (time < 0) {
                _this47.unschedule(_this47.depositCashQRCountdownFunc);
                _this47.lblDepositCashQRTime.string = '00:00';
                if (isVND) {
                  _this47.step1ContainerCashQR.active = true;
                } else {
                  _this47.step1ContainerCashQRUSD.active = true;
                }
                _this47.step2ContainerCashQR.active = false;
                return;
              }
              var minutes = Math.floor(time % (1000 * 60 * 60) / (1000 * 60));
              var seconds = Math.floor(time % (1000 * 60) / 1000);
              var minutesStr = minutes < 10 ? "0" + minutes : "" + minutes;
              var secondsStr = seconds < 10 ? "0" + seconds : "" + seconds;
              _this47.lblDepositCashQRTime.string = minutesStr + ":" + secondsStr;
            }, 1);
          });
        };
        _proto.checkWallet = function checkWallet(index) {
          switch (index) {
            case 18:
              this.lblTextUserNameCashQR.string = App.instance.getTextLang("18_momo");
              break;
            case 19:
              this.lblTextUserNameCashQR.string = App.instance.getTextLang("19_zalo");
              break;
            case 27:
              this.lblTextUserNameCashQR.string = App.instance.getTextLang("27_viettelpay");
              break;
            case 21:
              this.lblTextUserNameCashQR.string = App.instance.getTextLang("21_vnpt");
              break;
            case 22:
              this.lblTextUserNameCashQR.string = App.instance.getTextLang("22_mobifone");
              break;
            case 23:
              this.lblTextUserNameCashQR.string = App.instance.getTextLang("23_paypal");
              break;
            case 26:
              this.lblTextUserNameCashQR.string = App.instance.getTextLang("26_payeer");
              break;
            case 24:
              this.lblTextUserNameCashQR.string = App.instance.getTextLang("24_perfect");
              break;
            case 25:
              this.lblTextUserNameCashQR.string = App.instance.getTextLang("25_web");
              break;
            default:
              this.lblTextUserNameCashQR.string = App.instance.getTextLang("default_wallet");
              break;
          }
        };
        _proto.actCreateContentDepositBank = function actCreateContentDepositBank() {
          var _this48 = this;
          App.instance.showLoading(true);
          var data = {
            WalletAccount: this.lblNumberBankDeposit.string,
            WalletAccountName: this.lblNameAccountBank.string,
            WalletName: this.lblNameBankDeposit.string,
            WalletCode: this.walletCodeDeposit,
            WalletType: 2,
            CurrencyID: Configs.Login.CurrencyID,
            Timestamp: Utils.getTicks()
          };
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['BankTopup'], payload, function (_status, response) {
            App.instance.showLoading(false);
            if (response.c < 0) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang("me" + response.c));
              return;
            }
            _this48.nodeContentCodeBank.active = true;
            _this48.lblCodeContent.string = response.d.referTransID;
            var expiredDate = new Date(response.d.timeExpired);
            var day = expiredDate.getDate().toString().padStart(2, '0');
            var month = (expiredDate.getMonth() + 1).toString().padStart(2, '0');
            var year = expiredDate.getFullYear();
            var hours = expiredDate.getHours().toString().padStart(2, '0');
            var minutes = expiredDate.getMinutes().toString().padStart(2, '0');
            var seconds = expiredDate.getSeconds().toString().padStart(2, '0');
            _this48.lblTimeExpired.string = App.instance.getTextLang("iap242") + (" " + day + "/" + month + "/" + year + " " + hours + ":" + minutes + ":" + seconds);
            _this48.btnCreateCodeContent.getComponent(Button).interactable = false;
            _this48.btnCreateCodeContent.getChildByName("Active").active = false;
            _this48.btnCreateCodeContent.getChildByName("notActive").active = true;
          });
        };
        _proto.actCreateContentDepositEWalletVN = function actCreateContentDepositEWalletVN() {
          var _this49 = this;
          App.instance.showLoading(true);
          var data = {
            WalletAccount: this.lblWalletAccountEWalletVNDeposit.string,
            WalletAccountName: this.lblWalletAccountNameEWalletVNDeposit.string,
            WalletName: this.lblWalletNameEWalletVNDeposit,
            WalletCode: this.lblWalletCodeEWalletVNDeposit,
            WalletType: this.depositEWalletWalletType,
            CurrencyID: Configs.Login.CurrencyID,
            Timestamp: Utils.getTicks()
          };
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['WalletCreateTrans'], payload, function (_status, response) {
            App.instance.showLoading(false);
            if (response.c < 0) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang("me" + response.c));
              return;
            }
            _this49.nodeContentCodeEWalletVN.active = true;
            _this49.lblContentEWalletVNDeposit.string = response.d.referTransID;
            var expiredDate = new Date(response.d.timeExpired);
            var day = expiredDate.getDate().toString().padStart(2, '0');
            var month = (expiredDate.getMonth() + 1).toString().padStart(2, '0');
            var year = expiredDate.getFullYear();
            var hours = expiredDate.getHours().toString().padStart(2, '0');
            var minutes = expiredDate.getMinutes().toString().padStart(2, '0');
            var seconds = expiredDate.getSeconds().toString().padStart(2, '0');
            _this49.lblTimeExpiredEWalletVN.string = App.instance.getTextLang("iap242") + (" " + day + "/" + month + "/" + year + " " + hours + ":" + minutes + ":" + seconds);
            _this49.btnCreateCodeContentEWalletVN.getComponent(Button).interactable = false;
            _this49.btnCreateCodeContentEWalletVN.getChildByName("Active").active = false;
            _this49.btnCreateCodeContentEWalletVN.getChildByName("notActive").active = true;
          });
        };
        _proto.actCreateContentDepositEWalletWorld = function actCreateContentDepositEWalletWorld() {
          var _this50 = this;
          App.instance.showLoading(true);
          var data = {
            WalletAccount: this.lblWalletAccountEWalletWorldDeposit.string,
            WalletAccountName: this.lblWalletAccountNameEWalletWorldDeposit.string,
            WalletName: this.lblWalletNameEWalletWorldDeposit,
            WalletCode: this.lblWalletCodeEWalletWorldDeposit,
            WalletType: this.depositEWalletWalletType,
            CurrencyID: Configs.Login.CurrencyID,
            Timestamp: Utils.getTicks()
          };
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['WalletCreateTrans'], payload, function (_status, response) {
            App.instance.showLoading(false);
            if (response.c < 0) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang("me" + response.c));
              return;
            }
            _this50.nodeContentCodeEWalletWorld.active = true;
            _this50.lblContentEWalletWorldDeposit.string = response.d.referTransID;
            var expiredDate = new Date(response.d.timeExpired);
            var day = expiredDate.getDate().toString().padStart(2, '0');
            var month = (expiredDate.getMonth() + 1).toString().padStart(2, '0');
            var year = expiredDate.getFullYear();
            var hours = expiredDate.getHours().toString().padStart(2, '0');
            var minutes = expiredDate.getMinutes().toString().padStart(2, '0');
            var seconds = expiredDate.getSeconds().toString().padStart(2, '0');
            _this50.lblTimeExpiredEWalletWorld.string = App.instance.getTextLang("iap242") + (" " + day + "/" + month + "/" + year + " " + hours + ":" + minutes + ":" + seconds);
            _this50.btnCreateCodeContentEWalletWorld.getComponent(Button).interactable = false;
            _this50.btnCreateCodeContentEWalletWorld.getChildByName("Active").active = false;
            _this50.btnCreateCodeContentEWalletWorld.getChildByName("notActive").active = true;
          });
        };
        _proto.getDataBankTrucTiep = function getDataBankTrucTiep() {
          var _this51 = this;
          Http.get(Configs.App.DOMAIN_CONFIG['GetListBank'], {
            CurrencyID: 1
          }, function (status, res) {
            if (status === 200 && res.c === 0) {
              _this51.lblNameBankDeposit.string = res.d.walletName;
              _this51.lblNumberBankDeposit.string = res.d.walletAccount;
              _this51.lblNameAccountBank.string = res.d.walletAccountName;
              _this51.walletCodeDeposit = res.d.walletCode;
              _this51.btnCreateCodeContent.getComponent(Button).interactable = true;
              _this51.btnCreateCodeContent.getChildByName("Active").active = true;
              _this51.btnCreateCodeContent.getChildByName("notActive").active = false;
              _this51.lblCodeContent.string = "";
              _this51.lblTimeExpired.string = "";
            } else {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
            }
          }, false);
        };
        _proto.onTabSelectedBank = function onTabSelectedBank(toggle, index) {
          // toggle.isChecked = true;
          if (this._internalToggleChangeDepositBank) return;
          var tabIndex = parseInt(index);
          // if (tabIndex === 0) {
          //     this.containerBankTrucTiep.active = false;
          //     this.containerBankGianTiep.active = true;
          //     this.selectedBankName = "";
          //     this.depositBankGianTiepLabel.string = App.instance.getTextLang('txt_select_bank');
          //     this.bankCode = "";
          //     this.lblCoinReceive.string = "0";
          //     this.edbAmountBankGianTiep.string = "0";
          // }
          //
          // if (tabIndex === 1) {
          //     this.containerBankTrucTiep.active = true;
          //     this.containerBankGianTiep.active = false;
          //     this.getDataBankTrucTiep();
          //     this.nodeContentCodeBank.active = false;
          // }

          this.showTabBank(tabIndex);
        };
        _proto.showTabBank = function showTabBank(index) {
          this._internalToggleChangeDepositBank = true;
          this.tabBank.forEach(function (tab, i) {
            tab.isChecked = i === index;
          });
          this._internalToggleChangeDepositBank = false;
          this.spriteActiveTabBank.forEach(function (tab, i) {
            tab.active = i === index;
          });
          this.spriteNotActiveTabBank.forEach(function (sprite, i) {
            sprite.active = i !== index;
          });
          if (index === 0) {
            this.containerBankTrucTiep.active = false;
            this.containerBankGianTiep.active = true;
            this.selectedBankName = "";
            this.depositBankGianTiepLabel.string = App.instance.getTextLang('txt_select_bank');
            this.bankCode = "";
            this.lblCoinReceive.string = "0";
            this.edbAmountBankGianTiep.string = "";
          }
          if (index === 1) {
            this.containerBankTrucTiep.active = true;
            this.containerBankGianTiep.active = false;
            this.getDataBankTrucTiep();
            this.nodeContentCodeBank.active = false;
          }
        };
        _proto.getBankDataDeposit = function getBankDataDeposit() {
          var _this52 = this;
          if (!Configs.Login.IsLogin) return;
          if (this.isDepositDropdownInitialized) {
            this.depositBankDropList.active = !this.depositBankDropList.active;
            return;
          }
          var data = {
            CurrencyID: Configs.Login.CurrencyID,
            MoneyType: "VND"
          };
          Http.get(Configs.App.DOMAIN_CONFIG['GetBanks4CashIn'], data, function (status, response) {
            if (status === 200 && response.c === 0) {
              // cc.log(response);
              _this52.populateDropdownDepositBank(response.d.banks);
              _this52.isDepositDropdownInitialized = true;
              _this52.depositBankDropList.active = true;
              _this52.rate = response.d.prizeValues[0].rate;
            }
          });
        };
        _proto.populateDropdownDepositBank = function populateDropdownDepositBank(data) {
          var _this53 = this;
          this.depositBankDropList.removeAllChildren();
          if (!this.selectedBankName) {
            this.depositBankGianTiepLabel.string = App.instance.getTextLang('txt_select_bank');
          } else {
            this.depositBankGianTiepLabel.string = this.selectedBankName;
          }
          data.forEach(function (item) {
            // cc.log(item);
            var dropdownItem = instantiate(_this53.depositBankDropListItem);
            dropdownItem.active = true;
            dropdownItem.getChildByName("Label").getComponent(Label).string = item.bankName + " - " + "VND";
            dropdownItem.on(Node.EventType.TOUCH_END, function () {
              _this53.selectedBankName = item.bankName;
              _this53.depositBankGianTiepLabel.string = item.bankName + " - " + "VND";
              _this53.bankCode = item.bankCode;
              _this53.depositBankDropList.active = false;
              _this53.minAmountBank = item.minAmount;
              _this53.maxAmountBank = item.maxAmount;
            });
            _this53.depositBankDropList.addChild(dropdownItem);
          });
        };
        _proto.actSubmitBankGianTiep = function actSubmitBankGianTiep() {
          var _this54 = this;
          var valueStr = this.edbAmountBankGianTiep.string.replace(/[^0-9]/g, '');
          if (!this.selectedBankName) {
            this.showToast(this.lblToastDepositBankGianTiep, App.instance.getTextLang('txt_select_bank1'));
            // App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_select_bank1'));
            return;
          }
          if (!valueStr) {
            this.showToast(this.lblToastDepositBankGianTiep, App.instance.getTextLang('amount_required'));
            // App.instance.alertDialog.showMsg(App.instance.getTextLang("amount_required"));
            return;
          }
          var IBankValue = parseInt(valueStr, 10);
          if (IBankValue < this.minAmountBank) {
            this.showToast(this.lblToastDepositBankGianTiep, App.instance.getTextLang(App.instance.getTextLang("amount_required_in_range") + " " + Utils.formatNumber(this.minAmountBank) + " " + App.instance.getTextLang("iap35") + " " + Utils.formatNumber(this.maxAmountBank)));
            // App.instance.alertDialog.showMsg(`${App.instance.getTextLang("amount_required_in_range")} ${Utils.formatNumber(this.minAmountBank)} ${App.instance.getTextLang("iap35")} ${Utils.formatNumber(this.maxAmountBank)}`);
            return;
          }
          if (IBankValue > this.maxAmountBank) {
            this.showToast(this.lblToastDepositBankGianTiep, App.instance.getTextLang("amount_required_in_range") + " " + Utils.formatNumber(this.minAmountBank) + " " + App.instance.getTextLang("iap35") + " " + Utils.formatNumber(this.maxAmountBank));
            // App.instance.alertDialog.showMsg(`${App.instance.getTextLang("amount_required_in_range")} ${Utils.formatNumber(this.minAmountBank)} ${App.instance.getTextLang("iap35")} ${Utils.formatNumber(this.maxAmountBank)}`);
            return;
          }
          App.instance.showLoading(true);
          var data = {
            CurrencyID: Configs.Login.CurrencyID,
            BankCode: this.bankCode,
            IBankValue: parseInt(this.edbAmountBankGianTiep.string),
            Timestamp: Utils.getTicks()
          };
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['CreateTran4BankCashIn'], payload, function (_status, response) {
            App.instance.showLoading(false);
            if (response.c < 0) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang("me" + response.c));
              return;
            }
            if (response.m && typeof response.m === "string") {
              sys.openURL(response.m);
            } else {
              App.instance.alertDialog.showMsg("Không tìm thấy liên kết thanh toán.");
            }
            _this54.selectedBankName = "";
            _this54.depositBankGianTiepLabel.string = App.instance.getTextLang('txt_select_bank');
            _this54.bankCode = "";
            _this54.lblCoinReceive.string = "0";
            _this54.edbAmountBankGianTiep.string = "";
          });
        };
        _proto.showContainerDepositWithBankThaiLand = function showContainerDepositWithBankThaiLand() {
          var _this55 = this;
          App.instance.showLoading(true);
          Http.get(Configs.App.DOMAIN_CONFIG['GetButtons'], {
            CurrencyID: 1,
            ButtonType: 1
          }, function (status, response) {
            if (status === 200 && response.c === 0) {
              var isEnable = false;
              response.d.forEach(function (button) {
                if (button.walletType === 16) {
                  isEnable = true;
                }
              });
              if (isEnable) {
                _this55.containerBankThaiLand.active = true;
                _this55.hideContainerMenuDeposit();
                App.instance.showLoading(true);
                var data = {
                  CurrencyID: Configs.Login.CurrencyID,
                  MoneyType: "THB"
                };
                Http.get(Configs.App.DOMAIN_CONFIG['GetBanks4CashIn'], data, function (status, response) {
                  App.instance.showLoading(false);
                  if (status === 200 && response.c === 0) {
                    console.log(response);
                    var defaultItem = response.d.banks.find(function (item) {
                      return item.bankCode.toLowerCase().includes("boa");
                    });
                    if (defaultItem) {
                      _this55.selectedBankNameThaiLand = defaultItem.bankName;
                      _this55.depositBankGianTiepLabelThaiLand.string = defaultItem.bankName + " - THB";
                      _this55.bankCodeThaiLand = defaultItem.bankCode;
                      _this55.minAmountBankThaiLand = defaultItem.minAmount;
                      _this55.maxAmountBankThaiLand = defaultItem.maxAmount;
                    }
                  }
                });
              } else {
                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
              }
            } else {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
            }
            App.instance.showLoading(false);
          }, false);
        };
        _proto.getBankDataDepositThaiLand = function getBankDataDepositThaiLand() {
          var _this56 = this;
          if (!Configs.Login.IsLogin) return;
          if (this.isDepositDropdownInitializedThaiLand) {
            this.depositBankDropListThaiLand.active = !this.depositBankDropListThaiLand.active;
            return;
          }
          var data = {
            CurrencyID: Configs.Login.CurrencyID,
            MoneyType: "THB"
          };
          Http.get(Configs.App.DOMAIN_CONFIG['GetBanks4CashIn'], data, function (status, response) {
            if (status === 200 && response.c === 0) {
              // cc.log(response);
              _this56.populateDropdownDepositBankThaiLand(response.d.banks);
              _this56.isDepositDropdownInitializedThaiLand = true;
              _this56.depositBankDropListThaiLand.active = true;
              _this56.rateThaiLand = response.d.prizeValues[1].rate;
            }
          });
        };
        _proto.populateDropdownDepositBankThaiLand = function populateDropdownDepositBankThaiLand(data) {
          var _this57 = this;
          this.depositBankDropListThaiLand.removeAllChildren();
          if (!this.selectedBankNameThaiLand) {
            this.depositBankGianTiepLabelThaiLand.string = App.instance.getTextLang('txt_select_bank');
          } else {
            this.depositBankGianTiepLabelThaiLand.string = this.selectedBankNameThaiLand;
          }
          data.forEach(function (item) {
            var dropdownItem = instantiate(_this57.depositBankDropListItemThaiLand);
            dropdownItem.active = true;
            dropdownItem.getChildByName("Label").getComponent(Label).string = item.bankName + " - " + "THB";
            dropdownItem.on(Node.EventType.TOUCH_END, function () {
              _this57.selectedBankNameThaiLand = item.bankName;
              _this57.depositBankGianTiepLabelThaiLand.string = item.bankName + " - " + "THB";
              _this57.bankCodeThaiLand = item.bankCode;
              _this57.depositBankDropListThaiLand.active = false;
              _this57.minAmountBankThaiLand = item.minAmount;
              _this57.maxAmountBankThaiLand = item.maxAmount;
            });
            _this57.depositBankDropListThaiLand.addChild(dropdownItem);
          });
        };
        _proto.actSubmitBankGianTiepThaiLand = function actSubmitBankGianTiepThaiLand() {
          var _this58 = this;
          var valueStr = this.edbAmountBankGianTiepThaiLand.string.replace(/[^0-9]/g, '');
          if (!this.selectedBankNameThaiLand) {
            this.showToast(this.lblToastDepositBankGianTiepThaiLand, App.instance.getTextLang('txt_select_bank1'));

            // App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_select_bank1'));
            return;
          }
          if (!valueStr) {
            this.showToast(this.lblToastDepositBankGianTiepThaiLand, App.instance.getTextLang('amount_required'));

            // App.instance.alertDialog.showMsg(App.instance.getTextLang("amount_required"));
            return;
          }
          var IBankValue = parseInt(valueStr, 10);
          if (IBankValue < this.minAmountBankThaiLand) {
            this.showToast(this.lblToastDepositBankGianTiepThaiLand, App.instance.getTextLang("amount_required_in_range") + " " + Utils.formatNumber(this.minAmountBankThaiLand) + " " + App.instance.getTextLang("iap35") + " " + Utils.formatNumber(this.maxAmountBankThaiLand));

            // App.instance.alertDialog.showMsg(`${App.instance.getTextLang("amount_required_in_range")} ${Utils.formatNumber(this.minAmountBankThaiLand)} ${App.instance.getTextLang("iap35")} ${Utils.formatNumber(this.maxAmountBankThaiLand)}`);
            return;
          }
          if (IBankValue > this.maxAmountBankThaiLand) {
            this.showToast(this.lblToastDepositBankGianTiepThaiLand, App.instance.getTextLang("amount_required_in_range") + " " + Utils.formatNumber(this.minAmountBankThaiLand) + " " + App.instance.getTextLang("iap35") + " " + Utils.formatNumber(this.maxAmountBankThaiLand));
            // App.instance.alertDialog.showMsg(`${App.instance.getTextLang("amount_required_in_range")} ${Utils.formatNumber(this.minAmountBankThaiLand)} ${App.instance.getTextLang("iap35")} ${Utils.formatNumber(this.maxAmountBankThaiLand)}`);
            return;
          }
          App.instance.showLoading(true);
          var data = {
            CurrencyID: Configs.Login.CurrencyID,
            BankCode: this.bankCodeThaiLand,
            IBankValue: parseInt(this.edbAmountBankGianTiepThaiLand.string),
            Timestamp: Utils.getTicks()
          };
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['CreateTran4BankCashIn'], payload, function (_status, response) {
            App.instance.showLoading(false);
            if (response.c < 0) {
              _this58.showToast(_this58.lblToastDepositBankGianTiepThaiLand, App.instance.getTextLang("me" + response.c));
              // App.instance.alertDialog.showMsg(App.instance.getTextLang(`me${response.c}`));
              return;
            }
            if (response.m && typeof response.m === "string") {
              sys.openURL(response.m);
            } else {
              _this58.showToast(_this58.lblToastDepositBankGianTiepThaiLand, App.instance.getTextLang('tipzo_payment_link_not_found'));

              // App.instance.alertDialog.showMsg("Không tìm thấy liên kết thanh toán.");
            }

            _this58.selectedBankNameThaiLand = "";
            _this58.depositBankGianTiepLabelThaiLand.string = App.instance.getTextLang('txt_select_bank');
            _this58.bankCodeThaiLand = "";
            _this58.lblCoinReceiveThaiLand.string = "0";
            _this58.edbAmountBankGianTiepThaiLand.string = "";
          }, false);
        };
        _proto.getDataWithdrawBankThaiLand = function getDataWithdrawBankThaiLand() {
          var _this59 = this;
          this.containerWithDrawWithBankThaiLand.active = true;
          this.containerStep1BankTHAIWithdraw.active = true;
          this.containerStep2BankTHAIWithdraw.active = false;
          this.containerStep3BankTHAIWithdraw.active = false;
          Http.get(Configs.App.DOMAIN_CONFIG['GetButtons'], {
            CurrencyID: 1,
            ButtonType: 2
          }, function (status, response) {
            if (status === 200 && response.c === 0) {
              var isEnable = false;
              console.log(response.d);
              response.d.forEach(function (button) {
                if (button.walletType === 16) {
                  isEnable = true;
                }
              });
              if (isEnable) {
                _this59.getDataWithdrawBankThaiLandAfterCheckGetButtons();
              } else {
                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
                _this59.showTab(2);
              }
            } else {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_func_not_open'));
              _this59.showTab(2);
            }
          }, false);
        };
        _proto.getDataWithdrawBankThaiLandAfterCheckGetButtons = function getDataWithdrawBankThaiLandAfterCheckGetButtons() {
          var _this60 = this;
          this.withdrawBankThaiLandListItems.removeAllChildren();
          this.withdrawBankThaiLandEdbValue.string = "";
          this.withdrawBankThaiLandEdbNumberBank.string = "";
          this.withdrawBankThaiLandEdbAccountBank.string = "";
          this.withdrawBankThaiLandSelectedBankCode = "";
          this.withdrawBankThaiLandSelectedBankLabel.string = App.instance.getTextLang('iap250');
          App.instance.showLoading(true);

          // Http.get(Configs.App.DOMAIN_CONFIG['WalletGetInfoForCashOut'], { WalletType: 2, CurrencyID : Configs.Login.CurrencyID}, (status, response) => {
          //     if (status === 200 && response.c === 0) {
          //         this.withdrawBankThaiLandBalanceTodayValue = response.d.walletInfo.amountEnable;
          //         this.withdrawBankThaiLandMinToday = response.d.walletInfo.minValue;
          //         this.withdrawBankThaiLandMaxToday = response.d.walletInfo.maxValue;
          //
          //         var form = App.instance.getTextLang('txt_from_value');
          //         var to = App.instance.getTextLang('txt_to_value');
          //
          //         this.withdrawBankThaiLandBalance.string = Configs.Login.GoldBalance.toLocaleString("vi-VN");
          //         this.withdrawBankThaiLandBalanceToday.string = this.withdrawBankThaiLandBalanceTodayValue.toLocaleString("vi-VN");
          //         this.withdrawBankThaiLandValuePlaceholder.string = `${form} ${this.withdrawBankThaiLandMinToday.toLocaleString("vi-VN")} ${to} ${this.withdrawBankThaiLandMaxToday.toLocaleString("vi-VN")}`;
          //     }
          // });

          Http.get(Configs.App.DOMAIN_CONFIG['GetAccountBankinfoFor9Cashout'], {
            CurrencyID: Configs.Login.CurrencyID,
            MoneyType: 'All'
          }, function (status, response) {
            App.instance.showLoading(false);
            if (status === 200 && response.c === 0) {
              App.instance.showLoading(false);
              _this60.withdrawBankThaiLandBalanceTodayValue = response.p[2];
              _this60.withdrawBankThaiLandMinToday = response.p[0];
              _this60.withdrawBankThaiLandMaxToday = response.p[1];
              var form = App.instance.getTextLang('txt_from_value');
              var to = App.instance.getTextLang('txt_to_value');
              _this60.withdrawBankThaiLandBalance.string = Configs.Login.GoldBalance.toLocaleString("vi-VN");
              _this60.withdrawBankThaiLandBalanceToday.string = _this60.withdrawBankThaiLandBalanceTodayValue.toLocaleString("vi-VN");
              _this60.withdrawBankThaiLandValuePlaceholder.string = form + " " + _this60.withdrawBankThaiLandMinToday.toLocaleString("vi-VN") + " " + to + " " + _this60.withdrawBankThaiLandMaxToday.toLocaleString("vi-VN");
              console.log(response);
              response.d.banks.forEach(function (bank) {
                var item = instantiate(_this60.withdrawBankThaiLandListItemTemplate);
                item.parent = _this60.withdrawBankThaiLandListItems;
                var bankName = bank.bankName;
                item.getChildByName("label").getComponent(Label).string = bankName;
                item.on("click", function () {
                  _this60.withdrawBankThaiLandSelectedBankCode = bank.bankCode;
                  _this60.withdrawBankThaiLandSelectedBankLabel.string = bankName;
                  _this60.withdrawBankThaiLandSelectedBankToggle.isChecked = false;
                });
              });
            }
          });
        };
        _proto.actSubmitWithdrawBankThaiLandStep1 = function actSubmitWithdrawBankThaiLandStep1() {
          var _this61 = this;
          var value = parseInt(this.withdrawBankThaiLandEdbValue.string);
          var numberBank = this.withdrawBankThaiLandEdbNumberBank.string;
          var accountBank = this.withdrawBankThaiLandEdbAccountBank.string;
          if (numberBank === "") {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('account_number_required'));
            return;
          }
          if (accountBank === "") {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('account_name_required'));
            return;
          }
          if (this.hasVietnameseDiacritics(accountBank)) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('account_name_no_accent'));
            return;
          }
          if (isNaN(value)) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('value_invalid_amount'));
            return;
          }
          if (value > this.withdrawBankThaiLandMaxToday) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang("amount_required_in_range") + " " + Utils.formatNumber(this.withdrawBankThaiLandMinToday) + " " + App.instance.getTextLang("iap35") + " " + Utils.formatNumber(this.withdrawBankThaiLandMaxToday));
            // App.instance.alertDialog.showMsg(`${App.instance.getTextLang('amount_must_be_less_than')} ${this.withdrawBankVNMaxToday.toLocaleString("vi-VN")}`);
            return;
          }
          if (value < this.withdrawBankThaiLandMinToday) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang("amount_required_in_range") + " " + Utils.formatNumber(this.withdrawBankThaiLandMinToday) + " " + App.instance.getTextLang("iap35") + " " + Utils.formatNumber(this.withdrawBankThaiLandMaxToday));
            // App.instance.alertDialog.showMsg(`${App.instance.getTextLang('amount_must_be_greater_than')} ${this.withdrawBankVNMinToday.toLocaleString("vi-VN")}`);
            return;
          }
          App.instance.showLoading(true);
          var data = {
            CurrencyID: Configs.Login.CurrencyID,
            BankCode: this.withdrawBankThaiLandSelectedBankCode,
            AccountNumber: numberBank,
            AccountName: accountBank,
            DrawalValue: value,
            Timestamp: Utils.getTicks()
          };
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['OldBankCashOut4Oneone'], payload, function (status, response) {
            App.instance.showLoading(false);
            if (status === 200 && response.c === 0) {
              console.log(response);
              if (response.p[0]) {
                _this61.withdrawBankThaiLandStep2OTPContainer.active = true;
              } else {
                _this61.withdrawBankThaiLandStep2OTPContainer.active = false;
              }
              _this61.withdrawBankThaiLandStep2BankName.string = _this61.withdrawBankThaiLandSelectedBankLabel.string;
              _this61.withdrawBankThaiLandStep2BankAccount.string = accountBank;
              _this61.withdrawBankThaiLandStep2BankNumber.string = numberBank;
              _this61.withdrawBankThaiLandStep2BankAmout.string = value.toLocaleString("vi-VN");
              _this61.withdrawBankThaiLandStep2BankValue.string = value.toLocaleString("vi-VN");
              _this61.withdrawBankThaiLandEdbStep2OTP.string = "";
              _this61.containerStep1BankTHAIWithdraw.active = false;
              _this61.containerStep2BankTHAIWithdraw.active = true;
            }
          });
        };
        _proto.actSubmitWithdrawBankThaiLandStep2 = function actSubmitWithdrawBankThaiLandStep2() {
          var _this62 = this;
          var data = {
            OTPType: 1,
            OTP: "000000",
            Timestamp: Utils.getTicks()
          };
          if (this.withdrawBankThaiLandStep2OTPContainer.active) {
            data.OTPType = this.withdrawBankThaiLandOTPOptionLabel.string === "SMS OTP" ? 1 : 3;
            data.OTP = this.withdrawBankThaiLandEdbStep2OTP.string;
          }
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['OldBankCashOutConfirm4OneOne'], payload, function (status, response) {
            if (status === 200) {
              _this62.containerStep2BankTHAIWithdraw.active = false;
              _this62.containerStep3BankTHAIWithdraw.active = true;
              _this62.withdrawBankThaiLandStep3TransactionIDLabel.string = 'bDeductRefID: ' + response.d.bDeductRefID;
              BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);
            }
          });
        };
        _proto.backWithdrawBankThaiLandStep2 = function backWithdrawBankThaiLandStep2() {
          this.containerStep1BankTHAIWithdraw.active = true;
          this.containerStep2BankTHAIWithdraw.active = false;
          this.containerStep3BankTHAIWithdraw.active = false;
        };
        _proto.showToast = function showToast(label, message) {
          label.string = message;
          this.scheduleOnce(function () {
            label.string = "";
          }, 5);
        };
        return PopupCashout;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "bg", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "container", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "tabContents", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "toggleGroup", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "tabToggleMain", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "containerMenuCardWithdraw", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "containerStep1CardWithdraw", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "containerStep2CardWithdraw", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "containerStep3CardWithdraw", [_dec10], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCardTableList", [_dec11], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCardTableItem", [_dec12], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCardDropList", [_dec13], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCardDropListItem", [_dec14], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCardDropListCost", [_dec15], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor15 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCardDropListCostItem", [_dec16], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor16 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCardDetailLabel", [_dec17], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor17 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCardCostLabel", [_dec18], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor18 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEdbQualityContent", [_dec19], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor19 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCardTotalLabel", [_dec20], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor20 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCardOTPOptionLabel", [_dec21], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor21 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCardOTPOptionToggle", [_dec22], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor22 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCardEdbOTP", [_dec23], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor23 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCardListStep3", [_dec24], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor24 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCardListStep3Item", [_dec25], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor25 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCardContainerOTPStep2", [_dec26], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor26 = _applyDecoratedDescriptor(_class2.prototype, "containerStep1BankVNWithdraw", [_dec27], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor27 = _applyDecoratedDescriptor(_class2.prototype, "containerStep2BankVNWithdraw", [_dec28], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor28 = _applyDecoratedDescriptor(_class2.prototype, "containerStep3BankVNWithdraw", [_dec29], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor29 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankVNBalance", [_dec30], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor30 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankVNValuePlaceholder", [_dec31], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor31 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankVNBalanceToday", [_dec32], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor32 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankVNListItems", [_dec33], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor33 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankVNListItemTemplate", [_dec34], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor34 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankVNSelectedBankLabel", [_dec35], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor35 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankVNSelectedBankToggle", [_dec36], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor36 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankVNEdbValue", [_dec37], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor37 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankVNEdbNumberBank", [_dec38], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor38 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankVNEdbAccountBank", [_dec39], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor39 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankVNStep2BankName", [_dec40], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor40 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankVNStep2BankAccount", [_dec41], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor41 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankVNStep2BankNumber", [_dec42], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor42 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankVNStep2BankAmout", [_dec43], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor43 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankVNStep2BankValue", [_dec44], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor44 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankVNStep2OTPContainer", [_dec45], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor45 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankVNEdbStep2OTP", [_dec46], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor46 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankVNOTPOptionToggle", [_dec47], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor47 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankVNOTPOptionLabel", [_dec48], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor48 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankVNStep3TransactionIDLabel", [_dec49], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor49 = _applyDecoratedDescriptor(_class2.prototype, "containerStep1BankTHAIWithdraw", [_dec50], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor50 = _applyDecoratedDescriptor(_class2.prototype, "containerStep2BankTHAIWithdraw", [_dec51], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor51 = _applyDecoratedDescriptor(_class2.prototype, "containerStep3BankTHAIWithdraw", [_dec52], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor52 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankThaiLandBalance", [_dec53], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor53 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankThaiLandValuePlaceholder", [_dec54], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor54 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankThaiLandBalanceToday", [_dec55], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor55 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankThaiLandListItems", [_dec56], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor56 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankThaiLandListItemTemplate", [_dec57], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor57 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankThaiLandSelectedBankLabel", [_dec58], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor58 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankThaiLandSelectedBankToggle", [_dec59], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor59 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankThaiLandEdbValue", [_dec60], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor60 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankThaiLandEdbNumberBank", [_dec61], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor61 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankThaiLandEdbAccountBank", [_dec62], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor62 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankThaiLandStep2BankName", [_dec63], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor63 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankThaiLandStep2BankAccount", [_dec64], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor64 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankThaiLandStep2BankNumber", [_dec65], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor65 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankThaiLandStep2BankAmout", [_dec66], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor66 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankThaiLandStep2BankValue", [_dec67], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor67 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankThaiLandStep2OTPContainer", [_dec68], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor68 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankThaiLandEdbStep2OTP", [_dec69], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor69 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankThaiLandOTPOptionToggle", [_dec70], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor70 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankThaiLandOTPOptionLabel", [_dec71], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor71 = _applyDecoratedDescriptor(_class2.prototype, "withdrawBankThaiLandStep3TransactionIDLabel", [_dec72], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor72 = _applyDecoratedDescriptor(_class2.prototype, "containerStep1CryptoWithdraw", [_dec73], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor73 = _applyDecoratedDescriptor(_class2.prototype, "containerStep2CryptoWithdraw", [_dec74], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor74 = _applyDecoratedDescriptor(_class2.prototype, "containerStep3CryptoWithdraw", [_dec75], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor75 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCryptoStep1LabelCrypto", [_dec76], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor76 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCryptoStep2LabelCrypto", [_dec77], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor77 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCryptoStep3LabelCrypto", [_dec78], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor78 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCryptoStep1PlaceholderWalletNumber", [_dec79], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor79 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCryptoStep1PlaceholderAmount", [_dec80], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor80 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCryptoStep1LabelToday", [_dec81], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor81 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCryptoStep1EdbWalletNumber", [_dec82], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor82 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCryptoStep1EdbAmount", [_dec83], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor83 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCryptoStep2ValueAddress", [_dec84], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor84 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCryptoStep2ValueAmount", [_dec85], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor85 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCryptoStep2ValueAmount2", [_dec86], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor86 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCryptoStep2OTPContainer", [_dec87], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor87 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCryptoOTPOptionToggle", [_dec88], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor88 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCryptoOTPOptionLabel", [_dec89], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor89 = _applyDecoratedDescriptor(_class2.prototype, "withdrawCryptoStep3TransactionIDLabel", [_dec90], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor90 = _applyDecoratedDescriptor(_class2.prototype, "tabToggle", [_dec91], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor91 = _applyDecoratedDescriptor(_class2.prototype, "containerStep1EWalletWithdraw", [_dec92], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor92 = _applyDecoratedDescriptor(_class2.prototype, "containerStep2EWalletWithdraw", [_dec93], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor93 = _applyDecoratedDescriptor(_class2.prototype, "containerStep3EWalletWithdraw", [_dec94], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor94 = _applyDecoratedDescriptor(_class2.prototype, "eWalletCotainer", [_dec95], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor95 = _applyDecoratedDescriptor(_class2.prototype, "tabToggleEWallet", [_dec96], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor96 = _applyDecoratedDescriptor(_class2.prototype, "spriteActiveEWallet", [_dec97], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor97 = _applyDecoratedDescriptor(_class2.prototype, "spriteNotActiveEWallet", [_dec98], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor98 = _applyDecoratedDescriptor(_class2.prototype, "spriteLgEWallet", [_dec99], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor99 = _applyDecoratedDescriptor(_class2.prototype, "spriteLabelEWallet", [_dec100], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor100 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEWalletAddressPlaceholder", [_dec101], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor101 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEWalletValuePlaceholder", [_dec102], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor102 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEWalletBalanceToday", [_dec103], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor103 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEWalletStep1EdbAddress", [_dec104], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor104 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEWalletStep1EdbAmount", [_dec105], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor105 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEWalletStep2Address", [_dec106], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor106 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEWalletStep2Amount", [_dec107], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor107 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEWalletStep2Amount2", [_dec108], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor108 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEWalletEdbStep2OTP", [_dec109], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor109 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEWalletOTPOptionToggle", [_dec110], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor110 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEWalletOTPOptionLabel", [_dec111], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor111 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEWalletStep3TransactionIDLabel", [_dec112], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor112 = _applyDecoratedDescriptor(_class2.prototype, "containerStep1EWalletVNWithdraw", [_dec113], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor113 = _applyDecoratedDescriptor(_class2.prototype, "containerStep2EWalletVNWithdraw", [_dec114], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor114 = _applyDecoratedDescriptor(_class2.prototype, "containerStep3EWalletVNWithdraw", [_dec115], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor115 = _applyDecoratedDescriptor(_class2.prototype, "eWalletCotainerVN", [_dec116], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor116 = _applyDecoratedDescriptor(_class2.prototype, "tabToggleEWalletVN", [_dec117], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor117 = _applyDecoratedDescriptor(_class2.prototype, "spriteActiveEWalletVN", [_dec118], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor118 = _applyDecoratedDescriptor(_class2.prototype, "spriteNotActiveEWalletVN", [_dec119], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor119 = _applyDecoratedDescriptor(_class2.prototype, "spriteLgEWalletVN", [_dec120], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor120 = _applyDecoratedDescriptor(_class2.prototype, "spriteLabelEWalletVN", [_dec121], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor121 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEWalletVNValuePlaceholder", [_dec122], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor122 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEWalletVNBalanceToday", [_dec123], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor123 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEWalletVNStep1EdbAddress", [_dec124], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor124 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEWalletVNStep1EdbAmount", [_dec125], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor125 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEWalletVNStep2Address", [_dec126], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor126 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEWalletVNStep2Amount", [_dec127], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor127 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEWalletVNStep2Amount2", [_dec128], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor128 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEWalletVNEdbStep2OTP", [_dec129], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor129 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEWalletVNOTPOptionToggle", [_dec130], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor130 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEWalletVNOTPOptionLabel", [_dec131], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor131 = _applyDecoratedDescriptor(_class2.prototype, "withdrawEWalletVNStep3TransactionIDLabel", [_dec132], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor132 = _applyDecoratedDescriptor(_class2.prototype, "containerStep2EWalletVNWithdrawOTP", [_dec133], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor133 = _applyDecoratedDescriptor(_class2.prototype, "withDrawEWalletVNSpriteStep2", [_dec134], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor134 = _applyDecoratedDescriptor(_class2.prototype, "containerMenuDeposit", [_dec135], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor135 = _applyDecoratedDescriptor(_class2.prototype, "containerDepositWithCard", [_dec136], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor136 = _applyDecoratedDescriptor(_class2.prototype, "containerDepositWithBank", [_dec137], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor137 = _applyDecoratedDescriptor(_class2.prototype, "containerDepositWithWalletWorld", [_dec138], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor138 = _applyDecoratedDescriptor(_class2.prototype, "containerDepositWithWalletVN", [_dec139], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor139 = _applyDecoratedDescriptor(_class2.prototype, "containerDepositWithCryptoUSDT", [_dec140], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor140 = _applyDecoratedDescriptor(_class2.prototype, "containerDepositWithCryptoUSDC", [_dec141], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor141 = _applyDecoratedDescriptor(_class2.prototype, "containerDepositWithCryptoBUST", [_dec142], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor142 = _applyDecoratedDescriptor(_class2.prototype, "containerWithDrawWithCard", [_dec143], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor143 = _applyDecoratedDescriptor(_class2.prototype, "containerWithDrawWithBank", [_dec144], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor144 = _applyDecoratedDescriptor(_class2.prototype, "containerWithDrawWithWalletWorld", [_dec145], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor145 = _applyDecoratedDescriptor(_class2.prototype, "containerWithDrawWithWalletVN", [_dec146], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor146 = _applyDecoratedDescriptor(_class2.prototype, "containerWithDrawWithCrypto", [_dec147], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor147 = _applyDecoratedDescriptor(_class2.prototype, "containerWithDrawWithBankThaiLand", [_dec148], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor148 = _applyDecoratedDescriptor(_class2.prototype, "labelNumberBank", [_dec149], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor149 = _applyDecoratedDescriptor(_class2.prototype, "labelContentBank", [_dec150], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor150 = _applyDecoratedDescriptor(_class2.prototype, "labelNumberWalletWorld", [_dec151], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor151 = _applyDecoratedDescriptor(_class2.prototype, "labelNumberWalletVN", [_dec152], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor152 = _applyDecoratedDescriptor(_class2.prototype, "labelCodeCrypto", [_dec153], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor153 = _applyDecoratedDescriptor(_class2.prototype, "labelCodeCryptoBUST", [_dec154], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor154 = _applyDecoratedDescriptor(_class2.prototype, "labelCodeCryptoUSDC", [_dec155], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor155 = _applyDecoratedDescriptor(_class2.prototype, "tabToggleEWalletDepositWorld", [_dec156], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor156 = _applyDecoratedDescriptor(_class2.prototype, "spriteActiveEWalletDepositWorld", [_dec157], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor157 = _applyDecoratedDescriptor(_class2.prototype, "spriteNotActiveEWalletDepositWorld", [_dec158], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor158 = _applyDecoratedDescriptor(_class2.prototype, "spriteLgEWalletDepositWorld", [_dec159], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor159 = _applyDecoratedDescriptor(_class2.prototype, "spriteLabelEWalletDepositWorld", [_dec160], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor160 = _applyDecoratedDescriptor(_class2.prototype, "tabToggleEWalletDepositVN", [_dec161], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor161 = _applyDecoratedDescriptor(_class2.prototype, "spriteActiveEWalletDepositVN", [_dec162], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor162 = _applyDecoratedDescriptor(_class2.prototype, "spriteNotActiveEWalletDepositVN", [_dec163], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor163 = _applyDecoratedDescriptor(_class2.prototype, "spriteLabelEWalletDepositVN", [_dec164], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor164 = _applyDecoratedDescriptor(_class2.prototype, "spriteLgEWalletDepositVN", [_dec165], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor165 = _applyDecoratedDescriptor(_class2.prototype, "depositCardTableList", [_dec166], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor166 = _applyDecoratedDescriptor(_class2.prototype, "depositCardTableItem", [_dec167], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor167 = _applyDecoratedDescriptor(_class2.prototype, "depositCardDropList", [_dec168], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor168 = _applyDecoratedDescriptor(_class2.prototype, "depositCardDropListItem", [_dec169], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor169 = _applyDecoratedDescriptor(_class2.prototype, "depositCardDropListCost", [_dec170], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor170 = _applyDecoratedDescriptor(_class2.prototype, "depositCardDropListCostItem", [_dec171], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor171 = _applyDecoratedDescriptor(_class2.prototype, "depositCardTelcoNameLabel", [_dec172], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor172 = _applyDecoratedDescriptor(_class2.prototype, "depositCardTypeLabel", [_dec173], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor173 = _applyDecoratedDescriptor(_class2.prototype, "depositCardCostLabel", [_dec174], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor174 = _applyDecoratedDescriptor(_class2.prototype, "depositCardEdbSeri", [_dec175], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor175 = _applyDecoratedDescriptor(_class2.prototype, "depositCardEdbCode", [_dec176], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor176 = _applyDecoratedDescriptor(_class2.prototype, "depositCardNotifiConfirm", [_dec177], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor177 = _applyDecoratedDescriptor(_class2.prototype, "depositCardNotifiConfirmLabel", [_dec178], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor178 = _applyDecoratedDescriptor(_class2.prototype, "depositBankVNStep1", [_dec179], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor179 = _applyDecoratedDescriptor(_class2.prototype, "depositBankVNStep2", [_dec180], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor180 = _applyDecoratedDescriptor(_class2.prototype, "depositBankVNWalletNameLabel", [_dec181], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor181 = _applyDecoratedDescriptor(_class2.prototype, "depositBankVNWalletNumberLabel", [_dec182], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor182 = _applyDecoratedDescriptor(_class2.prototype, "depositBankVNWalletAccountLabel", [_dec183], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor183 = _applyDecoratedDescriptor(_class2.prototype, "depositBankVNAmountLabel", [_dec184], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor184 = _applyDecoratedDescriptor(_class2.prototype, "depositBankVNCode", [_dec185], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor185 = _applyDecoratedDescriptor(_class2.prototype, "depositBankVNTime", [_dec186], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor186 = _applyDecoratedDescriptor(_class2.prototype, "edbDepositBankVNAmount", [_dec187], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor187 = _applyDecoratedDescriptor(_class2.prototype, "depositBankVNQR", [_dec188], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor188 = _applyDecoratedDescriptor(_class2.prototype, "depositEWalletVNStep1", [_dec189], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor189 = _applyDecoratedDescriptor(_class2.prototype, "depositEWalletVNStep2", [_dec190], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor190 = _applyDecoratedDescriptor(_class2.prototype, "depositEWalletVNWalletNumberLabel", [_dec191], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor191 = _applyDecoratedDescriptor(_class2.prototype, "depositEWalletVNWalletAccountLabel", [_dec192], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor192 = _applyDecoratedDescriptor(_class2.prototype, "depositEWalletVNAmount", [_dec193], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor193 = _applyDecoratedDescriptor(_class2.prototype, "depositEWalletVNCode", [_dec194], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor194 = _applyDecoratedDescriptor(_class2.prototype, "depositEWalletVNTime", [_dec195], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor195 = _applyDecoratedDescriptor(_class2.prototype, "depositEWalletVNQR", [_dec196], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor196 = _applyDecoratedDescriptor(_class2.prototype, "edbDepositEWalletVNAmount", [_dec197], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor197 = _applyDecoratedDescriptor(_class2.prototype, "depositEWalletWorldStep1", [_dec198], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor198 = _applyDecoratedDescriptor(_class2.prototype, "depositEWalletWorldStep2", [_dec199], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor199 = _applyDecoratedDescriptor(_class2.prototype, "depositEWalletWorldWalletNumberLabel", [_dec200], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor200 = _applyDecoratedDescriptor(_class2.prototype, "depositEWalletWorldWalletAccountLabel", [_dec201], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor201 = _applyDecoratedDescriptor(_class2.prototype, "depositEWalletWorldAmount", [_dec202], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor202 = _applyDecoratedDescriptor(_class2.prototype, "depositEWalletWorldCode", [_dec203], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor203 = _applyDecoratedDescriptor(_class2.prototype, "depositEWalletWorldTime", [_dec204], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor204 = _applyDecoratedDescriptor(_class2.prototype, "edbDepositEWalletWorldAmount", [_dec205], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor205 = _applyDecoratedDescriptor(_class2.prototype, "depositCoinUSDTWalletAddressLabel", [_dec206], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor206 = _applyDecoratedDescriptor(_class2.prototype, "depositCoinUSDTEdbAmount", [_dec207], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor207 = _applyDecoratedDescriptor(_class2.prototype, "depositCoinBUSTWalletAddressLabel", [_dec208], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor208 = _applyDecoratedDescriptor(_class2.prototype, "depositCoinBUSTEdbAmount", [_dec209], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor209 = _applyDecoratedDescriptor(_class2.prototype, "depositCoinUSDCWalletAddressLabel", [_dec210], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor210 = _applyDecoratedDescriptor(_class2.prototype, "depositCoinUSDCEdbAmount", [_dec211], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor211 = _applyDecoratedDescriptor(_class2.prototype, "step1ContainerTransfer", [_dec212], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor212 = _applyDecoratedDescriptor(_class2.prototype, "step2ContainerTransfer", [_dec213], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor213 = _applyDecoratedDescriptor(_class2.prototype, "step3ContainerTransfer", [_dec214], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor214 = _applyDecoratedDescriptor(_class2.prototype, "stepSuccessContainerTransfer", [_dec215], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor215 = _applyDecoratedDescriptor(_class2.prototype, "editBoxUserNameTransfer", [_dec216], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor216 = _applyDecoratedDescriptor(_class2.prototype, "editBoxUserNameAgainTransfer", [_dec217], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor217 = _applyDecoratedDescriptor(_class2.prototype, "editBoxReasonTransfer", [_dec218], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor218 = _applyDecoratedDescriptor(_class2.prototype, "editBoxCoinTransfer", [_dec219], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor219 = _applyDecoratedDescriptor(_class2.prototype, "textCoinTransferReceive", [_dec220], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor220 = _applyDecoratedDescriptor(_class2.prototype, "textCoinTransferExist", [_dec221], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor221 = _applyDecoratedDescriptor(_class2.prototype, "textCoinTransferReceiveStep3", [_dec222], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor222 = _applyDecoratedDescriptor(_class2.prototype, "textUserNameStep3", [_dec223], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor223 = _applyDecoratedDescriptor(_class2.prototype, "textCoinTransferExistStep3", [_dec224], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor224 = _applyDecoratedDescriptor(_class2.prototype, "step3OTPContainer", [_dec225], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor225 = _applyDecoratedDescriptor(_class2.prototype, "step3OTPToggle", [_dec226], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor226 = _applyDecoratedDescriptor(_class2.prototype, "step3OTPTypeLabel", [_dec227], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor227 = _applyDecoratedDescriptor(_class2.prototype, "step3OTPEdb", [_dec228], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor228 = _applyDecoratedDescriptor(_class2.prototype, "tabToggleEWalletWithdrawWorld", [_dec229], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor229 = _applyDecoratedDescriptor(_class2.prototype, "spriteActiveEWalletWithdrawWorld", [_dec230], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor230 = _applyDecoratedDescriptor(_class2.prototype, "spriteNotActiveEWalletWithdrawWorld", [_dec231], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor231 = _applyDecoratedDescriptor(_class2.prototype, "spriteLgEWalletWithdrawWorld", [_dec232], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor232 = _applyDecoratedDescriptor(_class2.prototype, "spriteLabelEWalletWithdrawWorld", [_dec233], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor233 = _applyDecoratedDescriptor(_class2.prototype, "withDrawEwalletWorldOTPContainerStep2", [_dec234], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor234 = _applyDecoratedDescriptor(_class2.prototype, "lblTextAddressWithdrawEWalletWorld", [_dec235], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor235 = _applyDecoratedDescriptor(_class2.prototype, "containerCashQR", [_dec236], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor236 = _applyDecoratedDescriptor(_class2.prototype, "step1ContainerCashQR", [_dec237], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor237 = _applyDecoratedDescriptor(_class2.prototype, "step2ContainerCashQR", [_dec238], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor238 = _applyDecoratedDescriptor(_class2.prototype, "tabCashQR", [_dec239], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor239 = _applyDecoratedDescriptor(_class2.prototype, "spriteActiveTabCashQR", [_dec240], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor240 = _applyDecoratedDescriptor(_class2.prototype, "spriteNotActiveTabCashQR", [_dec241], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor241 = _applyDecoratedDescriptor(_class2.prototype, "edbDepositCashQR", [_dec242], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor242 = _applyDecoratedDescriptor(_class2.prototype, "containerCashQREWalletVN", [_dec243], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor243 = _applyDecoratedDescriptor(_class2.prototype, "containerCashQREWalletWorld", [_dec244], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor244 = _applyDecoratedDescriptor(_class2.prototype, "placeHolderEdbAmount", [_dec245], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor245 = _applyDecoratedDescriptor(_class2.prototype, "lblTextUserNameCashQR", [_dec246], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor246 = _applyDecoratedDescriptor(_class2.prototype, "lblTimeWhenNotQR", [_dec247], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor247 = _applyDecoratedDescriptor(_class2.prototype, "lblTimeNoteWhenNotQR", [_dec248], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor248 = _applyDecoratedDescriptor(_class2.prototype, "step1ContainerCashQRUSD", [_dec249], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor249 = _applyDecoratedDescriptor(_class2.prototype, "edbDepositCashQRUSD", [_dec250], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor250 = _applyDecoratedDescriptor(_class2.prototype, "placeHolderEdbAmountUSD", [_dec251], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor251 = _applyDecoratedDescriptor(_class2.prototype, "lblTextUserNameCashQRUSD", [_dec252], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor252 = _applyDecoratedDescriptor(_class2.prototype, "lblTextNotifiStep1", [_dec253], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor253 = _applyDecoratedDescriptor(_class2.prototype, "lblTextNotifiStep1USD", [_dec254], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor254 = _applyDecoratedDescriptor(_class2.prototype, "containerQRCodeSprite", [_dec255], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor255 = _applyDecoratedDescriptor(_class2.prototype, "boxDepositCashQRBankName", [_dec256], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor256 = _applyDecoratedDescriptor(_class2.prototype, "lblDepositCashQRBankName", [_dec257], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor257 = _applyDecoratedDescriptor(_class2.prototype, "lblDepositCashQRNumberSTK", [_dec258], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor258 = _applyDecoratedDescriptor(_class2.prototype, "lblDepositCashQRNameOwner", [_dec259], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor259 = _applyDecoratedDescriptor(_class2.prototype, "lblDepositCashQRAmount", [_dec260], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor260 = _applyDecoratedDescriptor(_class2.prototype, "lblDepositCashQRContent", [_dec261], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor261 = _applyDecoratedDescriptor(_class2.prototype, "depositSpriteCashQR", [_dec262], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor262 = _applyDecoratedDescriptor(_class2.prototype, "lblDepositCashQRTime", [_dec263], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor263 = _applyDecoratedDescriptor(_class2.prototype, "tabToggleEWalletVNCashQR", [_dec264], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor264 = _applyDecoratedDescriptor(_class2.prototype, "spriteActiveEWalletVNCashQR", [_dec265], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor265 = _applyDecoratedDescriptor(_class2.prototype, "spriteNotActiveEWalletVNCashQR", [_dec266], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor266 = _applyDecoratedDescriptor(_class2.prototype, "spriteLabelEWalletVNCashQR", [_dec267], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor267 = _applyDecoratedDescriptor(_class2.prototype, "tabToggleEWalletWorldCashQR", [_dec268], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor268 = _applyDecoratedDescriptor(_class2.prototype, "spriteActiveEWalletWorldCashQR", [_dec269], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor269 = _applyDecoratedDescriptor(_class2.prototype, "spriteNotActiveEWalletWorldCashQR", [_dec270], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor270 = _applyDecoratedDescriptor(_class2.prototype, "spriteLabelEWalletWorldCashQR", [_dec271], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor271 = _applyDecoratedDescriptor(_class2.prototype, "lblNameBankDeposit", [_dec272], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor272 = _applyDecoratedDescriptor(_class2.prototype, "lblNumberBankDeposit", [_dec273], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor273 = _applyDecoratedDescriptor(_class2.prototype, "lblNameAccountBank", [_dec274], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor274 = _applyDecoratedDescriptor(_class2.prototype, "lblCodeContent", [_dec275], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor275 = _applyDecoratedDescriptor(_class2.prototype, "lblTimeExpired", [_dec276], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor276 = _applyDecoratedDescriptor(_class2.prototype, "btnCreateCodeContent", [_dec277], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor277 = _applyDecoratedDescriptor(_class2.prototype, "nodeContentCodeBank", [_dec278], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor278 = _applyDecoratedDescriptor(_class2.prototype, "lblWalletAccountEWalletVNDeposit", [_dec279], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor279 = _applyDecoratedDescriptor(_class2.prototype, "lblWalletAccountNameEWalletVNDeposit", [_dec280], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor280 = _applyDecoratedDescriptor(_class2.prototype, "lblTimeExpiredEWalletVN", [_dec281], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor281 = _applyDecoratedDescriptor(_class2.prototype, "btnCreateCodeContentEWalletVN", [_dec282], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor282 = _applyDecoratedDescriptor(_class2.prototype, "lblContentEWalletVNDeposit", [_dec283], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor283 = _applyDecoratedDescriptor(_class2.prototype, "keyWalletAccountEWalletVNDeposit", [_dec284], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor284 = _applyDecoratedDescriptor(_class2.prototype, "nodeContentCodeEWalletVN", [_dec285], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor285 = _applyDecoratedDescriptor(_class2.prototype, "lblContentNoteEWalletVN", [_dec286], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor286 = _applyDecoratedDescriptor(_class2.prototype, "lblWalletAccountEWalletWorldDeposit", [_dec287], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor287 = _applyDecoratedDescriptor(_class2.prototype, "lblWalletAccountNameEWalletWorldDeposit", [_dec288], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor288 = _applyDecoratedDescriptor(_class2.prototype, "lblTimeExpiredEWalletWorld", [_dec289], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor289 = _applyDecoratedDescriptor(_class2.prototype, "btnCreateCodeContentEWalletWorld", [_dec290], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor290 = _applyDecoratedDescriptor(_class2.prototype, "lblContentEWalletWorldDeposit", [_dec291], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor291 = _applyDecoratedDescriptor(_class2.prototype, "keyWalletAccountEWalletWorldDeposit", [_dec292], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor292 = _applyDecoratedDescriptor(_class2.prototype, "nodeContentCodeEWalletWorld", [_dec293], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor293 = _applyDecoratedDescriptor(_class2.prototype, "lblContentNoteEWalletWorld", [_dec294], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor294 = _applyDecoratedDescriptor(_class2.prototype, "tabBank", [_dec295], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor295 = _applyDecoratedDescriptor(_class2.prototype, "spriteActiveTabBank", [_dec296], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor296 = _applyDecoratedDescriptor(_class2.prototype, "spriteNotActiveTabBank", [_dec297], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor297 = _applyDecoratedDescriptor(_class2.prototype, "containerBankGianTiep", [_dec298], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor298 = _applyDecoratedDescriptor(_class2.prototype, "containerBankTrucTiep", [_dec299], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor299 = _applyDecoratedDescriptor(_class2.prototype, "depositBankDropList", [_dec300], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor300 = _applyDecoratedDescriptor(_class2.prototype, "depositBankDropListItem", [_dec301], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor301 = _applyDecoratedDescriptor(_class2.prototype, "depositBankGianTiepLabel", [_dec302], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor302 = _applyDecoratedDescriptor(_class2.prototype, "edbAmountBankGianTiep", [_dec303], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor303 = _applyDecoratedDescriptor(_class2.prototype, "lblCoinReceive", [_dec304], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor304 = _applyDecoratedDescriptor(_class2.prototype, "containerBankThaiLand", [_dec305], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor305 = _applyDecoratedDescriptor(_class2.prototype, "depositBankDropListThaiLand", [_dec306], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor306 = _applyDecoratedDescriptor(_class2.prototype, "depositBankDropListItemThaiLand", [_dec307], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor307 = _applyDecoratedDescriptor(_class2.prototype, "depositBankGianTiepLabelThaiLand", [_dec308], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor308 = _applyDecoratedDescriptor(_class2.prototype, "edbAmountBankGianTiepThaiLand", [_dec309], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor309 = _applyDecoratedDescriptor(_class2.prototype, "lblCoinReceiveThaiLand", [_dec310], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor310 = _applyDecoratedDescriptor(_class2.prototype, "lblToastDepositCard", [_dec311], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor311 = _applyDecoratedDescriptor(_class2.prototype, "lblToastDepositBankGianTiep", [_dec312], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor312 = _applyDecoratedDescriptor(_class2.prototype, "lblToastDepositBankGianTiepThaiLand", [_dec313], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PopupDownload.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Dialog.ts'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, Dialog;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
    }, function (module) {
      Dialog = module.default;
    }],
    execute: function () {
      var _dec, _class;
      cclegacy._RF.push({}, "ceac7fbVVJLfqbNuhY8hDeE", "PopupDownload", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PopupDownload = exports('default', (_dec = ccclass('PopupDownload'), _dec(_class = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(PopupDownload, _Dialog);
        function PopupDownload() {
          return _Dialog.apply(this, arguments) || this;
        }
        var _proto = PopupDownload.prototype;
        _proto.start = function start() {
          // Any initialization if needed
        };
        _proto.show = function show() {
          _Dialog.prototype.show.call(this);
        };
        _proto.dismiss = function dismiss() {
          _Dialog.prototype.dismiss.call(this);
        };
        return PopupDownload;
      }(Dialog)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PopupEvent.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Config.ts', './Dialog.ts', './App.ts', './BroadcastListener.ts', './Http.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, _createForOfIteratorHelperLoose, cclegacy, _decorator, Node, Toggle, Prefab, instantiate, Label, Sprite, Configs, Dialog, App, BroadcastReceiver, Http;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
      _createForOfIteratorHelperLoose = module.createForOfIteratorHelperLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Toggle = module.Toggle;
      Prefab = module.Prefab;
      instantiate = module.instantiate;
      Label = module.Label;
      Sprite = module.Sprite;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      Dialog = module.default;
    }, function (module) {
      App = module.default;
    }, function (module) {
      BroadcastReceiver = module.BroadcastReceiver;
    }, function (module) {
      Http = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;
      cclegacy._RF.push({}, "2976aOedGlAFb8HbasGZH2F", "PopupEvent", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PopupEvent = exports('default', (_dec = ccclass('PopupEvent'), _dec2 = property(Node), _dec3 = property(Node), _dec4 = property([Toggle]), _dec5 = property(Prefab), _dec(_class = (_class2 = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(PopupEvent, _Dialog);
        function PopupEvent() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Dialog.call.apply(_Dialog, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "contentTabToday", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "contentTabCommon", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabToggle", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "missionPrefab", _descriptor4, _assertThisInitialized(_this));
          _this._internalToggleChange = false;
          return _this;
        }
        var _proto = PopupEvent.prototype;
        _proto.start = function start() {
          this.showTab(0);
        };
        _proto.show = function show() {
          _Dialog.prototype.show.call(this);
        };
        _proto.dismiss = function dismiss() {
          _Dialog.prototype.dismiss.call(this);
        };
        _proto.onTabSelected = function onTabSelected(toggle, index) {
          if (this._internalToggleChange) return;
          var tabIndex = parseInt(index);
          this.showTab(tabIndex);
        };
        _proto.showTab = function showTab(index) {
          this._internalToggleChange = true;
          this.tabToggle.forEach(function (tab, i) {
            tab.isChecked = i === index;
          });
          this._internalToggleChange = false;
          var isToday = index === 0;
          this.contentTabToday.active = isToday;
          this.contentTabCommon.active = !isToday;
          this.getMissionData(isToday ? 2 : 1);
        };
        _proto.getMissionData = function getMissionData(questType) {
          var _this2 = this;
          var url = Configs.App.DOMAIN_CONFIG['GetListMission'];
          var params = {
            CurrencyID: Configs.Login.CurrencyID,
            GameID: 0
          };
          Http.get(url, params, function (status, response) {
            if (status === 200 && response.c === 0) {
              _this2.populateLogList(response.d, questType);
            } else {
              console.error("GetMissionData Error:", response);
            }
          });
        };
        _proto.populateLogList = function populateLogList(data, questType) {
          var _this3 = this;
          var contentNode = questType === 2 ? this.contentTabToday : this.contentTabCommon;
          contentNode.removeAllChildren();
          var filteredData = data.filter(function (quest) {
            return quest.questType === questType;
          });
          filteredData.forEach(function (quest, index) {
            var missionItem = instantiate(_this3.missionPrefab);
            var currentProgress = parseInt(quest.currentProgress);
            var maxProgress = parseInt(quest.maxProgress);
            var displayProgress = Math.min(currentProgress, maxProgress);
            var isCompleted = currentProgress >= maxProgress;
            var status = quest.status;
            missionItem.getChildByName("questName").getComponent(Label).string = quest.questName;
            missionItem.getChildByName("progress").getChildByName("maxProgress").getComponent(Label).string = maxProgress.toLocaleString("vi-VN");
            missionItem.getChildByName("progress").getChildByName("currentProgress").getComponent(Label).string = displayProgress.toLocaleString("vi-VN");
            missionItem.getChildByName("bgCoinMission").getChildByName("award").getComponent(Label).string = quest.award.toLocaleString("vi-VN");
            missionItem.getChildByName("progress").getChildByName("process").getComponent(Sprite).fillRange = displayProgress / maxProgress;
            var btnToDo = missionItem.getChildByName("btnToDo");
            var btnClaim = missionItem.getChildByName("btnClaim");
            var bg = missionItem.getChildByName("bg");
            var bgSuccess = missionItem.getChildByName("bgSuccess");
            var textDone = missionItem.getChildByName("textDone");
            btnToDo.getChildByName("text").getComponent(Label).string = App.instance.getTextLang(questType === 1 ? "txt_top_up" : "ca193");
            if (status === 1) {
              _this3.setNodeState([btnToDo, btnClaim, bg], false);
              _this3.setNodeState([bgSuccess, textDone], true);
            } else if (isCompleted) {
              _this3.setNodeState([btnToDo, bg, textDone], false);
              _this3.setNodeState([btnClaim, bgSuccess], true);
              btnClaim == null || btnClaim.off(Node.EventType.TOUCH_END);
              btnClaim == null || btnClaim.on(Node.EventType.TOUCH_END, function () {
                _this3.onClaimReward(parseInt(quest.questID), missionItem);
              });
            } else {
              _this3.setNodeState([btnToDo, bg], true);
              _this3.setNodeState([btnClaim, bgSuccess], false);
              if (textDone) textDone.active = false;
            }
            contentNode.addChild(missionItem);
          });
        };
        _proto.onClaimReward = function onClaimReward(questID, missionNode) {
          var url = Configs.App.DOMAIN_CONFIG['TakeReward'];
          var params = {
            QuestID: questID
          };
          Http.post(url, params, function (status, response) {
            if (status === 200 && response.c === 0) {
              App.instance.showToast(App.instance.getTextLang("txt_giftcode_success"));
              missionNode.getChildByName("btnClaim").active = false;
              missionNode.getChildByName("textDone").active = true;
              BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);
            } else {
              App.instance.showToast(App.instance.getTextLang("txt_giftcode_failed"));
            }
          });
        }

        // ===== Utility helpers =====
        ;

        _proto.setLabel = function setLabel(root, path, text) {
          var _this$getNodeByPath;
          var target = (_this$getNodeByPath = this.getNodeByPath(root, path)) == null ? void 0 : _this$getNodeByPath.getComponent(Label);
          if (target) target.string = text;
        };
        _proto.getSprite = function getSprite(root, path) {
          var _this$getNodeByPath$g, _this$getNodeByPath2;
          return (_this$getNodeByPath$g = (_this$getNodeByPath2 = this.getNodeByPath(root, path)) == null ? void 0 : _this$getNodeByPath2.getComponent(Sprite)) != null ? _this$getNodeByPath$g : null;
        };
        _proto.getNodeByPath = function getNodeByPath(root, path) {
          var parts = path.split('/');
          var current = root;
          for (var _iterator = _createForOfIteratorHelperLoose(parts), _step; !(_step = _iterator()).done;) {
            var part = _step.value;
            if (!current) return null;
            current = current.getChildByName(part);
          }
          return current;
        };
        _proto.setNodeState = function setNodeState(nodes, active) {
          nodes.forEach(function (n) {
            if (n) n.active = active;
          });
        };
        return PopupEvent;
      }(Dialog), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "contentTabToday", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "contentTabCommon", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "tabToggle", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "missionPrefab", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PopupEventX2.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Dialog.ts', './Global.ts', './App.ts', './Config.ts', './Http.ts', './Utils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Toggle, Prefab, SpriteFrame, Label, Sprite, instantiate, tween, Dialog, Global, App, Configs, Http, Utils;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Toggle = module.Toggle;
      Prefab = module.Prefab;
      SpriteFrame = module.SpriteFrame;
      Label = module.Label;
      Sprite = module.Sprite;
      instantiate = module.instantiate;
      tween = module.tween;
    }, function (module) {
      Dialog = module.default;
    }, function (module) {
      Global = module.Global;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      Utils = module.Utils;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _dec25, _dec26, _dec27, _dec28, _dec29, _dec30, _dec31, _dec32, _dec33, _dec34, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _descriptor25, _descriptor26, _descriptor27, _descriptor28, _descriptor29, _descriptor30, _descriptor31, _descriptor32, _descriptor33;
      cclegacy._RF.push({}, "7ce8cZXyPhBbpTfaePxHGea", "PopupEventX2", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PopupEventX2 = exports('default', (_dec = ccclass("PopupEventX2"), _dec2 = property([Node]), _dec3 = property([Node]), _dec4 = property([Node]), _dec5 = property(Toggle), _dec6 = property([Node]), _dec7 = property([Node]), _dec8 = property(Prefab), _dec9 = property(Node), _dec10 = property(Prefab), _dec11 = property(Node), _dec12 = property(Node), _dec13 = property(SpriteFrame), _dec14 = property(SpriteFrame), _dec15 = property(SpriteFrame), _dec16 = property(SpriteFrame), _dec17 = property(SpriteFrame), _dec18 = property(SpriteFrame), _dec19 = property(SpriteFrame), _dec20 = property(SpriteFrame), _dec21 = property(SpriteFrame), _dec22 = property(Node), _dec23 = property(Node), _dec24 = property(Node), _dec25 = property(Label), _dec26 = property(Label), _dec27 = property(Sprite), _dec28 = property(Node), _dec29 = property(Node), _dec30 = property(Node), _dec31 = property(Node), _dec32 = property(Node), _dec33 = property(Label), _dec34 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(PopupEventX2, _Dialog);
        function PopupEventX2() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Dialog.call.apply(_Dialog, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "tabToggle", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabRoomIDSelected", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabRoomIDSelectedMyLogs", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabEvent", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabs", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabContents", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "listJackpotPrefab", _descriptor7, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "listJackpotContent", _descriptor8, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "logJackpotPrefab", _descriptor9, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "logJackpotContent", _descriptor10, _assertThisInitialized(_this));
          // @property(Node) preButton: Node = null;
          // @property(Node) nextButton: Node = null;
          _initializerDefineProperty(_this, "listMyJackpotContent", _descriptor11, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "logo_fortune", _descriptor12, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "logo_kingdom", _descriptor13, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "logo_ocean", _descriptor14, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "logo_oracle", _descriptor15, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "logo_dancingNight", _descriptor16, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "logo_dancing", _descriptor17, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "logo_forest", _descriptor18, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "logo_resurrection", _descriptor19, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "logo_minipoker", _descriptor20, _assertThisInitialized(_this));
          //Event Cash In
          _initializerDefineProperty(_this, "prefabGift", _descriptor21, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "allGiftNode", _descriptor22, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "popupRewardGift", _descriptor23, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblAmountPopupReward", _descriptor24, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblTextPopupReward", _descriptor25, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "progressGift", _descriptor26, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerPage", _descriptor27, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "listPage", _descriptor28, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "activePage", _descriptor29, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "inactivePage", _descriptor30, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "listPageMyHu", _descriptor31, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblName", _descriptor32, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerSortItem", _descriptor33, _assertThisInitialized(_this));
          _this.maxPage = 0;
          _this.currentPage = 1;
          _this.itemsPerPage = 10;
          _this.jackpotData = [];
          _this.activeTabIndex = 0;
          _this.activeRoomTabIndex = 1;
          _this.activeRoomTabMyLogIndex = -1;
          _this.oldValues = {};
          //
          _this.logItemMap = {};
          return _this;
        }
        var _proto = PopupEventX2.prototype;
        _proto.start = function start() {
          this.startFetchingJackpot();
        };
        _proto.startFetchingJackpot = function startFetchingJackpot() {
          this.getListJackpot();
          this.schedule(this.getListJackpot, 2);
        };
        _proto.onTabSelected = function onTabSelected(toggle, index) {
          var tabIndex = parseInt(index);
          if (toggle.isChecked === false) return;
          this.showTab(tabIndex);
        };
        _proto.onTabRoomIDSelected = function onTabRoomIDSelected(toggle, index) {
          var tabIndex = parseInt(index);
          this.tabRoomIDSelected.forEach(function (tab, i) {
            var btn = tab.getChildByName("active");
            if (btn) btn.active = i === tabIndex;
          });
          if (this.activeRoomTabIndex === tabIndex) {
            return;
          }
          this.activeRoomTabIndex = tabIndex;

          // Cập nhật UI tab room
          // this.tabToggle.forEach((tab, i) => {
          //     const btn = tab.getChildByName("active");
          //     if (btn) btn.active = i === tabIndex;
          // });

          this.getLogJackpot(1, parseInt(index), "", false);
        };
        _proto.onTabRoomIDSelectedMyLogs = function onTabRoomIDSelectedMyLogs(toggle, index) {
          var tabIndex = parseInt(index);
          this.tabRoomIDSelectedMyLogs.forEach(function (tab, i) {
            var btn = tab.getChildByName("active");
            if (btn) btn.active = i === tabIndex;
          });
          if (this.activeRoomTabMyLogIndex === tabIndex) {
            return;
          }
          this.activeRoomTabMyLogIndex = tabIndex;
          this.getLogJackpot(1, parseInt(index), "", true);
        };
        _proto.showTab = function showTab(index) {
          this.activeTabIndex = index;
          this.tabToggle.forEach(function (tab, i) {
            var btn = tab.getChildByName("btn-room-type");
            if (btn) btn.active = i === index;
          });
          this.tabContents.forEach(function (tab, i) {
            return tab && (tab.active = i === index);
          });
          this.unschedule(this.getListJackpot);
          switch (index) {
            case 0:
              this.startFetchingJackpot();
              break;
            case 1:
              this.getInfoEventCashIn();
              break;
            case 2:
              this.getLogJackpot(1, 1, "", false);
              break;
            case 3:
              this.lblName.string = Configs.Login.Nickname;
              this.getLogJackpot(1, 1, "", true);
              break;
          }
        };
        _proto.dismiss = function dismiss() {
          _Dialog.prototype.dismiss.call(this);
          this.unschedule(this.getListJackpot);
        };
        _proto._onDismissed = function _onDismissed() {
          this.node.getComponentsInChildren("EditBox").forEach(function (edit) {
            edit.tabIndex = -1;
          });
          this.node.active = false;
        };
        _proto.getListJackpot = function getListJackpot() {
          var _this2 = this;
          if (Configs.Login.IsLogin) {
            Http.get(Configs.App.DOMAIN_CONFIG["GetListJackpot"], {
              CurrencyID: Configs.Login.CurrencyID
            }, function (status, res) {
              if (status === 200 && res.c === 0) {
                var groupedData = _this2.groupJackpotData(res.d);
                _this2.populateLogList(groupedData);
              }
            });
          }
        };
        _proto.getLogJackpot = function getLogJackpot(currency, roomID, listGame, myLogs) {
          var _this3 = this;
          App.instance.showLoading(true);
          if (Configs.Login.IsLogin) {
            // console.log(myLogs);
            Http.get(Configs.App.DOMAIN_CONFIG["GetJackpotEventLogs"], {
              Currency: currency,
              RoomID: roomID,
              ListGames: listGame,
              MyLogs: myLogs
            }, function (status, res) {
              if (status === 200 && res.c === 0) {
                App.instance.showLoading(false);
                // console.log(res.d);

                _this3.populateLogJackpot(res.d, myLogs ? _this3.listMyJackpotContent : _this3.logJackpotContent);
              }
            });
          }
        };
        _proto.getLogJackpotFromSort = function getLogJackpotFromSort(event, listGame) {
          var _this4 = this;
          if (listGame === void 0) {
            listGame = "";
          }
          App.instance.showLoading(true);
          if (Configs.Login.IsLogin) {
            Http.get(Configs.App.DOMAIN_CONFIG["GetJackpotEventLogs"], {
              Currency: 1,
              RoomID: this.activeRoomTabIndex,
              ListGames: listGame,
              MyLogs: false
            }, function (status, res) {
              if (status === 200 && res.c === 0) {
                App.instance.showLoading(false);
                console.log(res.d);
                _this4.populateLogJackpot(res.d, _this4.logJackpotContent);
                _this4.actToggleContainerSort();
              }
            });
          }
        };
        _proto.getInfoEventCashIn = function getInfoEventCashIn() {
          var _this5 = this;
          App.instance.showLoading(true);
          if (Configs.Login.IsLogin) {
            Http.get(Configs.App.DOMAIN_CONFIG["GetCashInEvent"], {
              Currency: 1
            }, function (status, res) {
              if (status === 200 && res.c === 0) {
                App.instance.showLoading(false);
                // console.log(res);
                var giftData = res.d || [];
                var _loop = function _loop(i) {
                  var giftNode = _this5.allGiftNode.children[i];
                  var giftLocked = giftNode.getChildByName('gift-locked');
                  var giftOpened = giftNode.getChildByName('gift-opened');
                  var giftActived = giftNode.getChildByName('gift-actived');
                  var tag = giftNode.getChildByName('tag');
                  var label = tag == null ? void 0 : tag.getComponentInChildren(Label);
                  if (giftLocked) giftLocked.active = true;
                  if (giftOpened) giftOpened.active = false;
                  if (giftActived) giftActived.active = false;
                  if (tag) tag.active = false;
                  if (label) label.string = '';
                  var giftInfo = giftData.find(function (g) {
                    return g.level === i + 1;
                  });
                  if (giftInfo && giftInfo.isOpen === 1) {
                    _this5.progressGift.fillRange = i / 10;
                    if (giftLocked) giftLocked.active = false;
                    if (giftOpened) giftOpened.active = false;
                    if (giftActived) giftActived.active = true;
                    if (label && giftInfo.amount != null) {
                      if (tag) tag.active = true;
                      label.string = "+" + (giftInfo.amount / 1000).toString() + "K";
                    }
                    if (giftActived) {
                      giftActived.off(Node.EventType.TOUCH_END);
                      giftActived.on(Node.EventType.TOUCH_END, function () {
                        App.instance.showLoading(true);
                        Http.post(Configs.App.DOMAIN_CONFIG["OpenGiftCashInEvent"], {
                          Level: i + 1
                        }, function (status, res) {
                          if (status === 200 && res.c === 0) {
                            var _App$instance$gameNod;
                            // console.log(res.p);
                            if (giftLocked) giftLocked.active = false;
                            if (giftOpened) giftOpened.active = true;
                            if (giftActived) giftActived.active = false;
                            var firstPrize = res.p[0];
                            var _firstPrize$split = firstPrize.split(","),
                              gameIdStr = _firstPrize$split[0],
                              amountStr = _firstPrize$split[1];
                            var gameId = parseInt(gameIdStr);
                            var amount = parseInt(amountStr);
                            var gameNode = (_App$instance$gameNod = App.instance.gameNodeMap.get(gameId)) == null ? void 0 : _App$instance$gameNod[0];
                            var gameName = (gameNode == null ? void 0 : gameNode.name) || "Game " + gameId;
                            _this5.lblAmountPopupReward.string = (amount / 1000).toString() + "K";
                            _this5.lblTextPopupReward.string = "Game " + gameName + " " + amount / 1000 + "K";
                            _this5.popupRewardGift.active = true;
                            setTimeout(function () {
                              _this5.popupRewardGift.active = false;
                            }, 1000);
                          }
                        });
                      }, _this5);
                    }
                  }
                };
                for (var i = 0; i < _this5.allGiftNode.children.length; i++) {
                  _loop(i);
                }
              }
            });
          }
        };
        _proto.populateLogJackpot = function populateLogJackpot(data, container) {
          this.jackpotData = data.sort(function (a, b) {
            return b.prizeValue - a.prizeValue;
          });
          this.currentPage = 1;
          this.renderPage(container);
        };
        _proto.renderPage = function renderPage(container) {
          var _this6 = this;
          container.removeAllChildren();
          var start = (this.currentPage - 1) * this.itemsPerPage;
          var end = start + this.itemsPerPage;
          var pageData = this.jackpotData.slice(start, end);
          pageData.forEach(function (item, index) {
            var logItem = instantiate(_this6.logJackpotPrefab);
            logItem.parent = container;
            var bg1 = logItem.getChildByName("bg1");
            var bg2 = logItem.getChildByName("bg2");
            if (bg1 && bg2) {
              bg1.active = index % 2 === 0;
              bg2.active = index % 2 !== 0;
            }
            var content = logItem.getChildByName("content");
            // content.getChildByName("time").getComponent(Label).string = this.formatDate(item.createdTime);
            var lblNameGame = content.getChildByName("nameGame").getComponent(Label);
            switch (item.gameID) {
              case 213:
                lblNameGame.string = App.instance.getTextLang("tx_than_tai");
                break;
              case 201:
                lblNameGame.string = App.instance.getTextLang("tx_vuong_quoc");
                break;
              case 207:
                lblNameGame.string = App.instance.getTextLang("tx_thuy_cung");
                break;
              case 203:
                lblNameGame.string = App.instance.getTextLang("tx_sam_truyen");
                break;
              case 215:
                lblNameGame.string = App.instance.getTextLang("tx_vu_truong");
                break;
              case 205:
                lblNameGame.string = App.instance.getTextLang("tx_gai_nhay");
                break;
              case 211:
                lblNameGame.string = App.instance.getTextLang("tx_rung_vang");
                break;
              case 101:
                lblNameGame.string = App.instance.getTextLang("na22");
                break;
              case 109:
                lblNameGame.string = App.instance.getTextLang("na23");
                break;
            }
            content.getChildByName("time").getComponent(Label).string = Utils.formatDatetime(item.createdTime, "dd/MM/yyyy HH:mm:ss");
            var teamNode = content.getChildByName("name").getChildByName("teamName").getComponent(Label);
            var userNode = content.getChildByName("name").getChildByName("displayName").getComponent(Label);
            var match = item.nickname.match(/^\[(.*?)\](.*)$/);
            if (match) {
              teamNode.string = "[" + match[1] + "]";
              userNode.string = match[2];
            } else {
              teamNode.string = "";
              userNode.string = item.nickname;
            }
            content.getChildByName("coinWin").getComponent(Label).string = item.prizeValue.toLocaleString();
          });
          this.updatePaginationButtons(container);
        };
        _proto.nextPage = function nextPage() {
          var container = this.getActiveContainer();
          if (this.currentPage < Math.ceil(this.jackpotData.length / this.itemsPerPage)) {
            this.currentPage++;
            this.renderPage(container);
          }
        };
        _proto.prevPage = function prevPage() {
          var container = this.getActiveContainer();
          if (this.currentPage > 1) {
            this.currentPage--;
            this.renderPage(container);
          }
        };
        _proto.getActiveContainer = function getActiveContainer() {
          if (this.activeTabIndex === 2) return this.logJackpotContent;
          if (this.activeTabIndex === 3) return this.listMyJackpotContent;
          return null;
        };
        _proto.updatePaginationButtons = function updatePaginationButtons(container) {
          var _this7 = this;
          // const totalPages = Math.ceil(this.jackpotData.length / this.itemsPerPage);
          // this.preButton.active = this.currentPage > 1;
          // this.nextButton.active = this.currentPage < totalPages;
          if (container.name == "ContentMyHu") {
            this.listPageMyHu.removeAllChildren();
          } else {
            this.listPage.removeAllChildren();
          }
          var totalPages = Math.ceil(this.jackpotData.length / this.itemsPerPage);
          var maxPageButtons = 5; // Hiển thị tối đa 5 nút trang
          var startPage = Math.max(1, this.currentPage - Math.floor(maxPageButtons / 2));
          var endPage = startPage + maxPageButtons - 1;
          if (endPage > totalPages) {
            endPage = totalPages;
            startPage = Math.max(1, endPage - maxPageButtons + 1);
          }
          var _loop2 = function _loop2(i) {
            var pageItem = instantiate(i === _this7.currentPage ? _this7.activePage : _this7.inactivePage);
            pageItem.getChildByName("lblPage").getComponent(Label).string = i.toString();
            pageItem.parent = container.name == "ContentMyHu" ? _this7.listPageMyHu : _this7.listPage;
            pageItem.on(Node.EventType.TOUCH_END, function () {
              _this7.currentPage = i;
              _this7.renderPage(container);
            });
          };
          for (var i = startPage; i <= endPage; i++) {
            _loop2(i);
          }
        };
        _proto.populateLogList = function populateLogList(data) {
          var _this8 = this;
          // this.listJackpotContent.removeAllChildren();
          var logoMap = {
            213: this.logo_fortune,
            201: this.logo_kingdom,
            207: this.logo_ocean,
            203: this.logo_oracle,
            215: this.logo_dancingNight,
            205: this.logo_dancing,
            211: this.logo_forest,
            107: this.logo_resurrection,
            101: this.logo_minipoker
          };
          data.forEach(function (group) {
            var _group$rooms$;
            // console.log(group);
            // const logItem = instantiate(this.listJackpotPrefab);
            // logItem.parent = this.listJackpotContent;

            var gameID = (_group$rooms$ = group.rooms[0]) == null ? void 0 : _group$rooms$.gameID;
            var logItem = _this8.logItemMap[gameID];
            if (!logItem) {
              logItem = instantiate(_this8.listJackpotPrefab);
              logItem.parent = _this8.listJackpotContent;
              _this8.logItemMap[gameID] = logItem;
            }
            var gameNameLabel = logItem.getChildByName("game").getChildByName("bgListJP").getChildByName("nameGame").getComponent(Label);
            var gameNameNode = logItem.getChildByName("game").getChildByName("bgListJP").getChildByName("nameGame");
            // const gameID = group.rooms[0]?.gameID;

            switch (gameID) {
              case 213:
                gameNameLabel.string = App.instance.getTextLang("tx_than_tai");
                gameNameNode.on(Node.EventType.TOUCH_END, function () {
                  // Global.LobbyController.actGoToCaiShen();
                  _this8.dismiss();
                });
                break;
              case 201:
                gameNameLabel.string = App.instance.getTextLang("tx_vuong_quoc");
                gameNameNode.on(Node.EventType.TOUCH_END, function () {
                  // Global.LobbyController.actGotoKingdom();
                  _this8.dismiss();
                });
                break;
              case 207:
                gameNameLabel.string = App.instance.getTextLang("tx_thuy_cung");
                break;
              case 203:
                gameNameLabel.string = App.instance.getTextLang("tx_sam_truyen");
                break;
              case 215:
                gameNameLabel.string = App.instance.getTextLang("tx_vu_truong");
                break;
              case 205:
                gameNameLabel.string = App.instance.getTextLang("tx_gai_nhay");
                gameNameNode.on(Node.EventType.TOUCH_END, function () {
                  // Global.LobbyController.actGoToDancing();
                  _this8.dismiss();
                });
                break;
              case 211:
                gameNameLabel.string = App.instance.getTextLang("tx_rung_vang");
                gameNameNode.on(Node.EventType.TOUCH_END, function () {
                  // Global.LobbyController.actGotoForest();
                  _this8.dismiss();
                });
                break;
              case 107:
                gameNameLabel.string = App.instance.getTextLang("txt_resurrection");
                logItem.getChildByName("game").getChildByName("icon").active = false;
                logItem.getChildByName("game").getChildByName("room1").getChildByName("ic-multi-play").active = false;
                logItem.getChildByName("game").getChildByName("room2").getChildByName("ic-multi-play").active = false;
                logItem.getChildByName("game").getChildByName("room3").getChildByName("ic-multi-play").active = false;
                gameNameNode.on(Node.EventType.TOUCH_END, function () {
                  // Global.LobbyController.actGamePhucSinh();
                  _this8.dismiss();
                });
                break;
              case 101:
                gameNameLabel.string = App.instance.getTextLang("txt_mini_poker");
                logItem.getChildByName("game").getChildByName("icon").active = false;
                logItem.getChildByName("game").getChildByName("room1").getChildByName("ic-multi-play").active = false;
                logItem.getChildByName("game").getChildByName("room2").getChildByName("ic-multi-play").active = false;
                logItem.getChildByName("game").getChildByName("room3").getChildByName("ic-multi-play").active = false;
                gameNameNode.on(Node.EventType.TOUCH_END, function () {
                  // Global.LobbyController.actGameMiniPoker();
                  _this8.dismiss();
                });
                break;
            }
            group.rooms.forEach(function (room) {
              var roomNode = logItem.getChildByName("game").getChildByName("room" + room.roomID);
              if (roomNode) {
                var _this8$oldValues$_key;
                var label = roomNode.getChildByName("fun").getComponent(Label);
                var _key2 = room.gameID + "_" + room.roomID;
                var newValue = room.jackpotFund;
                var oldValue = (_this8$oldValues$_key = _this8.oldValues[_key2]) != null ? _this8$oldValues$_key : 0;
                if (oldValue === newValue) return;
                if (oldValue !== newValue) {
                  // console.log(`[Room ${room.roomID}] Tween từ ${oldValue} → ${newValue}`);

                  _this8.oldValues[_key2] = newValue;
                  tween({
                    value: oldValue
                  }).to(1, {
                    value: newValue
                  }, {
                    onUpdate: function onUpdate(target) {
                      var current = Math.floor(target.value);
                      label.string = current.toLocaleString("vi-VN");
                    }
                  }).call(function () {
                    label.string = newValue.toLocaleString("vi-VN");
                  }).start();
                }
              }
              var spriteIcon = logItem.getChildByName("game").getChildByName("room" + room.roomID).getChildByName("xIcon");
              if (room.multiplier > 0 && room.nextJackpot === 0) {
                spriteIcon.active = true;
                switch (room.multiplier) {
                  case 2:
                    spriteIcon.getComponent(Sprite).spriteFrame = Global.LobbyController.icon_x2;
                    break;
                  case 3:
                    spriteIcon.getComponent(Sprite).spriteFrame = Global.LobbyController.icon_x3;
                    break;
                  case 4:
                    spriteIcon.getComponent(Sprite).spriteFrame = Global.LobbyController.icon_x4;
                    break;
                  case 5:
                    spriteIcon.getComponent(Sprite).spriteFrame = Global.LobbyController.icon_x5;
                    break;
                  case 6:
                    spriteIcon.getComponent(Sprite).spriteFrame = Global.LobbyController.icon_x6;
                    break;
                }
              } else {
                spriteIcon.active = false;
              }
            });
            var avatarGame = logItem.getChildByName("game").getChildByName("bgListJP").getChildByName("avaGame");
            var sprite = avatarGame.getComponent(Sprite);
            var spriteFrame = logoMap[gameID];
            if (sprite && spriteFrame) sprite.spriteFrame = spriteFrame;
          });
        };
        _proto.groupJackpotData = function groupJackpotData(data) {
          var grouped = {};
          data.forEach(function (item) {
            if (!grouped[item.gameName]) {
              grouped[item.gameName] = {
                gameName: item.gameName,
                rooms: []
              };
            }
            grouped[item.gameName].rooms.push(item);
          });
          return Object.values(grouped);
        }

        // formatDate(dateStr: string): string {
        //     return new Date(dateStr).toLocaleString();
        // }
        ;

        _proto.actToggleContainerSort = function actToggleContainerSort() {
          this.containerSortItem.active = !this.containerSortItem.active;
        };
        return PopupEventX2;
      }(Dialog), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "tabToggle", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "tabRoomIDSelected", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "tabRoomIDSelectedMyLogs", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "tabEvent", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "tabs", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "tabContents", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "listJackpotPrefab", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "listJackpotContent", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "logJackpotPrefab", [_dec10], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "logJackpotContent", [_dec11], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "listMyJackpotContent", [_dec12], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "logo_fortune", [_dec13], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "logo_kingdom", [_dec14], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "logo_ocean", [_dec15], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor15 = _applyDecoratedDescriptor(_class2.prototype, "logo_oracle", [_dec16], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor16 = _applyDecoratedDescriptor(_class2.prototype, "logo_dancingNight", [_dec17], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor17 = _applyDecoratedDescriptor(_class2.prototype, "logo_dancing", [_dec18], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor18 = _applyDecoratedDescriptor(_class2.prototype, "logo_forest", [_dec19], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor19 = _applyDecoratedDescriptor(_class2.prototype, "logo_resurrection", [_dec20], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor20 = _applyDecoratedDescriptor(_class2.prototype, "logo_minipoker", [_dec21], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor21 = _applyDecoratedDescriptor(_class2.prototype, "prefabGift", [_dec22], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor22 = _applyDecoratedDescriptor(_class2.prototype, "allGiftNode", [_dec23], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor23 = _applyDecoratedDescriptor(_class2.prototype, "popupRewardGift", [_dec24], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor24 = _applyDecoratedDescriptor(_class2.prototype, "lblAmountPopupReward", [_dec25], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor25 = _applyDecoratedDescriptor(_class2.prototype, "lblTextPopupReward", [_dec26], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor26 = _applyDecoratedDescriptor(_class2.prototype, "progressGift", [_dec27], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor27 = _applyDecoratedDescriptor(_class2.prototype, "containerPage", [_dec28], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor28 = _applyDecoratedDescriptor(_class2.prototype, "listPage", [_dec29], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor29 = _applyDecoratedDescriptor(_class2.prototype, "activePage", [_dec30], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor30 = _applyDecoratedDescriptor(_class2.prototype, "inactivePage", [_dec31], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor31 = _applyDecoratedDescriptor(_class2.prototype, "listPageMyHu", [_dec32], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor32 = _applyDecoratedDescriptor(_class2.prototype, "lblName", [_dec33], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor33 = _applyDecoratedDescriptor(_class2.prototype, "containerSortItem", [_dec34], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PopupGiftCode.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Dialog.ts', './App.ts', './Http.ts', './Config.ts', './BroadcastListener.ts', './Utils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, EditBox, Node, Label, Dialog, App, Http, Configs, BroadcastReceiver, Utils;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      EditBox = module.EditBox;
      Node = module.Node;
      Label = module.Label;
    }, function (module) {
      Dialog = module.default;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      BroadcastReceiver = module.BroadcastReceiver;
    }, function (module) {
      Utils = module.Utils;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;
      cclegacy._RF.push({}, "8aa63y/eI5NMaafLxvuu4Ld", "PopupGiftCode", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PopupGiftCode = exports('default', (_dec = ccclass('PopupGiftCode'), _dec2 = property({
        type: EditBox
      }), _dec3 = property(Node), _dec4 = property(Node), _dec5 = property(Label), _dec6 = property(Label), _dec(_class = (_class2 = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(PopupGiftCode, _Dialog);
        function PopupGiftCode() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Dialog.call.apply(_Dialog, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "edbCode", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "popupAlertDialog", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "popupGiftCode", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblGiftCode", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblContent", _descriptor5, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = PopupGiftCode.prototype;
        _proto.start = function start() {};
        _proto.show = function show() {
          _Dialog.prototype.show.call(this);
          if (this.edbCode) this.edbCode.string = "";
          this.popupAlertDialog.active = false;
          this.popupGiftCode.active = true;
        };
        _proto.actSubmit = function actSubmit() {
          var _this2 = this;
          var code = this.edbCode.string.trim();
          if (code === "") {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_giftcode_blank'));
            return;
          }
          App.instance.showLoading(true);
          var data = {
            Giftcode: code
          };
          Http.post(Configs.App.DOMAIN_CONFIG['UseGiftCode'], data, function (status, res) {
            App.instance.showLoading(false);
            if (status !== 200) return;
            var data = res.d;
            var result = [];
            data.forEach(function (item) {
              if (item.gameID === 0) {
                result.push(Utils.formatNumber(item.value) + " Xu, ");
              } else {
                if (item.value < 100) {
                  result.push(Utils.formatNumber(item.value) + " l\u01B0\u1EE3t quay free " + item.description + " - VND Tipzo");
                } else {
                  result.push(Utils.formatNumber(item.value) + " GOLD trong game " + item.description + " - VND Tipzo");
                }
              }
            });
            if ((res == null ? void 0 : res.c) === 0) {
              BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);
              _this2.popupAlertDialog.active = true;
              _this2.popupGiftCode.active = false;
              _this2.lblGiftCode.string = code;
              _this2.lblContent.string = App.instance.getTextLang('cod18') + " " + result.join(', ');

              // App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_giftcode_success'));
              // this.dismiss();
            } else {
              // Nếu server trả về lỗi, có thể show msg khác tại đây
              App.instance.alertDialog.showMsg((res == null ? void 0 : res.m) || "Có lỗi xảy ra");
            }
          });
        };
        _proto.dismiss = function dismiss() {
          this.popupAlertDialog.active = false;
          _Dialog.prototype.dismiss.call(this);
        };
        return PopupGiftCode;
      }(Dialog), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "edbCode", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "popupAlertDialog", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "popupGiftCode", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "lblGiftCode", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "lblContent", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PopupHistoryWheel.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Dialog.ts', './Http.ts', './App.ts', './Config.ts', './Utils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, log, instantiate, Label, Dialog, Http, App, Configs, Utils;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      log = module.log;
      instantiate = module.instantiate;
      Label = module.Label;
    }, function (module) {
      Dialog = module.default;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      Utils = module.Utils;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;
      cclegacy._RF.push({}, "3c4dfEmF8JE5ZQivD4roLgo", "PopupHistoryWheel", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PopupHistoryWheel = exports('default', (_dec = property(Node), _dec2 = property(Node), _dec3 = property(Node), _dec4 = property(Node), ccclass(_class = (_class2 = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(PopupHistoryWheel, _Dialog);
        function PopupHistoryWheel() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Dialog.call.apply(_Dialog, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "itemClone", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "parentScrollView", _descriptor2, _assertThisInitialized(_this));
          // LIFE-CYCLE CALLBACKS:
          // onLoad () {}
          _this.isEmtyData = false;
          _this.page = 1;
          _initializerDefineProperty(_this, "nodeVip", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "itemVip", _descriptor4, _assertThisInitialized(_this));
          _this.popupSpinWheel = void 0;
          _this.type = 0;
          _this.prizes = [[{
            "id": 1,
            "prize": "100.000"
          }, {
            "id": 2,
            "prize": "200.000"
          }, {
            "id": 3,
            "prize": "300.000"
          }, {
            "id": 4,
            "prize": "400.000"
          }, {
            "id": 5,
            "prize": "500.000"
          }, {
            "id": 6,
            "prize": "1.000.000"
          }, {
            "id": 7,
            "prize": "2.000.000"
          }, {
            "id": 8,
            "prize": "3.000.000"
          }, {
            "id": 9,
            "prize": "4.000.000"
          }, {
            "id": 90,
            "prize": "4.000.000"
          }, {
            "id": 10,
            "prize": "5.000.000"
          }, {
            "id": 11,
            "prize": "10.000.000"
          }, {
            "id": 12,
            "prize": "Mercedes GLC 300"
          }, {
            "id": 13,
            "prize": "SH 150I"
          }, {
            "id": 14,
            "prize": "Iphone"
          }, {
            "id": 30,
            "prize": "+3 "
          }], [{
            "id": 6,
            "prize": 100
          }, {
            "id": 2,
            "prize": 2
          }, {
            "id": 5,
            "prize": 20
          }, {
            "id": 3,
            "prize": 5
          }, {
            "id": 4,
            "prize": 10
          }, {
            "id": 1,
            "prize": 1
          }]];
          return _this;
        }
        var _proto = PopupHistoryWheel.prototype;
        _proto.start = function start() {
          this.getInboxs();
          Http.get(Configs.App.DOMAIN_CONFIG["GetAccountTicket"], {
            "currencyID": Configs.Login.CurrencyID
          }, function (status, json) {
            App.instance.showLoading(false);
            if (status === 200) {
              log(JSON.stringify(json));
            }
          });
        };
        _proto.setData = function setData(popupSpinWheel, type) {
          if (type === void 0) {
            type = 0;
          }
          this.type = type;
          this.popupSpinWheel = popupSpinWheel;
          this.nodeVip.active = type == 0 ? false : true;
        };
        _proto.getInboxs = function getInboxs() {
          var _this2 = this;
          App.instance.showLoading(true);
          Http.get(Configs.App.DOMAIN_CONFIG["VQMM_GetHistoryUrl"], {
            "type": this.type,
            "Page": this.page,
            "PageSize": 10
          }, function (status, json) {
            App.instance.showLoading(false);
            if (status === 200) {
              // log(JSON.stringify(json));
              _this2.isEmtyData = false;
              var results = json['d'];
              if (results.length == 0) {
                _this2.isEmtyData = true;
                return;
              } else {
                _this2.page++;
              }
              var _loop = function _loop(index) {
                  if (_this2.type == 0) {
                    itemNode = instantiate(_this2.itemClone);
                    itemNode.active = true;
                    _this2.parentScrollView.addChild(itemNode);
                    itemNode.children[0].children[0].getComponent(Label).string = results[index]['spinID'];
                    itemNode.children[0].children[1].getComponent(Label).string = Utils.formatDatetime(results[index]['createdTime'], "dd/MM/yyyy HH:mm:ss");
                    itemNode.children[0].children[2].getComponent(Label).string = _this2.popupSpinWheel.mapName["20" + results[index].positionCoin];
                    // itemNode.children[3].getComponent(Label).string =  this.popupSpinWheel.mapName[results[index].positionPrize]; 
                    itemNode.children[0].children[3].getComponent(Label).string = App.instance.getTextLang("vqmm_rs_" + results[index].positionPrize);
                    // if(results[index]['totalPrizeValue']>0){
                    //     itemNode.children[4].getComponent(Label).string = results[index]['totalPrizeValue'] + " vàng";
                    // }
                    itemNode.children[0].children[4].getComponent(Label).string = "";
                  } else {
                    itemNode = instantiate(_this2.itemVip);
                    itemNode.active = true;
                    _this2.parentScrollView.addChild(itemNode);
                    itemNode.children[0].getComponent(Label).string = results[index]['spinID'];
                    itemNode.children[1].getComponent(Label).string = Utils.formatDatetime(results[index]['createdTime'], "dd/MM/yyyy HH:mm:ss");
                    rotateToIdx1 = _this2.prizes[0].findIndex(function (item) {
                      return item.id === results[index].itemID;
                    });
                    if (results[index].itemID == 30) {
                      itemNode.children[2].getComponent(Label).string = _this2.prizes[0][rotateToIdx1].prize.toString() + App.instance.getTextLang("me41");
                    } else {
                      itemNode.children[2].getComponent(Label).string = _this2.prizes[0][rotateToIdx1].prize.toString();
                    }

                    // var rotateToIdx2 = this.prizes[0].findIndex(item => item.id === results[index].prizeID); 

                    itemNode.children[3].getComponent(Label).string = "X" + results[index].multiplier.toString();
                    if (results[index].itemID < 12) {
                      itemNode.children[4].getComponent(Label).string = Utils.formatNumber(results[index]['prizeValue']);
                    } else {
                      itemNode.children[4].getComponent(Label).string = itemNode.children[2].getComponent(Label).string;
                    }
                    // if(results[index]['totalPrizeValue']>0){
                    //     itemNode.children[4].getComponent(Label).string = results[index]['totalPrizeValue'] ;
                    // }
                    // if(results[index]['turnBalance']>0){
                    //     itemNode.children[4].getComponent(Label).string = results[index]['turnBalance'] + " vé chơi";
                    // }
                  }
                },
                itemNode,
                itemNode,
                rotateToIdx1;
              for (var index = 0; index < results.length; index++) {
                _loop(index);
              }
            }
          });
        };
        _proto.scrollEvent = function scrollEvent(sender, event) {
          switch (event) {
            case 1:
              log("Scroll to Bottom");
              if (!this.isEmtyData) {
                this.getInboxs();
              }
              break;
            case 6:
              log("Bounce bottom");
              break;
          }
        }

        // update (dt) {}
        ;

        return PopupHistoryWheel;
      }(Dialog), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "itemClone", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "parentScrollView", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "nodeVip", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "itemVip", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PopupLogin.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Dialog.ts', './App.ts', './Config.ts', './Http.ts', './Utils.ts', './BroadcastListener.ts', './SPUtils.ts', './BundleControl.ts', './Lobby.LoginByOTP.ts', './PopupUpdateNickname.ts', './Lobby.PopupForgetPassword.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, EditBox, Label, instantiate, Dialog, App, Configs, Http, Utils, BroadcastReceiver, SPUtils, BundleControl, LobbyLoginByOTP, PopupUpdateNickname, PopupForgetPassword;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      EditBox = module.EditBox;
      Label = module.Label;
      instantiate = module.instantiate;
    }, function (module) {
      Dialog = module.default;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      Utils = module.Utils;
    }, function (module) {
      BroadcastReceiver = module.BroadcastReceiver;
    }, function (module) {
      SPUtils = module.SPUtils;
    }, function (module) {
      BundleControl = module.default;
    }, function (module) {
      LobbyLoginByOTP = module.default;
    }, function (module) {
      PopupUpdateNickname = module.PopupUpdateNickname;
    }, function (module) {
      PopupForgetPassword = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;
      cclegacy._RF.push({}, "169c1aNrLhHZpy3Q2lOHKAQ", "PopupLogin", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PopupLogin = exports('default', (_dec = ccclass("PopupLogin"), _dec2 = property(EditBox), _dec3 = property(EditBox), _dec4 = property(Label), _dec(_class = (_class2 = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(PopupLogin, _Dialog);
        function PopupLogin() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Dialog.call.apply(_Dialog, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "edbUsername", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbPassword", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "toast", _descriptor3, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = PopupLogin.prototype;
        _proto.showDetail = function showDetail(err) {
          var _this2 = this;
          if (err === void 0) {
            err = '';
          }
          this.showToast(err.toString());
          this.edbUsername.node.getChildByName('error').active = false;
          this.edbPassword.node.getChildByName('error').active = false;
          this.edbUsername.node.on('editing-did-began', function () {
            _this2.edbUsername.node.getChildByName('error').active = false;
          });
          this.edbPassword.node.on('editing-did-began', function () {
            _this2.edbPassword.node.getChildByName('error').active = false;
          });
          _Dialog.prototype.show.call(this);
        };
        _proto.showToast = function showToast(msg) {
          var _this3 = this;
          this.toast.string = msg;
          this.toast.node.active = true;
          this.scheduleOnce(function () {
            _this3.toast.node.active = false;
          }, 3);
        };
        _proto.actLogin = function actLogin() {
          var _this4 = this;
          var username = this.edbUsername.string.trim();
          var password = this.edbPassword.string.trim();
          var isValid = true;
          if (username.length == 0) {
            this.edbUsername.node.getChildByName('error').active = true;
            isValid = false;
          }
          if (password.length == 0) {
            this.edbPassword.node.getChildByName('error').active = true;
            isValid = false;
          }
          if (!isValid) {
            return;
          }
          var data = {
            Username: username,
            Password: password,
            Timestamp: Utils.getTicks(),
            Md5Password: window.md5(password)
          };
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          App.instance.showLoading(true);
          Http.post(Configs.App.DOMAIN_CONFIG['LoginUrl'], payload, function (_status, res) {
            App.instance.showLoading(false);
            if (res['c'] < 0) {
              _this4.showToast(res['r']);
              return;
            }
            _this4.dismiss();
            switch (parseInt(res["c"])) {
              case 0:
                Configs.Login.IsLogin = true;
                SPUtils.setUserName(username);
                SPUtils.setUserPass(password);
                Configs.Login.AccessToken = res["m"];
                Configs.Login.SessionKey = res["d"]["sessionToken"];
                BroadcastReceiver.send(BroadcastReceiver.USER_INFO_REFRESH, res['d']);
                BroadcastReceiver.send(BroadcastReceiver.USER_LOGGED_IN);
                break;
              case 2:
                Configs.Login.Username = res.p[0];
                BundleControl.loadPrefabPopup("prefabs/PopupLoginByOTP", function (prefab) {
                  var popup = instantiate(prefab).getComponent(LobbyLoginByOTP);
                  App.instance.popupNode.addChild(popup.node);
                  popup.show();
                });
                break;
              case 3:
                Configs.Login.Username = res.p[0];
                BundleControl.loadPrefabPopup("prefabs/PopupUpdateNickName", function (prefab) {
                  var popup = instantiate(prefab).getComponent(PopupUpdateNickname);
                  App.instance.popupNode.addChild(popup.node);
                  popup.show();
                });
                break;
            }
          }, false);
        };
        _proto.actLostPassword = function actLostPassword() {
          this.dismiss();
          BundleControl.loadPrefabPopup("prefabs/PopupForgetPassword", function (prefab) {
            var popup = instantiate(prefab).getComponent(PopupForgetPassword);
            App.instance.popupNode.addChild(popup.node);
            popup.show();
          });
        };
        return PopupLogin;
      }(Dialog), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "edbUsername", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "edbPassword", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "toast", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PopupMiniGameXoSo.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Dialog.ts', './App.ts', './Http.ts', './Config.ts', './Utils.ts', './BroadcastListener.ts', './Language.LanguageManager.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, Node, Toggle, Color, Sprite, instantiate, EditBox, RichText, Dialog, App, Http, Configs, Utils, BroadcastReceiver, LanguageManager;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
      Node = module.Node;
      Toggle = module.Toggle;
      Color = module.Color;
      Sprite = module.Sprite;
      instantiate = module.instantiate;
      EditBox = module.EditBox;
      RichText = module.RichText;
    }, function (module) {
      Dialog = module.default;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      Utils = module.Utils;
    }, function (module) {
      BroadcastReceiver = module.BroadcastReceiver;
    }, function (module) {
      LanguageManager = module.LanguageManager;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _dec25, _dec26, _dec27, _dec28, _dec29, _dec30, _dec31, _dec32, _dec33, _dec34, _dec35, _dec36, _dec37, _dec38, _dec39, _dec40, _dec41, _dec42, _dec43, _dec44, _dec45, _dec46, _dec47, _dec48, _dec49, _dec50, _dec51, _dec52, _dec53, _dec54, _dec55, _dec56, _dec57, _dec58, _dec59, _dec60, _dec61, _dec62, _dec63, _dec64, _dec65, _dec66, _dec67, _dec68, _dec69, _dec70, _dec71, _dec72, _dec73, _dec74, _dec75, _dec76, _dec77, _dec78, _dec79, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _descriptor25, _descriptor26, _descriptor27, _descriptor28, _descriptor29, _descriptor30, _descriptor31, _descriptor32, _descriptor33, _descriptor34, _descriptor35, _descriptor36, _descriptor37, _descriptor38, _descriptor39, _descriptor40, _descriptor41, _descriptor42, _descriptor43, _descriptor44, _descriptor45, _descriptor46, _descriptor47, _descriptor48, _descriptor49, _descriptor50, _descriptor51, _descriptor52, _descriptor53, _descriptor54, _descriptor55, _descriptor56, _descriptor57, _descriptor58, _descriptor59, _descriptor60, _descriptor61, _descriptor62, _descriptor63, _descriptor64, _descriptor65, _descriptor66, _descriptor67, _descriptor68, _descriptor69, _descriptor70, _descriptor71, _descriptor72, _descriptor73, _descriptor74, _descriptor75, _descriptor76, _descriptor77, _descriptor78;
      cclegacy._RF.push({}, "81e1345QrtJ/Z00EDiUkonC", "PopupMiniGameXoSo", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PopupMiniGameXoSo = exports('default', (_dec = ccclass('PopupMiniGameXoSo'), _dec2 = property(Label), _dec3 = property([Node]), _dec4 = property([Toggle]), _dec5 = property([Node]), _dec6 = property([Toggle]), _dec7 = property([Node]), _dec8 = property([Toggle]), _dec9 = property(Node), _dec10 = property(Label), _dec11 = property(Label), _dec12 = property(Toggle), _dec13 = property(Node), _dec14 = property(Node), _dec15 = property(Label), _dec16 = property(Label), _dec17 = property(Label), _dec18 = property(Node), _dec19 = property(Node), _dec20 = property(Node), _dec21 = property(Node), _dec22 = property(Node), _dec23 = property(Node), _dec24 = property(Label), _dec25 = property(Label), _dec26 = property(Label), _dec27 = property(Label), _dec28 = property(Label), _dec29 = property(Node), _dec30 = property(Color), _dec31 = property(Color), _dec32 = property([Node]), _dec33 = property(Label), _dec34 = property(Label), _dec35 = property(Node), _dec36 = property(Node), _dec37 = property(Node), _dec38 = property(Label), _dec39 = property(Toggle), _dec40 = property(Node), _dec41 = property(Label), _dec42 = property(Node), _dec43 = property(Node), _dec44 = property(Node), _dec45 = property([Label]), _dec46 = property([Label]), _dec47 = property([Label]), _dec48 = property([Label]), _dec49 = property([Label]), _dec50 = property([Label]), _dec51 = property([Label]), _dec52 = property([Label]), _dec53 = property([Label]), _dec54 = property([Label]), _dec55 = property([Label]), _dec56 = property([Label]), _dec57 = property([Label]), _dec58 = property([Label]), _dec59 = property([Label]), _dec60 = property([Label]), _dec61 = property([Label]), _dec62 = property([Label]), _dec63 = property([Label]), _dec64 = property(Node), _dec65 = property(Node), _dec66 = property(Toggle), _dec67 = property(Toggle), _dec68 = property(Node), _dec69 = property(Node), _dec70 = property(Label), _dec71 = property(Label), _dec72 = property(Node), _dec73 = property(Node), _dec74 = property(Node), _dec75 = property(Node), _dec76 = property(Node), _dec77 = property(Label), _dec78 = property(Label), _dec79 = property(Label), _dec(_class = (_class2 = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(PopupMiniGameXoSo, _Dialog);
        function PopupMiniGameXoSo() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Dialog.call.apply(_Dialog, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "lblGameSession", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabContents", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabToggles", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabContentsPickNumber", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabTogglesPickNumber", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabContentsAchievement", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabTogglesAchievement", _descriptor7, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerBoxCalenderResults", _descriptor8, _assertThisInitialized(_this));
          _this.currentTabIndex = 0;
          _this.currentTabIndexPickNumber = 0;
          _this.currentTabIndexAchievement = 0;
          _this.isShowContainerBoxCalenderResult = false;
          _this.selectedLocationID = 0;
          _this.selectedLocationName = "";
          _this.selectedDate = "";
          // tab 0
          _initializerDefineProperty(_this, "titleTab0", _descriptor9, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "titleTab1", _descriptor10, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "dropdownToggle", _descriptor11, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "dropdownList", _descriptor12, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "dropdownItem", _descriptor13, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "labelSelectedLocationName", _descriptor14, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "labelTimeLeft", _descriptor15, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "placeholderTimeLeft", _descriptor16, _assertThisInitialized(_this));
          _this.betTypes = [];
          _this.betHelpTextTypes = {
            1: "xs23",
            2: "xs8",
            3: "xs11"
          };
          _this.betNameTypes = {
            1: 'xs14',
            2: 'xs15',
            3: 'xs16',
            4: 'xs18',
            5: 'xs20',
            6: 'xs39',
            7: 'xs10',
            8: 'xs22',
            9: 'xs24',
            10: 'xs14',
            11: 'xs15',
            12: 'xs16',
            13: 'xs18',
            14: 'xs20',
            15: 'xs33',
            16: 'xs39',
            17: 'xs35',
            18: 'xs34',
            19: 'xs36',
            20: 'xs37',
            21: 'xs38',
            22: 'xs14',
            23: 'xs15',
            24: 'xs16',
            25: 'xs18',
            26: 'xs20',
            27: 'xs33',
            28: 'xs39',
            29: 'xs35',
            30: 'xs34',
            31: 'xs36',
            32: 'xs37',
            33: 'xs38'
          };
          _initializerDefineProperty(_this, "containerListLo", _descriptor17, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerListXien", _descriptor18, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerListDe", _descriptor19, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerListDauDuoi", _descriptor20, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerItemTemplate", _descriptor21, _assertThisInitialized(_this));
          _this.betTypeSelected = -1;
          _this.betDataSelected = "";
          _this.betValueSelected = "";
          _this.isUseTicket = false;
          _this.allowBet = false;
          // popup
          _initializerDefineProperty(_this, "containerPopup", _descriptor22, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "labelPopupTitle", _descriptor23, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "labelPopupBetData", _descriptor24, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "labelPopupBetValue", _descriptor25, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "labelPopupBetTotalValue", _descriptor26, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "labelPopupBetTotalWin", _descriptor27, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "popupFastChoiceAmount", _descriptor28, _assertThisInitialized(_this));
          // tab result
          _initializerDefineProperty(_this, "selectedColor", _descriptor29, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "normalColor", _descriptor30, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "rows", _descriptor31, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "labelTitleTime", _descriptor32, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "labelTitleTimeBox", _descriptor33, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "calendarContainer", _descriptor34, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "dayItemPrefab", _descriptor35, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "gridCalendar", _descriptor36, _assertThisInitialized(_this));
          _this.currentDay = new Date().getDate();
          _this.currentDate = new Date();
          _this.selectedDay = new Date().getDate();
          _this.selectedNode = null;
          _initializerDefineProperty(_this, "labelTabResultTab", _descriptor37, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "dropdownToggleTabResult", _descriptor38, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "dropdownListTabResult", _descriptor39, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "labelSelectedLocationNameTabResult", _descriptor40, _assertThisInitialized(_this));
          _this.selectedAreaIDTabResult = 0;
          _this.selectedLocationIDTabResult = 0;
          _initializerDefineProperty(_this, "leftNotResult", _descriptor41, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "leftContainer27", _descriptor42, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "leftContainer18", _descriptor43, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "firsts", _descriptor44, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lasts", _descriptor45, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "result0_27", _descriptor46, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "result1_27", _descriptor47, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "result2_27", _descriptor48, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "result3_27", _descriptor49, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "result4_27", _descriptor50, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "result5_27", _descriptor51, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "result6_27", _descriptor52, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "result7_27", _descriptor53, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "result0_18", _descriptor54, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "result1_18", _descriptor55, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "result2_18", _descriptor56, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "result3_18", _descriptor57, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "result4_18", _descriptor58, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "result5_18", _descriptor59, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "result6_18", _descriptor60, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "result7_18", _descriptor61, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "result8_18", _descriptor62, _assertThisInitialized(_this));
          // tab history
          _initializerDefineProperty(_this, "containerListHistory", _descriptor63, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerItemHistory", _descriptor64, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "dropdownToggleTabHistory", _descriptor65, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "dropdownToggleStatusTabHistory", _descriptor66, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "dropdownListTabHistory", _descriptor67, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "dropdownItemTabHistory", _descriptor68, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "labelSelectedLocationNameTabHistory", _descriptor69, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "labelSelectedStatusTabHistory", _descriptor70, _assertThisInitialized(_this));
          _this.checkAllStatus = true;
          _this.dataTabHistory = [];
          // tab Achievement
          _initializerDefineProperty(_this, "containerListAchievement", _descriptor71, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerItemTop1Achievement", _descriptor72, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerItemTop2Achievement", _descriptor73, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerItemTop3Achievement", _descriptor74, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerItemAchievement", _descriptor75, _assertThisInitialized(_this));
          // ticket
          _initializerDefineProperty(_this, "labelTicket1K", _descriptor76, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "labelTicket2K", _descriptor77, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "labelTicket5K", _descriptor78, _assertThisInitialized(_this));
          _this.ticketBalance1K = 0;
          _this.ticketBalance2K = 0;
          _this.ticketBalance5K = 0;
          _this._updateTimer = null;
          return _this;
        }
        var _proto = PopupMiniGameXoSo.prototype;
        _proto.start = function start() {
          this.showTab(0);
          this.generateCalendar();
          var today = new Date();
          var dayStr = today.getDate().toString().padStart(2, "0");
          var monthStr = (today.getMonth() + 1).toString().padStart(2, "0");
          var yearStr = today.getFullYear().toString();
          this.labelTitleTime.string = dayStr + "/" + monthStr + "/" + yearStr;
          this.labelTitleTimeBox.string = dayStr + "/" + monthStr + "/" + yearStr;
          this.updateDataDropdownTabResult();
          this.currentDay = today.getDate();
          this.labelTicket1K.string = "0";
          this.labelTicket2K.string = "0";
          this.labelTicket5K.string = "0";
          this.checkTicket();
        };
        _proto.checkTicket = function checkTicket() {
          var _this2 = this;
          App.instance.showLoading(true);
          Http.get(Configs.App.DOMAIN_CONFIG['GetAccountTicket'], {
            CurrencyID: Configs.Login.CurrencyID,
            GameID: 115
          }, function (status, res) {
            if (status === 200) {
              _this2.ticketBalance1K = 0;
              _this2.ticketBalance2K = 0;
              _this2.ticketBalance5K = 0;
              res.d.filter(function (item) {
                return item.gameID === 115;
              }).forEach(function (item) {
                if (item.roomID === 1) {
                  _this2.ticketBalance1K += item.balance;
                } else if (item.roomID === 2) {
                  _this2.ticketBalance2K += item.balance;
                } else if (item.roomID === 3) {
                  _this2.ticketBalance5K += item.balance;
                }
              });
              _this2.labelTicket1K.string = _this2.ticketBalance1K.toString();
              _this2.labelTicket2K.string = _this2.ticketBalance2K.toString();
              _this2.labelTicket5K.string = _this2.ticketBalance5K.toString();
            }
            App.instance.showLoading(false);
          });
        };
        _proto.generateCalendar = function generateCalendar() {
          var _this3 = this;
          if (!this.dayItemPrefab || this.rows.length < 5) {
            return;
          }
          this.rows.forEach(function (row) {
            return row.removeAllChildren();
          });
          var year = this.currentDate.getFullYear();
          var month = this.currentDate.getMonth();
          var totalDays = new Date(year, month + 1, 0).getDate();
          var rowIndex = 0;
          this.selectedNode = null;
          var _loop = function _loop(i) {
              var dayItem = instantiate(_this3.dayItemPrefab);
              var label = dayItem.getChildByName("text").getComponent(Label);
              if (!label) {
                return {
                  v: void 0
                };
              }
              label.string = i.toString();
              if (i === _this3.selectedDay) {
                dayItem.getComponent(Sprite).color = _this3.selectedColor;
                _this3.selectedNode = dayItem;
              } else {
                dayItem.getComponent(Sprite).color = _this3.normalColor;
              }
              dayItem.on(Node.EventType.TOUCH_END, function () {
                return _this3.onDaySelected(dayItem, i);
              }, _this3);
              _this3.rows[rowIndex].addChild(dayItem);
              if (i % 7 === 0 && rowIndex < _this3.rows.length - 1) {
                rowIndex++;
              }
            },
            _ret;
          for (var i = 1; i <= totalDays; i++) {
            _ret = _loop(i);
            if (_ret) return _ret.v;
          }
        };
        _proto.onDaySelected = function onDaySelected(dayNode, day) {
          if (this.selectedNode) {
            this.selectedNode.getComponent(Sprite).color = this.normalColor;
          }
          this.selectedDay = day;
          this.selectedNode = dayNode;
          this.selectedNode.getComponent(Sprite).color = this.selectedColor;
          var dayStr = day.toString().padStart(2, "0");
          var monthStr = (this.currentDate.getMonth() + 1).toString().padStart(2, "0");
          var yearStr = this.currentDate.getFullYear().toString();
          var currentDate = dayStr + "/" + monthStr + "/" + yearStr;
          this.labelTitleTime.string = currentDate;
          this.labelTitleTimeBox.string = currentDate;
          this.titleTab1.string = App.instance.getTextLang('xs2') + ' - ' + (dayStr + "/" + monthStr + "/" + yearStr);
          this.containerBoxCalenderResults.active = false;
          this.isShowContainerBoxCalenderResult = !this.isShowContainerBoxCalenderResult;
          this.updateDataDropdownTabResult();
        };
        _proto.updateDataDropdownTabResult = function updateDataDropdownTabResult() {
          var _this4 = this;
          App.instance.showLoading(true);
          Http.get(Configs.App.DOMAIN_CONFIG['LotteryLocationByDateUrl'], {
            date: this.labelTitleTime.string.replace(/\//g, '%2F')
          }, function (status, res) {
            if (status === 200) {
              _this4.dropdownListTabResult.removeAllChildren();
              res.d.forEach(function (item, index) {
                var itemResult = instantiate(_this4.dropdownItem);
                itemResult.getChildByName('label').getComponent(Label).string = item.LocationName;
                itemResult.on(Node.EventType.TOUCH_END, function () {
                  _this4.dropdownToggleTabResult.isChecked = false;
                  _this4.selectedAreaIDTabResult = item.AreaID;
                  _this4.selectedLocationIDTabResult = item.LocationID;
                  _this4.labelSelectedLocationNameTabResult.string = item.LocationName;
                  _this4.updateDataTabResult();
                });
                if (index === 0) {
                  _this4.selectedAreaIDTabResult = item.AreaID;
                  _this4.selectedLocationIDTabResult = item.LocationID;
                  _this4.labelSelectedLocationNameTabResult.string = item.LocationName;
                  _this4.updateDataTabResult();
                }
                _this4.dropdownListTabResult.addChild(itemResult);
              });
            }
            App.instance.showLoading(false);
          });
        };
        _proto.onNextMonth = function onNextMonth() {
          var month = this.currentDate.getMonth();
          var year = this.currentDate.getFullYear();
          if (month === 11) {
            this.currentDate.setFullYear(year + 1);
            this.currentDate.setMonth(0);
          } else {
            this.currentDate.setMonth(month + 1);
          }
          this.updateCalendarAfterMonthChange();
        };
        _proto.onPreviousMonth = function onPreviousMonth() {
          var month = this.currentDate.getMonth();
          var year = this.currentDate.getFullYear();
          if (month === 0) {
            this.currentDate.setFullYear(year - 1);
            this.currentDate.setMonth(11);
          } else {
            this.currentDate.setMonth(month - 1);
          }
          this.updateCalendarAfterMonthChange();
        };
        _proto.updateCalendarAfterMonthChange = function updateCalendarAfterMonthChange() {
          var newTotalDays = new Date(this.currentDate.getFullYear(), this.currentDate.getMonth() + 1, 0).getDate();
          if (this.selectedDay > newTotalDays) {
            this.selectedDay = newTotalDays;
          }
          this.selectedNode = null;
          this.generateCalendar();
          var dayStr = this.selectedDay.toString().padStart(2, "0");
          var monthStr = (this.currentDate.getMonth() + 1).toString().padStart(2, "0");
          var yearStr = this.currentDate.getFullYear().toString();
          this.labelTitleTime.string = dayStr + "/" + monthStr + "/" + yearStr;
          this.labelTitleTimeBox.string = dayStr + "/" + monthStr + "/" + yearStr;
        };
        _proto.selectedToggleTabs = function selectedToggleTabs(toggle, index) {
          var tabIndex = parseInt(index);
          if (this.currentTabIndex === tabIndex) {
            return;
          }
          if (toggle.isChecked == false) return;
          this.showTab(tabIndex);
        };
        _proto.startCountdown = function startCountdown(timeLeftInSeconds, onFinish) {
          var _this5 = this;
          this.unschedule(this._updateTimer);
          var remaining = timeLeftInSeconds;
          this._updateTimer = function () {
            if (remaining <= 0) {
              _this5.labelTimeLeft.string = "00:00:00";
              _this5.unschedule(_this5._updateTimer);
              if (onFinish) onFinish();
              return;
            }
            var formatTime = function formatTime(time) {
              return String(time).padStart(2, '0');
            };
            var days = Math.floor(remaining / 86400);
            var hours = Math.floor(remaining % 86400 / 3600);
            var minutes = Math.floor(remaining % 3600 / 60);
            var seconds = remaining % 60;
            if (days > 0) {
              _this5.labelTimeLeft.string = formatTime(days) + ":" + formatTime(hours) + ":" + formatTime(minutes) + ":" + formatTime(seconds);
            } else {
              _this5.labelTimeLeft.string = formatTime(hours) + ":" + formatTime(minutes) + ":" + formatTime(seconds);
            }
            remaining -= 1;
          };
          this._updateTimer();
          this.schedule(this._updateTimer, 1);
        };
        _proto.showTab = function showTab(tabIndex) {
          var _this6 = this;
          this.currentTabIndex = tabIndex;
          this.tabContents.forEach(function (tab, i) {
            tab.active = i === tabIndex;
          });
          this.tabToggles.forEach(function (toggle, i) {
            _this6.updateToggleTextColor(toggle, i === tabIndex);
          });
          if (tabIndex === 0) {
            var now = new Date();
            if (now.getHours() >= 19) {
              now.setDate(now.getDate() + 1);
            }
            var currentDate = now.toLocaleDateString('en-GB');
            this.titleTab0.string = App.instance.getTextLang('xs2') + (": " + currentDate.replace(/\//g, '-'));
            this.titleTab1.string = App.instance.getTextLang('xs2') + (" - " + currentDate.replace(/\//g, '/'));
            App.instance.showLoading(true);
            Http.get(Configs.App.DOMAIN_CONFIG['LotteryLocationByDateUrl'], {
              date: currentDate.replace(/\//g, '%2F')
            }, function (status, res) {
              if (status === 200) {
                _this6.dropdownList.removeAllChildren();
                _this6.dropdownListTabHistory.removeAllChildren();
                res.d.forEach(function (item, index) {
                  var dropdownItem = instantiate(_this6.dropdownItem);
                  dropdownItem.getChildByName('label').getComponent(Label).string = item.LocationName;
                  dropdownItem.on(Node.EventType.TOUCH_END, function () {
                    _this6.onSelectedLocation(item);
                  });
                  if (index === 0) {
                    _this6.onSelectedLocation(item);
                  }
                  _this6.dropdownList.addChild(dropdownItem);
                  _this6.labelSelectedLocationNameTabHistory.string = App.instance.getTextLang('sl13');
                  _this6.labelSelectedStatusTabHistory.string = App.instance.getTextLang('sl55');
                  _this6.dropdownToggleStatusTabHistory.isChecked = false;
                  _this6.checkAllStatus = true;
                  if (index === 0) {
                    var dropdownItemAllTabHistory = instantiate(_this6.dropdownItemTabHistory);
                    dropdownItemAllTabHistory.getChildByName('label').getComponent(Label).string = App.instance.getTextLang('sl13');
                    dropdownItemAllTabHistory.on(Node.EventType.TOUCH_END, function () {
                      _this6.dropdownToggleTabHistory.isChecked = false;
                      _this6.labelSelectedLocationNameTabHistory.string = App.instance.getTextLang('sl13');
                      _this6.updateDataTabHistory();
                    });
                    _this6.dropdownListTabHistory.addChild(dropdownItemAllTabHistory);
                  }
                  var dropdownItemTabHistory = instantiate(_this6.dropdownItemTabHistory);
                  dropdownItemTabHistory.getChildByName('label').getComponent(Label).string = item.LocationName;
                  dropdownItemTabHistory.on(Node.EventType.TOUCH_END, function () {
                    _this6.dropdownToggleTabHistory.isChecked = false;
                    _this6.labelSelectedLocationNameTabHistory.string = item.LocationName;
                    _this6.updateDataTabHistory();
                  });
                  _this6.dropdownListTabHistory.addChild(dropdownItemTabHistory);
                });
                App.instance.showLoading(false);
              }
            });
          }
          if (tabIndex === 2) {
            Http.get(Configs.App.DOMAIN_CONFIG['LotteryBetOfAccountUrl'], {
              currencyID: Configs.Login.CurrencyID
            }, function (status, res) {
              if (status === 200) {
                _this6.dataTabHistory = res.d;
                _this6.updateDataTabHistory();
              }
            });
          }
          if (tabIndex === 3) {
            this.showTabPickAchievement(0);
          }
          this.tabContents[2].getComponentsInChildren(Toggle).forEach(function (toggle) {
            toggle.isChecked = false;
          });
        };
        _proto.updateDataTabHistory = function updateDataTabHistory() {
          var _this7 = this;
          var data = this.dataTabHistory;
          if (this.labelSelectedLocationNameTabHistory.string !== App.instance.getTextLang('sl13')) {
            data = this.dataTabHistory.filter(function (item) {
              return item.LocationName === _this7.labelSelectedLocationNameTabHistory.string;
            });
          }
          if (!this.checkAllStatus) {
            data = data.filter(function (item) {
              return item.PrizeValue > 0;
            });
          }
          this.containerListHistory.removeAllChildren();
          data.forEach(function (item) {
            var itemHistory = instantiate(_this7.containerItemHistory);
            itemHistory.active = true;
            itemHistory.getChildByName('label1').getComponent(Label).string = Utils.formatDatetime(item.CreatedTime, "dd/MM/yyyy HH:mm:ss");
            itemHistory.getChildByName('label2').getComponent(Label).string = item.LocationName;
            itemHistory.getChildByName('label3').getComponent(Label).string = "#" + item.GameSessionID;
            itemHistory.getChildByName('label4').getComponent(Label).string = App.instance.getTextLang(_this7.betNameTypes[item.BetType]) + ": " + item.BetData;
            itemHistory.getChildByName('label5').getComponent(Label).string = Utils.formatNumber(item.BetValue);
            itemHistory.getChildByName('label6').getComponent(Label).string = item.IsAwarded === 0 ? "" : Utils.formatNumber(item.PrizeValue);
            _this7.containerListHistory.addChild(itemHistory);
          });
        };
        _proto.onToggleAllStatus = function onToggleAllStatus(_event, customData) {
          this.checkAllStatus = customData === "ALL";
          this.dropdownToggleStatusTabHistory.isChecked = false;
          this.labelSelectedStatusTabHistory.string = App.instance.getTextLang(this.checkAllStatus ? 'sl55' : 'txt_da_trung');
          this.updateDataTabHistory();
        };
        _proto.updateDataTabResult = function updateDataTabResult() {
          var _this8 = this;
          var currentDate = this.labelTitleTime.string;
          Http.get(Configs.App.DOMAIN_CONFIG['LotteryGetResultsUrl'], {
            date: currentDate.replace(/\//g, '%2F'),
            areaID: this.selectedAreaIDTabResult
          }, function (status, res) {
            if (status === 200) {
              _this8.leftNotResult.active = true;
              _this8.leftContainer27.active = false;
              _this8.leftContainer18.active = false;
              _this8.firsts.forEach(function (item) {
                return item.string = "";
              });
              _this8.lasts.forEach(function (item) {
                return item.string = "";
              });
              res.d.forEach(function (item) {
                if (item.LocationID != _this8.selectedLocationIDTabResult) {
                  return;
                }
                if (item.Result.length === 0) {
                  _this8.leftNotResult.active = true;
                  _this8.leftContainer27.active = false;
                  _this8.leftContainer18.active = false;
                } else {
                  if (_this8.selectedAreaIDTabResult === 1) {
                    _this8.leftNotResult.active = false;
                    _this8.leftContainer27.active = true;
                    _this8.leftContainer18.active = false;
                    item.Result.forEach(function (item) {
                      item.ResultData.forEach(function (result, index) {
                        var _this8$key;
                        var key = "result" + item.Type + "_27";
                        if ((_this8$key = _this8[key]) != null && _this8$key[index]) {
                          _this8[key][index].string = result;
                        }
                      });
                    });
                  } else {
                    _this8.leftNotResult.active = false;
                    _this8.leftContainer27.active = false;
                    _this8.leftContainer18.active = true;
                    item.Result.forEach(function (item) {
                      item.ResultData.forEach(function (result, index) {
                        var _this8$key2;
                        var key = "result" + item.Type + "_18";
                        if ((_this8$key2 = _this8[key]) != null && _this8$key2[index]) {
                          _this8[key][index].string = result;
                        }
                      });
                    });
                  }
                }
                item.Statistics.forEach(function (item) {
                  _this8.firsts[parseInt(item.Num)].string = item.Before;
                  _this8.lasts[parseInt(item.Num)].string = item.After;
                });
              });
            }
            App.instance.showLoading(false);
          });
        };
        _proto.onSelectedLocation = function onSelectedLocation(item) {
          var _this9 = this;
          this.selectedDate = item.Date.substring(0, 10);
          this.selectedLocationID = item.LocationID;
          this.selectedLocationName = item.LocationName;
          this.labelSelectedLocationName.string = item.LocationName;
          this.dropdownToggle.isChecked = false;
          App.instance.showLoading(true);
          Http.get(Configs.App.DOMAIN_CONFIG['LotteryBetTypeUrl'], {
            areaID: item.AreaID
          }, function (status, res) {
            App.instance.showLoading(false);
            if (status === 200) {
              _this9.containerListLo.removeAllChildren();
              _this9.containerListDe.removeAllChildren();
              _this9.containerListDauDuoi.removeAllChildren();
              _this9.containerListXien.removeAllChildren();
              res.d.forEach(function (item) {
                _this9.betTypes[item.BetType] = item;
                if ([1, 2, 10, 11, 22, 23].includes(item.BetType)) {
                  _this9.makeBetTypeItem(item.BetType, _this9.containerListLo);
                }
                if ([6, 7, 15, 16, 27, 28].includes(item.BetType)) {
                  _this9.makeBetTypeItem(item.BetType, _this9.containerListDe);
                }
                if ([8, 9, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33].includes(item.BetType)) {
                  _this9.makeBetTypeItem(item.BetType, _this9.containerListDauDuoi);
                }
                if ([3, 4, 5, 12, 13, 14, 24, 25, 26].includes(item.BetType)) {
                  _this9.makeBetTypeItem(item.BetType, _this9.containerListXien);
                }
              });
            }
          });
          this.fetchTimeAndStartCountdown(item.LocationID, item.ResultTime);
        };
        _proto.hideDropdownListLocationPickNumber = function hideDropdownListLocationPickNumber() {
          this.dropdownToggle.isChecked = false;
        };
        _proto.fetchTimeAndStartCountdown = function fetchTimeAndStartCountdown(locationID, resultTime) {
          var _this10 = this;
          Http.get(Configs.App.DOMAIN_CONFIG['LotteryCurrentDataUrl'], {
            LocationID: locationID
          }, function (_status, res) {
            _this10.lblGameSession.string = "#" + res.d.GameSessionID;
            var timeRemainBetting = res.d.RemainBetting;
            var timeRemainWaiting = res.d.RemainWaiting;
            var status = res.d.Status;
            _this10.allowBet = status == 1;
            if (status == 1) {
              _this10.placeholderTimeLeft.string = App.instance.getTextLang('xs3');
              _this10.startCountdown(timeRemainBetting, function () {
                _this10.fetchTimeAndStartCountdown(locationID, resultTime);
              });
            } else if (status == 0) {
              _this10.placeholderTimeLeft.string = App.instance.getTextLang('xs56');
              _this10.startCountdown(timeRemainWaiting, function () {
                _this10.fetchTimeAndStartCountdown(locationID, resultTime);
              });
            } else if (status == 2) {
              _this10.placeholderTimeLeft.string = App.instance.getTextLang('xs55');
              var resultDate = new Date(resultTime);
              var now = new Date();
              var timeLeftInSeconds = Math.floor((resultDate.getTime() - now.getTime()) / 1000);
              if (timeLeftInSeconds < 0) {
                timeLeftInSeconds = 0;
              }
              _this10.startCountdown(timeLeftInSeconds, function () {
                _this10.fetchTimeAndStartCountdown(locationID, resultTime);
              });
            }
          });
        };
        _proto.makeBetTypeItem = function makeBetTypeItem(betType, container) {
          var _this11 = this;
          var item = instantiate(this.containerItemTemplate);
          item.active = true;
          var childNumbers = item.children[0];
          var childAmount = item.children[1];
          var helpText = childNumbers.getChildByName('help_text_number').getComponent(Label);
          if ([3, 12, 24].includes(betType)) {
            helpText.string = App.instance.getTextLang('xs17');
          } else if ([4, 13, 25].includes(betType)) {
            helpText.string = App.instance.getTextLang('xs19');
          } else if ([5, 14, 26].includes(betType)) {
            helpText.string = App.instance.getTextLang('xs21');
          } else {
            helpText.string = App.instance.getTextLang(this.betHelpTextTypes[this.betTypes[betType].Length]);
          }
          childNumbers.getChildByName('header').getComponent(Label).string = App.instance.getTextLang(this.betNameTypes[betType]);
          childAmount.getChildByName('multiple').getComponent(Label).string = "x" + this.betTypes[betType].Multiple;
          var edbNumbers = childNumbers.getComponentInChildren(EditBox);
          var edbBetNode = childAmount.children[2];
          var edbBetLabel = edbBetNode.children[1].getComponent(RichText);
          edbBetNode.on("click", function () {
            if (edbNumbers.string.trim() === "") return;
            var popupFastChoice = instantiate(_this11.popupFastChoiceAmount);
            popupFastChoice.active = true;
            popupFastChoice.parent = _this11.popupFastChoiceAmount.parent;
            var fast = popupFastChoice.getChildByName('Fast');
            var other = popupFastChoice.getChildByName('Other');
            var lblCurrentBet = popupFastChoice.getChildByName('Current').getComponent(Label);
            fast.active = true;
            other.active = false;
            lblCurrentBet.string = "";
            var freeTicket = fast.getChildByName('FreeTicket');
            var freeTicket1K = freeTicket.getChildByName('1K');
            var freeTicket2K = freeTicket.getChildByName('2K');
            var freeTicket5K = freeTicket.getChildByName('5K');
            freeTicket1K.active = _this11.ticketBalance1K > 0;
            freeTicket2K.active = _this11.ticketBalance2K > 0;
            freeTicket5K.active = _this11.ticketBalance5K > 0;
            if (_this11.ticketBalance1K > 0) {
              freeTicket1K.children[1].getComponentInChildren(Label).string = _this11.ticketBalance1K.toString();
              freeTicket1K.on(Node.EventType.TOUCH_END, function () {
                _this11.betWithFreeTicket(edbNumbers, betType, 1000);
                popupFastChoice.destroy();
              });
            }
            if (_this11.ticketBalance2K > 0) {
              freeTicket2K.children[1].getComponentInChildren(Label).string = _this11.ticketBalance2K.toString();
              freeTicket2K.on(Node.EventType.TOUCH_END, function () {
                _this11.betWithFreeTicket(edbNumbers, betType, 2000);
                popupFastChoice.destroy();
              });
            }
            if (_this11.ticketBalance5K > 0) {
              freeTicket5K.children[1].getComponentInChildren(Label).string = _this11.ticketBalance5K.toString();
              freeTicket5K.on(Node.EventType.TOUCH_END, function () {
                _this11.betWithFreeTicket(edbNumbers, betType, 5000);
                popupFastChoice.destroy();
              });
            }
            fast.getChildByName('ChoiceNumbers').children.forEach(function (child) {
              child.on(Node.EventType.TOUCH_END, function () {
                edbBetLabel.string = Utils.formatNumber(parseInt(child.name));
                popupFastChoice.destroy();
              });
            });
            fast.getChildByName('Other').on(Node.EventType.TOUCH_END, function () {
              fast.active = false;
              other.active = true;
            });
            fast.getChildByName('Cancel').on(Node.EventType.TOUCH_END, function () {
              edbBetLabel.string = '0';
              popupFastChoice.destroy();
            });
            other.getChildByName('Fast').on(Node.EventType.TOUCH_END, function () {
              fast.active = true;
              other.active = false;
            });
            other.getChildByName('Cancel').on(Node.EventType.TOUCH_END, function () {
              edbBetLabel.string = '0';
              popupFastChoice.destroy();
            });
            other.getChildByName('Confirm').on(Node.EventType.TOUCH_END, function () {
              edbBetLabel.string = lblCurrentBet.string.length > 0 ? Utils.formatNumber(parseInt(lblCurrentBet.string)) : "0";
              popupFastChoice.destroy();
            });
            other.getChildByName('ChoiceNumbers').children.forEach(function (child) {
              child.on(Node.EventType.TOUCH_END, function () {
                if (child.name == 'DEL') {
                  lblCurrentBet.string = lblCurrentBet.string.slice(0, -1);
                } else {
                  lblCurrentBet.string += child.name;
                }
              });
            });
          });
          item.getChildByName('btn').on(Node.EventType.TOUCH_END, function () {
            if (!_this11.allowBet) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('me-207'));
              return;
            }
            var betData;
            var count;
            var isInvalid;
            var edbBetValue = edbBetLabel.string.replace(/\./g, '');
            var _this11$validateBetDa = _this11.validateBetData(edbNumbers, betType);
            isInvalid = _this11$validateBetDa[0];
            betData = _this11$validateBetDa[1];
            count = _this11$validateBetDa[2];
            if (edbBetValue === "") {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_invalid_input'));
              isInvalid = false;
            } else {
              if (parseInt(edbBetValue) < _this11.betTypes[betType].MinBetValue || parseInt(edbBetValue) > _this11.betTypes[betType].MaxBetValue) {
                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_invalid_input'));
                isInvalid = false;
              }
            }
            if (!isInvalid) {
              return;
            }
            _this11.betTypeSelected = betType;
            _this11.betDataSelected = betData;
            _this11.betValueSelected = edbBetValue;
            _this11.isUseTicket = false;
            var totalValue = parseInt(edbBetValue) * count;
            var totalWin = totalValue * _this11.betTypes[betType].Multiple;
            _this11.labelPopupTitle.string = App.instance.getTextLang('txt_ban_da_nhap') + " " + App.instance.getTextLang(_this11.betNameTypes[betType]) + " - " + _this11.selectedLocationName + " - " + _this11.getFormattedDate();
            _this11.labelPopupBetData.string = _this11.betDataSelected;
            _this11.labelPopupBetValue.string = parseInt(_this11.betValueSelected).toLocaleString("vi-VN");
            _this11.labelPopupBetTotalValue.string = totalValue.toLocaleString("vi-VN");
            _this11.labelPopupBetTotalWin.string = totalWin.toLocaleString("vi-VN");
            _this11.containerPopup.active = true;
          });
          container.addChild(item);
        };
        _proto.cancelBet = function cancelBet() {
          this.containerPopup.active = false;
        };
        _proto.actSubmitBet = function actSubmitBet() {
          var _this12 = this;
          App.instance.showLoading(true);
          var betData = this.betDataSelected;
          var betValue = this.betValueSelected;
          var betCount = betData.split(',').length;
          if ([3, 4, 5, 12, 13, 14, 24, 25, 26].includes(this.betTypeSelected)) {
            betCount = 1;
          }
          var roomID = 0;
          var useTicket = false;
          if (this.isUseTicket) {
            if (betValue === '1000' && betCount <= this.ticketBalance1K) {
              useTicket = true;
              roomID = 1;
            } else if (betValue === '2000' && betCount <= this.ticketBalance2K) {
              useTicket = true;
              roomID = 2;
            } else if (betValue === '5000' && betCount <= this.ticketBalance5K) {
              useTicket = true;
              roomID = 3;
            }
          }
          var payload = {
            BetData: betData,
            BetValue: betValue,
            BetType: this.betTypeSelected,
            CurrencyID: Configs.Login.CurrencyID,
            Ticket: useTicket,
            RoomID: roomID,
            LocationID: this.selectedLocationID
          };
          Http.post(Configs.App.DOMAIN_CONFIG['LotterySetBetUrl'], payload, function (_status, res) {
            App.instance.showLoading(false);
            _this12.resetAllEditBox();
            BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);
            _this12.checkTicket();
            if (res.c < 0) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang("me" + res.c));
              return;
            }
            for (var i = 0; i < res.d.Data.length; i++) {
              if (res.d.Data[i].ResponseStatus < 0) {
                App.instance.alertDialog.showMsg(App.instance.getTextLang("me" + res.d.Data[i].ResponseStatus));
                return;
              }
            }
            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_success'));
            _this12.containerPopup.active = false;
          });
        };
        _proto.selectedToggleTabsPickNumber = function selectedToggleTabsPickNumber(toggle, index) {
          var tabIndex = parseInt(index);
          if (this.currentTabIndexPickNumber === tabIndex) {
            return;
          }
          this.resetAllEditBox();
          if (toggle.isChecked == false) return;
          this.showTabPickNumber(tabIndex);
        };
        _proto.showTabPickNumber = function showTabPickNumber(tabIndex) {
          var _this13 = this;
          this.currentTabIndexPickNumber = tabIndex;
          this.tabContentsPickNumber.forEach(function (tab, i) {
            tab.active = i === tabIndex;
          });
          this.tabTogglesPickNumber.forEach(function (toggle, i) {
            _this13.updateToggleTextColor(toggle, i === tabIndex);
          });
        };
        _proto.selectedToggleTabsAchievement = function selectedToggleTabsAchievement(toggle, index) {
          var tabIndex = parseInt(index);
          if (this.currentTabIndexAchievement === tabIndex) {
            return;
          }
          if (toggle.isChecked == false) return;
          this.showTabPickAchievement(tabIndex);
        };
        _proto.showTabPickAchievement = function showTabPickAchievement(tabIndex) {
          var _this14 = this;
          this.currentTabIndexAchievement = tabIndex;
          App.instance.showLoading(true);
          Http.get(Configs.App.DOMAIN_CONFIG['LotteryTopProfitUrl'], {
            currencyID: Configs.Login.CurrencyID,
            type: tabIndex + 1
          }, function (status, res) {
            if (status === 200) {
              _this14.tabContents[3].getChildByName('NoData').active = res.d.length == 0;
              _this14.containerListAchievement.removeAllChildren();
              res.d.forEach(function (item, index) {
                var itemAchievement = instantiate(_this14.containerItemAchievement);
                if (index === 0) {
                  itemAchievement = instantiate(_this14.containerItemTop1Achievement);
                } else if (index === 1) {
                  itemAchievement = instantiate(_this14.containerItemTop2Achievement);
                } else if (index === 2) {
                  itemAchievement = instantiate(_this14.containerItemTop3Achievement);
                } else {
                  itemAchievement.getChildByName('rank').getComponent(Label).string = index + 1 + "";
                }
                itemAchievement.getChildByName('label2').getComponent(Label).string = item.Nickname;
                itemAchievement.getChildByName('label3').getChildByName('text').getComponent(Label).string = item.PrizeValue.toLocaleString("vi-VN");
                _this14.containerListAchievement.addChild(itemAchievement);
              });
            }
            App.instance.showLoading(false);
          });
          this.tabTogglesAchievement.forEach(function (toggle, i) {
            _this14.updateToggleTextColor(toggle, i === tabIndex);
          });
        };
        _proto.updateToggleTextColor = function updateToggleTextColor(toggle, isActive) {
          var textNode = toggle.node.getChildByName("text");
          if (textNode) {
            var label = textNode.getComponent(Label);
            if (label) {
              label.color = isActive ? new Color(255, 240, 0) : new Color(255, 255, 255);
            }
          }
        };
        _proto.showBoxCalender = function showBoxCalender() {
          this.isShowContainerBoxCalenderResult = !this.isShowContainerBoxCalenderResult;
          this.containerBoxCalenderResults.active = this.isShowContainerBoxCalenderResult;
          this.generateCalendar();
        };
        _proto.resetAllEditBox = function resetAllEditBox() {
          this.node.getComponentsInChildren(EditBox).forEach(function (editBox) {
            editBox.string = "";
          });
          this.node.getComponentsInChildren(RichText).forEach(function (richText) {
            richText.string = "0";
          });
        };
        _proto.getFormattedDate = function getFormattedDate() {
          var lang = LanguageManager.instance.locale;
          var now = new Date();
          var day = String(now.getDate()).padStart(2, '0');
          var month = String(now.getMonth() + 1).padStart(2, '0');
          var year = now.getFullYear();
          var weekdayIndex = now.getDay(); // 0 = Sunday

          var weekdays = {
            vi: ["Chủ nhật", "Thứ 2", "Thứ 3", "Thứ 4", "Thứ 5", "Thứ 6", "Thứ 7"],
            en: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            id: ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"],
            zh: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
            th: ["วันอาทิตย์", "วันจันทร์", "วันอังคาร", "วันพุธ", "วันพฤหัสบดี", "วันศุกร์", "วันเสาร์"],
            km: ["អាទិត្យ", "ច័ន្ទ", "អង្គារ", "ពុធ", "ព្រហស្បតិ៍", "សុក្រ", "សៅរ៍"]
          };
          var dayWord = {
            vi: "ngày",
            en: "day",
            id: "tanggal",
            zh: "日",
            th: "วันที่",
            km: "ថ្ងៃទី"
          };
          var weekday = weekdays[lang] ? weekdays[lang][weekdayIndex] : weekdays['vi'][weekdayIndex];
          var dayLabel = dayWord[lang] || dayWord['vi'];
          return weekday + " " + dayLabel + " " + day + "/" + month + "/" + year;
        };
        _proto.validateBetData = function validateBetData(edbNumbers, betType) {
          var _this15 = this;
          var isInvalid = true;
          var betData = edbNumbers.string;
          betData.split(',').forEach(function (number) {
            if (number.length !== _this15.betTypes[betType].Length || isNaN(parseInt(number))) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_invalid_input'));
              isInvalid = false;
            }
          });
          var count = betData.split(',').length;
          if ([3, 12, 24].includes(betType)) {
            if (count !== 2) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_invalid_input'));
              isInvalid = false;
            } else {
              count = 1;
            }
          } else if ([4, 13, 25].includes(betType)) {
            if (count !== 3) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_invalid_input'));
              isInvalid = false;
            } else {
              count = 1;
            }
          } else if ([5, 14, 26].includes(betType)) {
            if (count !== 4) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_invalid_input'));
              isInvalid = false;
            } else {
              count = 1;
            }
          }
          var arr = betData.split(",");
          var hasDuplicates = new Set(betData.split(',')).size !== arr.length;
          if (hasDuplicates) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('me-67014'));
            isInvalid = false;
          }
          return [isInvalid, betData, count];
        };
        _proto.betWithFreeTicket = function betWithFreeTicket(edbNumbers, betType, ticketAmount) {
          if (!this.allowBet) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('me-207'));
            return;
          }
          var betData;
          var count;
          var isInvalid;
          var _this$validateBetData = this.validateBetData(edbNumbers, betType);
          isInvalid = _this$validateBetData[0];
          betData = _this$validateBetData[1];
          count = _this$validateBetData[2];
          if (!isInvalid) {
            return;
          }
          if (betType == 1000 && count > this.ticketBalance1K) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_not_enough_ticket'));
            return;
          }
          if (betType == 2000 && count > this.ticketBalance2K) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_not_enough_ticket'));
            return;
          }
          if (betType == 5000 && count > this.ticketBalance5K) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_not_enough_ticket'));
            return;
          }
          this.betTypeSelected = betType;
          this.betDataSelected = betData;
          this.betValueSelected = ticketAmount.toString();
          this.isUseTicket = true;
          var totalValue = ticketAmount * count;
          var totalWin = totalValue * this.betTypes[betType].Multiple;
          this.labelPopupTitle.string = App.instance.getTextLang('txt_ban_da_nhap') + " " + App.instance.getTextLang(this.betNameTypes[betType]) + " - " + this.selectedLocationName + " - " + this.getFormattedDate();
          this.labelPopupBetData.string = this.betDataSelected;
          this.labelPopupBetValue.string = ticketAmount.toLocaleString("vi-VN") + " (" + App.instance.getTextLang('spr074') + ")";
          this.labelPopupBetTotalValue.string = totalValue.toLocaleString("vi-VN") + " (" + App.instance.getTextLang('spr074') + ")";
          this.labelPopupBetTotalWin.string = totalWin.toLocaleString("vi-VN");
          this.containerPopup.active = true;
        };
        return PopupMiniGameXoSo;
      }(Dialog), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "lblGameSession", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "tabContents", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "tabToggles", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "tabContentsPickNumber", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "tabTogglesPickNumber", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "tabContentsAchievement", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "tabTogglesAchievement", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "containerBoxCalenderResults", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "titleTab0", [_dec10], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "titleTab1", [_dec11], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "dropdownToggle", [_dec12], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "dropdownList", [_dec13], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "dropdownItem", [_dec14], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "labelSelectedLocationName", [_dec15], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor15 = _applyDecoratedDescriptor(_class2.prototype, "labelTimeLeft", [_dec16], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor16 = _applyDecoratedDescriptor(_class2.prototype, "placeholderTimeLeft", [_dec17], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor17 = _applyDecoratedDescriptor(_class2.prototype, "containerListLo", [_dec18], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor18 = _applyDecoratedDescriptor(_class2.prototype, "containerListXien", [_dec19], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor19 = _applyDecoratedDescriptor(_class2.prototype, "containerListDe", [_dec20], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor20 = _applyDecoratedDescriptor(_class2.prototype, "containerListDauDuoi", [_dec21], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor21 = _applyDecoratedDescriptor(_class2.prototype, "containerItemTemplate", [_dec22], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor22 = _applyDecoratedDescriptor(_class2.prototype, "containerPopup", [_dec23], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor23 = _applyDecoratedDescriptor(_class2.prototype, "labelPopupTitle", [_dec24], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor24 = _applyDecoratedDescriptor(_class2.prototype, "labelPopupBetData", [_dec25], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor25 = _applyDecoratedDescriptor(_class2.prototype, "labelPopupBetValue", [_dec26], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor26 = _applyDecoratedDescriptor(_class2.prototype, "labelPopupBetTotalValue", [_dec27], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor27 = _applyDecoratedDescriptor(_class2.prototype, "labelPopupBetTotalWin", [_dec28], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor28 = _applyDecoratedDescriptor(_class2.prototype, "popupFastChoiceAmount", [_dec29], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor29 = _applyDecoratedDescriptor(_class2.prototype, "selectedColor", [_dec30], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return new Color(255, 100, 100);
        }
      }), _descriptor30 = _applyDecoratedDescriptor(_class2.prototype, "normalColor", [_dec31], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return new Color().fromHEX("#cdbee4");
        }
      }), _descriptor31 = _applyDecoratedDescriptor(_class2.prototype, "rows", [_dec32], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor32 = _applyDecoratedDescriptor(_class2.prototype, "labelTitleTime", [_dec33], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor33 = _applyDecoratedDescriptor(_class2.prototype, "labelTitleTimeBox", [_dec34], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor34 = _applyDecoratedDescriptor(_class2.prototype, "calendarContainer", [_dec35], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor35 = _applyDecoratedDescriptor(_class2.prototype, "dayItemPrefab", [_dec36], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor36 = _applyDecoratedDescriptor(_class2.prototype, "gridCalendar", [_dec37], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor37 = _applyDecoratedDescriptor(_class2.prototype, "labelTabResultTab", [_dec38], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor38 = _applyDecoratedDescriptor(_class2.prototype, "dropdownToggleTabResult", [_dec39], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor39 = _applyDecoratedDescriptor(_class2.prototype, "dropdownListTabResult", [_dec40], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor40 = _applyDecoratedDescriptor(_class2.prototype, "labelSelectedLocationNameTabResult", [_dec41], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor41 = _applyDecoratedDescriptor(_class2.prototype, "leftNotResult", [_dec42], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor42 = _applyDecoratedDescriptor(_class2.prototype, "leftContainer27", [_dec43], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor43 = _applyDecoratedDescriptor(_class2.prototype, "leftContainer18", [_dec44], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor44 = _applyDecoratedDescriptor(_class2.prototype, "firsts", [_dec45], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor45 = _applyDecoratedDescriptor(_class2.prototype, "lasts", [_dec46], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor46 = _applyDecoratedDescriptor(_class2.prototype, "result0_27", [_dec47], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor47 = _applyDecoratedDescriptor(_class2.prototype, "result1_27", [_dec48], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor48 = _applyDecoratedDescriptor(_class2.prototype, "result2_27", [_dec49], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor49 = _applyDecoratedDescriptor(_class2.prototype, "result3_27", [_dec50], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor50 = _applyDecoratedDescriptor(_class2.prototype, "result4_27", [_dec51], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor51 = _applyDecoratedDescriptor(_class2.prototype, "result5_27", [_dec52], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor52 = _applyDecoratedDescriptor(_class2.prototype, "result6_27", [_dec53], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor53 = _applyDecoratedDescriptor(_class2.prototype, "result7_27", [_dec54], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor54 = _applyDecoratedDescriptor(_class2.prototype, "result0_18", [_dec55], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor55 = _applyDecoratedDescriptor(_class2.prototype, "result1_18", [_dec56], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor56 = _applyDecoratedDescriptor(_class2.prototype, "result2_18", [_dec57], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor57 = _applyDecoratedDescriptor(_class2.prototype, "result3_18", [_dec58], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor58 = _applyDecoratedDescriptor(_class2.prototype, "result4_18", [_dec59], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor59 = _applyDecoratedDescriptor(_class2.prototype, "result5_18", [_dec60], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor60 = _applyDecoratedDescriptor(_class2.prototype, "result6_18", [_dec61], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor61 = _applyDecoratedDescriptor(_class2.prototype, "result7_18", [_dec62], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor62 = _applyDecoratedDescriptor(_class2.prototype, "result8_18", [_dec63], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor63 = _applyDecoratedDescriptor(_class2.prototype, "containerListHistory", [_dec64], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor64 = _applyDecoratedDescriptor(_class2.prototype, "containerItemHistory", [_dec65], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor65 = _applyDecoratedDescriptor(_class2.prototype, "dropdownToggleTabHistory", [_dec66], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor66 = _applyDecoratedDescriptor(_class2.prototype, "dropdownToggleStatusTabHistory", [_dec67], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor67 = _applyDecoratedDescriptor(_class2.prototype, "dropdownListTabHistory", [_dec68], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor68 = _applyDecoratedDescriptor(_class2.prototype, "dropdownItemTabHistory", [_dec69], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor69 = _applyDecoratedDescriptor(_class2.prototype, "labelSelectedLocationNameTabHistory", [_dec70], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor70 = _applyDecoratedDescriptor(_class2.prototype, "labelSelectedStatusTabHistory", [_dec71], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor71 = _applyDecoratedDescriptor(_class2.prototype, "containerListAchievement", [_dec72], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor72 = _applyDecoratedDescriptor(_class2.prototype, "containerItemTop1Achievement", [_dec73], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor73 = _applyDecoratedDescriptor(_class2.prototype, "containerItemTop2Achievement", [_dec74], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor74 = _applyDecoratedDescriptor(_class2.prototype, "containerItemTop3Achievement", [_dec75], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor75 = _applyDecoratedDescriptor(_class2.prototype, "containerItemAchievement", [_dec76], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor76 = _applyDecoratedDescriptor(_class2.prototype, "labelTicket1K", [_dec77], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor77 = _applyDecoratedDescriptor(_class2.prototype, "labelTicket2K", [_dec78], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor78 = _applyDecoratedDescriptor(_class2.prototype, "labelTicket5K", [_dec79], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PopupProfile.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Dialog.ts', './Config.ts', './Utils.ts', './App.ts', './Http.ts', './BundleControl.ts', './BroadcastListener.ts', './Global.ts', './Lobby.PopupSecurity.ts', './SPUtils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, _createForOfIteratorHelperLoose, cclegacy, _decorator, Node, Toggle, Sprite, Label, EditBox, Prefab, SpriteFrame, instantiate, Layout, Dialog, Configs, Utils, App, Http, BundleControl, BroadcastReceiver, Global, PopupSecurity, SPUtils;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
      _createForOfIteratorHelperLoose = module.createForOfIteratorHelperLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Toggle = module.Toggle;
      Sprite = module.Sprite;
      Label = module.Label;
      EditBox = module.EditBox;
      Prefab = module.Prefab;
      SpriteFrame = module.SpriteFrame;
      instantiate = module.instantiate;
      Layout = module.Layout;
    }, function (module) {
      Dialog = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      Utils = module.Utils;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      BundleControl = module.default;
    }, function (module) {
      BroadcastReceiver = module.BroadcastReceiver;
    }, function (module) {
      Global = module.Global;
    }, function (module) {
      PopupSecurity = module.default;
    }, function (module) {
      SPUtils = module.SPUtils;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _dec25, _dec26, _dec27, _dec28, _dec29, _dec30, _dec31, _dec32, _dec33, _dec34, _dec35, _dec36, _dec37, _dec38, _dec39, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _descriptor25, _descriptor26, _descriptor27, _descriptor28, _descriptor29, _descriptor30, _descriptor31, _descriptor32, _descriptor33, _descriptor34, _descriptor35, _descriptor36, _descriptor37, _descriptor38;
      cclegacy._RF.push({}, "a2f06Yf6jBF/JaXxv6poszd", "PopupProfile", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PopupProfile = exports('PopupProfile', (_dec = ccclass('PopupProfile'), _dec2 = property([Node]), _dec3 = property(Node), _dec4 = property(Node), _dec5 = property(Node), _dec6 = property(Toggle), _dec7 = property(Node), _dec8 = property(Node), _dec9 = property(Node), _dec10 = property(Node), _dec11 = property(Node), _dec12 = property(Sprite), _dec13 = property(Label), _dec14 = property(Label), _dec15 = property(Label), _dec16 = property(Label), _dec17 = property(Label), _dec18 = property(Label), _dec19 = property(Label), _dec20 = property(Label), _dec21 = property(Sprite), _dec22 = property(EditBox), _dec23 = property(EditBox), _dec24 = property(EditBox), _dec25 = property(EditBox), _dec26 = property([Node]), _dec27 = property(Node), _dec28 = property(Prefab), _dec29 = property(Node), _dec30 = property(Node), _dec31 = property(SpriteFrame), _dec32 = property(SpriteFrame), _dec33 = property(Node), _dec34 = property(Node), _dec35 = property(Node), _dec36 = property(Node), _dec37 = property(Node), _dec38 = property(Node), _dec39 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(PopupProfile, _Dialog);
        function PopupProfile() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Dialog.call.apply(_Dialog, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "tabContents", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerChangePassWord", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerProfile", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "menuHeader", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "childProfileTabHeader", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "menuHeaderHistory", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabHistoryLogin", _descriptor7, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabHistoryPayment", _descriptor8, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "changeAvatarContainer", _descriptor9, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "contentAvatars", _descriptor10, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "avatar", _descriptor11, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblCoinBalance", _descriptor12, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblGoldBalance", _descriptor13, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblVipLevel", _descriptor14, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblVipPoint", _descriptor15, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblCreateDate", _descriptor16, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblConfirmStatus", _descriptor17, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblNickname", _descriptor18, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblAccountId", _descriptor19, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "sprCaptcha", _descriptor20, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbOldPassword", _descriptor21, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbNewPassword", _descriptor22, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbReNewPassword", _descriptor23, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbCaptcha", _descriptor24, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "nodes", _descriptor25, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "contentNode", _descriptor26, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "logItemPrefab", _descriptor27, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "contentHistoryPaymentNode", _descriptor28, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "paymentHistoryNode", _descriptor29, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "sprBg1", _descriptor30, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "sprBg2", _descriptor31, _assertThisInitialized(_this));
          _this.captchaId = "";
          _this.activeIndex = 0;
          _this.step = 2;
          _this.isLoginHistory = true;
          _this.currentPage = 1;
          _this.pageSize = 10;
          _this.avatarSelected = "";
          _this.indexCurrent = 0;
          _this.moneyType = 0;
          _this.historyType = 0;
          _initializerDefineProperty(_this, "nodeTabs", _descriptor32, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "prevPage", _descriptor33, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "nextPage", _descriptor34, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "containerPage", _descriptor35, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "listPage", _descriptor36, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "activePage", _descriptor37, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "inactivePage", _descriptor38, _assertThisInitialized(_this));
          _this.maxPage = 0;
          _this.currentSelectedAvatarNode = null;
          return _this;
        }
        var _proto = PopupProfile.prototype;
        _proto.onLoad = function onLoad() {
          Global.PopupProfile = this;
        };
        _proto.start = function start() {
          this.lblNickname.string = Configs.Login.Nickname;
          this.lblAccountId.string = "ID: " + Configs.Login.AccountID.toString();
          this.lblCoinBalance.string = Utils.formatNumber(Configs.Login.CoinBalance);
          this.lblGoldBalance.string = Utils.formatNumber(Configs.Login.GoldBalance);
          this.lblVipLevel.string = App.instance.getTextLang("pr1" + Configs.Login.VipPointLevel);
          this.lblVipPoint.string = Configs.Login.VipPoint.toString();
          this.lblCreateDate.string = Utils.formatDatetime(Configs.Login.CreateTime, "dd/MM/yyyy");
          this.lblConfirmStatus.string = Configs.Login.ConfirmStatus > 0 ? App.instance.getTextLang('txt_confirmed') : App.instance.getTextLang('txt_unconfirmed');
          this.avatar.spriteFrame = App.instance.sprFrameAvatars[Configs.Login.Avatar];
          this.avatarSelected = Configs.Login.Avatar;

          // setTimeout(() => {
          this.onTabSelected(null, this.indexCurrent.toString());
          // }, 100);

          this.getMaxHistoryLog();
          if (this.contentAvatars) {
            for (var _iterator = _createForOfIteratorHelperLoose(this.contentAvatars.children), _step; !(_step = _iterator()).done;) {
              var row = _step.value;
              for (var _iterator2 = _createForOfIteratorHelperLoose(row.children), _step2; !(_step2 = _iterator2()).done;) {
                var itemAvatar = _step2.value;
                if (itemAvatar.name === Configs.Login.Avatar) {
                  this.currentSelectedAvatarNode = itemAvatar;
                  var circle = itemAvatar.getChildByName("circle");
                  if (circle) circle.active = true;
                  break;
                }
              }
            }
          }
        };
        _proto.getMaxHistoryLog = function getMaxHistoryLog() {
          var _this2 = this;
          var url = Configs.App.DOMAIN_CONFIG['GetHistoryLogin'];
          var params = {
            Page: this.currentPage,
            PageSize: 100
          };
          this.listPage.removeAllChildren();
          Http.get(url, params, function (_status, res) {
            if (res.c < 0) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang("me" + res.c));
              return;
            }
            _this2.maxPage = Math.ceil(res.d.length / 10);
            _this2.containerPage.active = _this2.maxPage !== 0;
            if (_this2.maxPage == 0) {
              return;
            }
            _this2.refreshPageList();
          });
        };
        _proto.getMaxLogPayment = function getMaxLogPayment() {
          var _this3 = this;
          var url = Configs.App.DOMAIN_CONFIG['GetAccountHistories'];
          var params = {
            MoneyType: this.moneyType,
            HistoryType: this.historyType,
            Page: this.currentPage,
            PageSize: 100,
            CurrencyID: Configs.Login.CurrencyID
          };
          this.listPage.removeAllChildren();
          Http.get(url, params, function (_status, res) {
            if (res.c < 0) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang("me" + res.c));
              return;
            }
            _this3.maxPage = Math.ceil(res.d.length / 10);
            _this3.containerPage.active = _this3.maxPage !== 0;
            if (_this3.maxPage == 0) {
              return;
            }
            _this3.refreshPageList();
            _this3.getAccountHistory();
          });
        };
        _proto.createPageNode = function createPageNode(pageNumber) {
          var _this4 = this;
          var isActive = this.currentPage === pageNumber;
          var pageTemplate = isActive ? this.activePage : this.inactivePage;
          var pageNode = instantiate(pageTemplate);
          pageNode.getComponentInChildren(Label).string = pageNumber.toString();
          pageNode.on(Node.EventType.TOUCH_END, function () {
            _this4.currentPage = pageNumber;
            _this4.isLoginHistory ? _this4.getLogData() : _this4.getAccountHistory();
          });
          return pageNode;
        };
        _proto.refreshPageList = function refreshPageList() {
          this.listPage.removeAllChildren();
          for (var i = 1; i <= this.maxPage; i++) {
            var pageNode = this.createPageNode(i);
            this.listPage.addChild(pageNode);
          }
        };
        _proto.setTabDefault = function setTabDefault(indexX) {
          this.indexCurrent = indexX;
          for (var index = 0; index < this.nodeTabs.children.length; index++) {
            var element = this.nodeTabs.children[index];
            element.getComponent(Toggle).isChecked = indexX == index;
          }
        };
        _proto.triggerSelectAvatar = function triggerSelectAvatar(event) {
          var clickedNode = event.target;
          if (this.currentSelectedAvatarNode) {
            var oldCircle = this.currentSelectedAvatarNode.getChildByName("circle");
            if (oldCircle) oldCircle.active = false;
          }
          this.currentSelectedAvatarNode = clickedNode;
          this.avatarSelected = clickedNode.name;
          var newCircle = clickedNode.getChildByName("circle");
          if (newCircle) newCircle.active = true;
        };
        _proto.onTabSelected = function onTabSelected(_event, index) {
          var tabIndex = parseInt(index);
          this.showTab(tabIndex);
          if (tabIndex === 1) {
            this.showHistory();
            this.getLogData();
          } else if (tabIndex == 3) ;else if (tabIndex == 4) {
            this.dismiss();
            Global.LobbyController.actPopupCashInCashOut(null, "0");
          }
        };
        _proto.onHistoryTabSelected = function onHistoryTabSelected(_toggle, index) {
          var tabIndex = parseInt(index);
          this.showHistoryTab(tabIndex);
        };
        _proto.showTab = function showTab(index) {
          this.tabContents.forEach(function (tab, i) {
            if (tab) tab.active = i === index;
          });
        };
        _proto.showHistoryTab = function showHistoryTab(index) {
          this.currentPage = 1;
          this.maxPage = 0;
          this.listPage.removeAllChildren();
          this.prevPage.active = false;
          this.nextPage.active = true;
          this.isLoginHistory = index === 0;
          if (index === 1) {
            this.moneyType = 1;
            this.historyType = 0;
          } else if (index === 2) {
            this.moneyType = 0;
            this.historyType = 0;
          } else if (index === 3) {
            this.moneyType = 1;
            this.historyType = 1;
          } else if (index === 4) {
            this.moneyType = 0;
            this.historyType = 1;
          } else if (index === 5) {
            this.moneyType = 1;
            this.historyType = 2;
          }
          this.tabHistoryLogin.active = this.isLoginHistory;
          this.tabHistoryPayment.active = !this.isLoginHistory;
          if (this.isLoginHistory) {
            this.getMaxHistoryLog();
          } else {
            this.getMaxLogPayment();
          }
        };
        _proto.showSecurity = function showSecurity() {
          BundleControl.loadPrefabPopup("prefabs/PopupSecurity", function (prefab) {
            var popup = instantiate(prefab).getComponent(PopupSecurity);
            App.instance.popupNode.addChild(popup.node);
            popup.show();
          });
        };
        _proto.showHistory = function showHistory() {
          this.menuHeader.active = false;
          this.menuHeaderHistory.active = true;
        };
        _proto.showChangePassword = function showChangePassword() {
          this.containerChangePassWord.active = true;
          this.containerProfile.active = false;
          this.menuHeader.active = false;
          this.refreshCaptcha();
        };
        _proto.actSubmitChangePassword = function actSubmitChangePassword() {
          var _this5 = this;
          var oldPassword = this.edbOldPassword.string;
          var newPassword = this.edbNewPassword.string;
          var reNewPassword = this.edbReNewPassword.string;
          var captcha = this.edbCaptcha.string;
          if (oldPassword.length == 0) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang("pr33"));
            return;
          }
          if (newPassword.length == 0) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang("pr34"));
            return;
          }
          if (reNewPassword.length == 0) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang("pr35"));
            return;
          }
          if (newPassword == oldPassword) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang("me-1027"));
            return;
          }
          if (newPassword != reNewPassword) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang("pr35"));
            return;
          }
          if (captcha.length == 0) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang("txt_otp_blank"));
            return;
          }
          App.instance.showLoading(true);
          var data = {
            "OldPassword": oldPassword,
            "NewPassword": newPassword,
            "Timestamp": Utils.getTicks(),
            "Captcha": captcha,
            "Verify": this.captchaId
          };
          var payload = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['ChangePassword'], payload, function (status, res) {
            App.instance.showLoading(false);
            if (status == 200) {
              SPUtils.setUserPass(newPassword);
              App.instance.alertDialog.showMsg(App.instance.getTextLang("pr32"));
              _this5.edbOldPassword.string = "";
              _this5.edbNewPassword.string = "";
              _this5.edbReNewPassword.string = "";
              _this5.edbCaptcha.string = "";
              _this5.btnBack();
            } else {
              _this5.refreshCaptcha();
            }
          });
        };
        _proto.actSubmitChangeAvatar = function actSubmitChangeAvatar() {
          var _this6 = this;
          if (this.avatarSelected == Configs.Login.Avatar) {
            return;
          }
          App.instance.showLoading(true);
          Http.post(Configs.App.DOMAIN_CONFIG['UpdateAvatar'], {
            "Avatar": this.avatarSelected
          }, function (status, res) {
            Configs.Login.Avatar = _this6.avatarSelected;
            Configs.Login.AccessToken = res["m"];
            BroadcastReceiver.send(BroadcastReceiver.USER_INFO_REFRESH);
            _this6.avatar.spriteFrame = App.instance.sprFrameAvatars[Configs.Login.Avatar];
            App.instance.alertDialog.showMsg(App.instance.getTextLang('se51'));
          });
          App.instance.showLoading(false);
          this.btnBack();
        };
        _proto.btnBack = function btnBack() {
          this.containerChangePassWord.active = false;
          this.changeAvatarContainer.active = false;
          this.showTab(0);
          this.menuHeader.active = true;
          // this.childProfileTabHeader.isChecked = true;
          this.menuHeaderHistory.active = false;
        };
        _proto.btnChangeAvatar = function btnChangeAvatar() {
          this.changeAvatarContainer.active = true;
          this.containerProfile.active = false;
          this.menuHeader.active = false;
        };
        _proto.refreshCaptcha = function refreshCaptcha() {
          var _this7 = this;
          Http.get(Configs.App.DOMAIN_CONFIG['GetCaptchaUrl'], {
            length: 4,
            width: 200,
            height: 50
          }, function (status, res) {
            if (status != 200) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_error'));
              return;
            }
            _this7.captchaId = res["d"][0];
            Utils.loadSpriteFrameFromBase64(res["d"][1], function (sprFrame) {
              _this7.sprCaptcha.spriteFrame = sprFrame;
            });
          });
        };
        _proto.onClickToggle = function onClickToggle() {
          for (var i = this.activeIndex; i < this.activeIndex + this.step; i++) {
            if (i < this.nodes.length) {
              this.nodes[i].active = false;
            }
          }
          this.activeIndex += this.step;
          if (this.activeIndex >= this.nodes.length) {
            this.activeIndex = 0;
          }
          for (var _i = this.activeIndex; _i < this.activeIndex + this.step; _i++) {
            if (_i < this.nodes.length) {
              this.nodes[_i].active = true;
            }
          }
        };
        _proto.getLogData = function getLogData() {
          var _this8 = this;
          App.instance.showLoading(true);
          var url = Configs.App.DOMAIN_CONFIG['GetHistoryLogin'];
          var params = {
            Page: this.currentPage,
            PageSize: 10
          };
          Http.get(url, params, function (status, response) {
            if (status === 200 && response.c === 0) {
              App.instance.showLoading(false);
              _this8.refreshPageList();
              _this8.populateLogList(response.d);
              var data = response.d;
              if (_this8.currentPage == 1) {
                _this8.prevPage.active = false;
              }
              if (data.length == 0) {
                if (_this8.currentPage > 1) {
                  _this8.currentPage--;
                }
                return;
              }
              _this8.prevPage.active = _this8.currentPage > 1;
              _this8.nextPage.active = _this8.currentPage < _this8.maxPage;
            }
          });
        };
        _proto.getAccountHistory = function getAccountHistory() {
          var _this9 = this;
          App.instance.showLoading(true);
          var url = Configs.App.DOMAIN_CONFIG['GetAccountHistories'];
          var params = {
            MoneyType: this.moneyType,
            HistoryType: this.historyType,
            Page: this.currentPage,
            PageSize: 10,
            CurrencyID: Configs.Login.CurrencyID
          };
          Http.get(url, params, function (status, response) {
            if (status === 200 && response.c === 0) {
              App.instance.showLoading(false);
              _this9.refreshPageList();
              _this9.populatePaymentHistoryList(response.d);
              var data = response.d;
              if (_this9.currentPage == 1) {
                _this9.prevPage.active = false;
              }
              if (data.length == 0) {
                if (_this9.currentPage > 1) {
                  _this9.currentPage--;
                }
                return;
              }
              _this9.prevPage.active = _this9.currentPage > 1;
              _this9.nextPage.active = _this9.currentPage < _this9.maxPage;
            }
          });
        };
        _proto.populateLogList = function populateLogList(data) {
          var _this10 = this;
          if (data.length === 0) {
            this.currentPage = Math.max(1, this.currentPage - 1);
            return;
          }
          this.contentNode.removeAllChildren();
          this.tabHistoryLogin.getChildByName('Nodata').active = data.length === 0;
          data.forEach(function (log, index) {
            var logItem = instantiate(_this10.logItemPrefab);
            logItem.parent = _this10.contentNode;
            var bg1 = logItem.getChildByName("bg1");
            var bg2 = logItem.getChildByName("bg2");
            if (bg1 && bg2) {
              bg1.active = index % 2 === 0;
              bg2.active = index % 2 !== 0;
            }
            var content = logItem.getChildByName("content");
            content.getChildByName("id").getComponent(Label).string = log.logID.toString();
            content.getChildByName("device").getComponent(Label).string = log.deviceName;
            content.getChildByName("ip").getComponent(Label).string = log.clientIP;
            content.getChildByName("time").getComponent(Label).string = Utils.formatDatetime(log.createdTime, "dd/MM/yyyy HH:mm:ss");
          });
        };
        _proto.populatePaymentHistoryList = function populatePaymentHistoryList(data) {
          var _this11 = this;
          if (data.length === 0) {
            this.currentPage = Math.max(1, this.currentPage - 1);
            return;
          }
          this.contentHistoryPaymentNode.removeAllChildren();
          this.contentHistoryPaymentNode.parent.getChildByName('Nodata').active = data.length === 0;
          data.forEach(function (log, index) {
            var logNode = instantiate(_this11.paymentHistoryNode);
            var logLayout = logNode.getComponent(Layout);
            logLayout.enabled = false;
            logNode.getComponent(Sprite).spriteFrame = index % 2 === 0 ? _this11.sprBg1 : _this11.sprBg2;
            logNode.getChildByName("MaGD").getComponent(Label).string = log.transID.toString();
            logNode.getChildByName("ThoiGian").getComponent(Label).string = Utils.formatDatetime(log.createdTime, "dd/MM/yyyy HH:mm:ss");
            logNode.getChildByName("DichVu").getComponent(Label).string = log.serviceName;
            logNode.getChildByName("PhatSinh").getComponent(Label).string = Utils.formatNumber(log.amount);
            logNode.getChildByName("SoDu").getComponent(Label).string = Utils.formatNumber(log.balance);
            logNode.getChildByName("MoTa").getComponent(Label).string = log.description;
            logNode.active = true;
            _this11.scheduleOnce(function () {
              logLayout.enabled = true;
              logLayout.updateLayout();
              logNode.parent = _this11.contentHistoryPaymentNode;
            }, index * 0.05);
          });
        };
        _proto.btnNextPage = function btnNextPage() {
          this.currentPage++;
          if (this.isLoginHistory) {
            this.getLogData();
          } else {
            this.getAccountHistory();
          }
        };
        _proto.btnPreviousPage = function btnPreviousPage() {
          this.currentPage = Math.max(1, this.currentPage - 1);
          if (this.isLoginHistory) {
            this.getLogData();
          } else {
            this.getAccountHistory();
          }
        };
        return PopupProfile;
      }(Dialog), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "tabContents", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "containerChangePassWord", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "containerProfile", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "menuHeader", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "childProfileTabHeader", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "menuHeaderHistory", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "tabHistoryLogin", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "tabHistoryPayment", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "changeAvatarContainer", [_dec10], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "contentAvatars", [_dec11], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "avatar", [_dec12], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "lblCoinBalance", [_dec13], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "lblGoldBalance", [_dec14], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "lblVipLevel", [_dec15], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor15 = _applyDecoratedDescriptor(_class2.prototype, "lblVipPoint", [_dec16], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor16 = _applyDecoratedDescriptor(_class2.prototype, "lblCreateDate", [_dec17], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor17 = _applyDecoratedDescriptor(_class2.prototype, "lblConfirmStatus", [_dec18], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor18 = _applyDecoratedDescriptor(_class2.prototype, "lblNickname", [_dec19], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor19 = _applyDecoratedDescriptor(_class2.prototype, "lblAccountId", [_dec20], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor20 = _applyDecoratedDescriptor(_class2.prototype, "sprCaptcha", [_dec21], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor21 = _applyDecoratedDescriptor(_class2.prototype, "edbOldPassword", [_dec22], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor22 = _applyDecoratedDescriptor(_class2.prototype, "edbNewPassword", [_dec23], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor23 = _applyDecoratedDescriptor(_class2.prototype, "edbReNewPassword", [_dec24], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor24 = _applyDecoratedDescriptor(_class2.prototype, "edbCaptcha", [_dec25], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor25 = _applyDecoratedDescriptor(_class2.prototype, "nodes", [_dec26], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor26 = _applyDecoratedDescriptor(_class2.prototype, "contentNode", [_dec27], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor27 = _applyDecoratedDescriptor(_class2.prototype, "logItemPrefab", [_dec28], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor28 = _applyDecoratedDescriptor(_class2.prototype, "contentHistoryPaymentNode", [_dec29], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor29 = _applyDecoratedDescriptor(_class2.prototype, "paymentHistoryNode", [_dec30], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor30 = _applyDecoratedDescriptor(_class2.prototype, "sprBg1", [_dec31], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor31 = _applyDecoratedDescriptor(_class2.prototype, "sprBg2", [_dec32], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor32 = _applyDecoratedDescriptor(_class2.prototype, "nodeTabs", [_dec33], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor33 = _applyDecoratedDescriptor(_class2.prototype, "prevPage", [_dec34], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor34 = _applyDecoratedDescriptor(_class2.prototype, "nextPage", [_dec35], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor35 = _applyDecoratedDescriptor(_class2.prototype, "containerPage", [_dec36], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor36 = _applyDecoratedDescriptor(_class2.prototype, "listPage", [_dec37], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor37 = _applyDecoratedDescriptor(_class2.prototype, "activePage", [_dec38], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor38 = _applyDecoratedDescriptor(_class2.prototype, "inactivePage", [_dec39], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PopupRegister.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Dialog.ts', './Http.ts', './Config.ts', './App.ts', './Utils.ts', './BundleControl.ts', './PopupUpdateNickname.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, EditBox, Sprite, Button, Label, instantiate, Dialog, Http, Configs, App, Utils, BundleControl, PopupUpdateNickname;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      EditBox = module.EditBox;
      Sprite = module.Sprite;
      Button = module.Button;
      Label = module.Label;
      instantiate = module.instantiate;
    }, function (module) {
      Dialog = module.default;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Utils = module.Utils;
    }, function (module) {
      BundleControl = module.default;
    }, function (module) {
      PopupUpdateNickname = module.PopupUpdateNickname;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7;
      cclegacy._RF.push({}, "f70b5sgzlJJKpPiKlbtFiUW", "PopupRegister", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PopupRegister = exports('PopupRegister', (_dec = ccclass("PopupRegister"), _dec2 = property(EditBox), _dec3 = property(EditBox), _dec4 = property(EditBox), _dec5 = property(EditBox), _dec6 = property(Sprite), _dec7 = property(Button), _dec8 = property(Label), _dec(_class = (_class2 = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(PopupRegister, _Dialog);
        function PopupRegister() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Dialog.call.apply(_Dialog, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "edbUsername", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbPassword", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbRePassword", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "edbCaptcha", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "sprCaptcha", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "btn_refresh", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblToast", _descriptor7, _assertThisInitialized(_this));
          _this.captchaId = "";
          return _this;
        }
        var _proto = PopupRegister.prototype;
        _proto.start = function start() {
          this.lblToast.string = "";
        };
        _proto.show = function show() {
          _Dialog.prototype.show.call(this);
          this.edbUsername.tabIndex = 0;
          this.edbPassword.tabIndex = 0;
          this.edbRePassword.tabIndex = -1;
          this.edbCaptcha.tabIndex = -1;
          this.refreshCaptcha();
        };
        _proto.onEnable = function onEnable() {
          var _this2 = this;
          this.edbUsername.node.getChildByName('error').active = false;
          this.edbPassword.node.getChildByName('error').active = false;
          this.edbRePassword.node.getChildByName('error').active = false;
          this.edbCaptcha.node.getChildByName('error').active = false;
          this.edbUsername.node.on('editing-did-began', function () {
            _this2.edbUsername.node.getChildByName('error').active = false;
          });
          this.edbPassword.node.on('editing-did-began', function () {
            _this2.edbPassword.node.getChildByName('error').active = false;
          });
          this.edbRePassword.node.on('editing-did-began', function () {
            _this2.edbRePassword.node.getChildByName('error').active = false;
          });
          this.edbCaptcha.node.on('editing-did-began', function () {
            _this2.edbCaptcha.node.getChildByName('error').active = false;
          });
        };
        _proto.actRegister = function actRegister() {
          var _this3 = this;
          var username = this.edbUsername.string.trim();
          var password = this.edbPassword.string;
          var rePassword = this.edbRePassword.string;
          var captcha = this.edbCaptcha.string;
          var isValid = true;
          if (username.length == 0) {
            this.edbUsername.node.getChildByName('error').active = true;
            isValid = false;
          }
          if (password.length == 0) {
            this.edbPassword.node.getChildByName('error').active = true;
            isValid = false;
          }
          if (password != rePassword) {
            this.edbRePassword.node.getChildByName('error').active = true;
            isValid = false;
          }
          if (captcha.length == 0) {
            this.edbCaptcha.node.getChildByName('error').active = true;
            isValid = false;
          }
          if (!isValid) {
            return;
          }
          App.instance.showLoading(true);
          var data = {
            "Password": password,
            "userName": username,
            "Captcha": captcha,
            "Verify": this.captchaId,
            "Timestamp": Utils.getTicks()
          };
          var dataHash = Utils.encryptWithRSA(JSON.stringify(data));
          var reqParams = {
            "Input": dataHash
          };
          Http.post(Configs.App.DOMAIN_CONFIG['RegisterUrl'], reqParams, function (_status, res) {
            App.instance.showLoading(false);
            if (res["c"] != 3) {
              _this3.showToast(res["r"]);
              _this3.edbCaptcha.string = "";
              _this3.refreshCaptcha();
              return;
            }
            BundleControl.loadPrefabPopup("prefabs/PopupUpdateNickName", function (prefab) {
              var popup = instantiate(prefab).getComponent(PopupUpdateNickname);
              App.instance.popupNode.addChild(popup.node);
              popup.showDetail(username, password);
            });
            _this3.dismiss();
          }, false);
        };
        _proto.refreshCaptcha = function refreshCaptcha() {
          var _this4 = this;
          var url = Configs.App.DOMAIN_CONFIG['GetCaptchaUrl'];
          Http.get(url, {
            length: 4,
            width: 170,
            height: 70
          }, function (status, res) {
            if (status != 200) {
              App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_error'));
              return;
            }
            _this4.captchaId = res["d"][0];
            Utils.loadSpriteFrameFromBase64(res["d"][1].replace(/[\r\n]/g, ''), function (sprFrame) {
              _this4.sprCaptcha.spriteFrame = sprFrame;
            });
          });
        };
        _proto.showToast = function showToast(message) {
          var _this5 = this;
          this.lblToast.string = message;
          this.scheduleOnce(function () {
            _this5.lblToast.string = "";
          }, 2);
        };
        return PopupRegister;
      }(Dialog), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "edbUsername", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "edbPassword", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "edbRePassword", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "edbCaptcha", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "sprCaptcha", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "btn_refresh", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "lblToast", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PopupSetting.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './App.ts', './Dialog.ts', './Language.LanguageManager.ts', './AudioManager.ts', './Global.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, Node, App, Dialog, LanguageManager, AudioManager, Global;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
      Node = module.Node;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Dialog = module.default;
    }, function (module) {
      LanguageManager = module.LanguageManager;
    }, function (module) {
      AudioManager = module.default;
    }, function (module) {
      Global = module.Global;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10;
      cclegacy._RF.push({}, "c9695Lfz31BY5xzNkZFpy6l", "PopupSetting", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PopupSetting = exports('default', (_dec = ccclass('PopupSetting'), _dec2 = property(Label), _dec3 = property(Node), _dec4 = property(Node), _dec5 = property(Node), _dec6 = property(Node), _dec7 = property(Node), _dec8 = property(Node), _dec9 = property(Node), _dec10 = property(Node), _dec11 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(PopupSetting, _Dialog);
        function PopupSetting() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Dialog.call.apply(_Dialog, [this].concat(args)) || this;
          // @property(Node)
          // dropDownBox: Node = null!;
          _initializerDefineProperty(_this, "lbCurrentLang", _descriptor, _assertThisInitialized(_this));
          _this.languageCode = '';
          _initializerDefineProperty(_this, "cardVN", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "selectedVN", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "selectedUK", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "selectedKM", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "selectedTH", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "selectedID", _descriptor7, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "selectedZH", _descriptor8, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "btnOn", _descriptor9, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "btnOff", _descriptor10, _assertThisInitialized(_this));
          _this.selectedMap = {};
          return _this;
        }
        var _proto = PopupSetting.prototype;
        _proto.onLoad = function onLoad() {
          this.selectedMap = {
            vi: this.selectedVN,
            en: this.selectedUK,
            km: this.selectedKM,
            th: this.selectedTH,
            id: this.selectedID,
            zh: this.selectedZH
          };
          var lang = LanguageManager.instance.locale;
          this.languageCode = lang;
          switch (lang) {
            case 'vi':
              this.lbCurrentLang.string = 'Tiếng Việt';
              break;
            case 'en':
              this.lbCurrentLang.string = 'English';
              break;
            case 'km':
              this.lbCurrentLang.string = 'ភាសាខ្មែរ';
              break;
            case 'th':
              this.lbCurrentLang.string = 'ภาษาไทย';
              break;
            case 'id':
              this.lbCurrentLang.string = 'Bahasa Indonesia';
              break;
            case 'zh':
              this.lbCurrentLang.string = '中文';
              break;
          }
          this.updateSelected(lang);
        };
        _proto.start = function start() {
          this.setMusicToggleUI(AudioManager.getInstance().isMusicOn());
        };
        _proto.updateSelected = function updateSelected(langCode) {
          var _this2 = this;
          Object.keys(this.selectedMap).forEach(function (code) {
            _this2.selectedMap[code].active = code === langCode;
          });
        }

        // showDropDown(status: boolean) {
        //     if (status) {
        //         this.dropDownBox.setScale(new Vec3(1, 0, 1));
        //         this.dropDownBox.active = true;
        //         Tween.stopAllByTarget(this.dropDownBox);
        //         tween(this.dropDownBox)
        //             .to(0.1, { scale: new Vec3(1, 1, 1) })
        //             .start();
        //     } else {
        //         tween(this.dropDownBox)
        //             .to(0.1, { scale: new Vec3(1, 0, 1) })
        //             .call(() => {
        //                 this.dropDownBox.active = false;
        //             })
        //             .start();
        //     }
        // }
        ;

        _proto.onClickChangeLanguage = function onClickChangeLanguage(event, data) {
          var _this3 = this;
          this.languageCode = LanguageManager.instance.locale;
          var applyLang = function applyLang(code, name) {
            _this3.lbCurrentLang.string = name;
            if (_this3.languageCode !== code) {
              LanguageManager.instance.setLanguage(code);
              var msg = LanguageManager.instance.getString('txt_notify_change_language');
              App.instance.ShowAlertDialog(msg);
            }
            _this3.updateSelected(code);
            // this.showDropDown(false);
            Global.LobbyController.toggleMenu();
          };
          switch (data) {
            case '1':
              // this.showDropDown(!this.dropDownBox.active);
              break;
            case '2':
              applyLang('vi', 'Tiếng Việt');
              break;
            case '3':
              applyLang('en', 'English');
              break;
            case '4':
              applyLang('km', 'ភាសាខ្មែរ');
              break;
            case '5':
              applyLang('th', 'ภาษาไทย');
              break;
            case '6':
              applyLang('id', 'Bahasa Indonesia');
              break;
            case '7':
              applyLang('zh', '中文');
              break;
            default:
              console.log('Unknown language code:', data);
          }
        };
        _proto.setMusicToggleUI = function setMusicToggleUI(isOn) {
          this.btnOn.active = isOn;
          this.btnOff.active = !isOn;
        };
        _proto.onClickBtnOffMusic = function onClickBtnOffMusic() {
          this.setMusicToggleUI(false);
          AudioManager.getInstance().turnOffMusic();
        };
        _proto.onClickBtnOnMusic = function onClickBtnOnMusic() {
          this.setMusicToggleUI(true);
          AudioManager.getInstance().turnOnMusic();
        };
        return PopupSetting;
      }(Dialog), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "lbCurrentLang", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "cardVN", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "selectedVN", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "selectedUK", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "selectedKM", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "selectedTH", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "selectedID", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "selectedZH", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "btnOn", [_dec10], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "btnOff", [_dec11], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PopupSlide.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Dialog.ts', './Utils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, PageView, instantiate, Sprite, Button, sys, Dialog, Utils;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      PageView = module.PageView;
      instantiate = module.instantiate;
      Sprite = module.Sprite;
      Button = module.Button;
      sys = module.sys;
    }, function (module) {
      Dialog = module.default;
    }, function (module) {
      Utils = module.Utils;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;
      cclegacy._RF.push({}, "4a091tNHolBMalh3gLBmaVq", "PopupSlide", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PopupSlide = exports('default', (_dec = ccclass('PopupSlide'), _dec2 = property(Node), _dec3 = property(Node), _dec4 = property(PageView), _dec(_class = (_class2 = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(PopupSlide, _Dialog);
        function PopupSlide() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Dialog.call.apply(_Dialog, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "bannerTemplate", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "parentInbox", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "parentView", _descriptor3, _assertThisInitialized(_this));
          _this.totalPages = 0;
          _this.currentIndex = 0;
          _this.autoScrollIntervalId = -1;
          return _this;
        }
        var _proto = PopupSlide.prototype;
        _proto.onLoad = function onLoad() {
          this.parentView.content.removeAllChildren();
        };
        _proto.showDetail = function showDetail(data) {
          var _this2 = this;
          _Dialog.prototype.show.call(this);
          data.forEach(function (item) {
            var banner = instantiate(_this2.bannerTemplate);
            banner.active = true;
            _this2.parentView.addPage(banner);
            Utils.loadImgFromUrl(banner.getComponentInChildren(Sprite), item.imageUrl, banner);
            var button = banner.getComponent(Button);
            if (button) {
              button.node.on('click', function () {
                if (item.targetUrl === "") return;
                sys.openURL(item.targetUrl);
              }, _this2);
            }
          });
          this.totalPages = data.length;
          if (this.totalPages > 1) {
            this.startAutoScroll();
          }
        };
        _proto.startAutoScroll = function startAutoScroll() {
          var _this3 = this;
          if (this.autoScrollIntervalId !== -1) {
            clearInterval(this.autoScrollIntervalId);
          }
          this.autoScrollIntervalId = setInterval(function () {
            _this3.currentIndex = (_this3.currentIndex + 1) % _this3.totalPages;
            _this3.parentView.scrollToPage(_this3.currentIndex, 1);
          }, 2000);
        };
        return PopupSlide;
      }(Dialog), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "bannerTemplate", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "parentInbox", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "parentView", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PopupSpinWheel.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Dialog.ts', './Config.ts', './Http.ts', './App.ts', './Language.LanguageManager.ts', './BundleControl.ts', './BroadcastListener.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, _asyncToGenerator, _regeneratorRuntime, cclegacy, _decorator, EditBox, Node, Label, Sprite, misc, Vec3, tween, director, instantiate, Dialog, Configs, Http, App, LanguageManager, BundleControl, BroadcastReceiver;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
      _asyncToGenerator = module.asyncToGenerator;
      _regeneratorRuntime = module.regeneratorRuntime;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      EditBox = module.EditBox;
      Node = module.Node;
      Label = module.Label;
      Sprite = module.Sprite;
      misc = module.misc;
      Vec3 = module.Vec3;
      tween = module.tween;
      director = module.director;
      instantiate = module.instantiate;
    }, function (module) {
      Dialog = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      App = module.default;
    }, function (module) {
      LanguageManager = module.LanguageManager;
    }, function (module) {
      BundleControl = module.default;
    }, function (module) {
      BroadcastReceiver = module.BroadcastReceiver;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11;
      cclegacy._RF.push({}, "f3be9WrlR1BjYaVSMk9T9g6", "PopupSpinWheel", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PopupSpinWheel = exports('default', (_dec = property(EditBox), _dec2 = property(Node), _dec3 = property(Node), _dec4 = property(Node), _dec5 = property(Label), _dec6 = property(Label), _dec7 = property(Node), _dec8 = property(Node), _dec9 = property(Node), _dec10 = property(Label), _dec11 = property(Label), ccclass(_class = (_class2 = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(PopupSpinWheel, _Dialog);
        function PopupSpinWheel() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Dialog.call.apply(_Dialog, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "edbCode", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "wheel3", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "wheel1", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "nodeChuyenGame", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblDoneNumber", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lbltoGame", _descriptor6, _assertThisInitialized(_this));
          _this.circleRadius = 307 * 2 / 3;
          _this.TYPE_VIP = 1;
          _this.TYPE_OFTEN = 0;
          _this.LIBNUMBER = "0";
          _this.isSpinning = false;
          _initializerDefineProperty(_this, "rewardVn", _descriptor7, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "rewardEn", _descriptor8, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "nodeNotify", _descriptor9, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblXu", _descriptor10, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblPrice", _descriptor11, _assertThisInitialized(_this));
          _this.mapName = {
            "1": "100.000",
            "2": "50.000",
            "3": "20.000",
            "4": "10.000",
            "5": "5.000",
            "6": "2.000",
            "10": "1.000.000",
            "11": "500.000",
            "12": "200.000",
            "18": "Trượt",
            "51": "Honda SH",
            "52": "iPhone",
            "111": "Thêm lượt",
            "112": "Trượt",
            "201": "2.000.000 Xu",
            "202": "300.000 Xu",
            "203": "3.000.000 Xu",
            "204": "500.000 Xu",
            "205": "1.000.000 Xu",
            "206": "100.000 Xu",
            "207": "5.000.000 Xu",
            "208": "200.000 Xu",
            "1152": "1 Free Lottery 2k",
            "1155": "1 Free Lottery 5k",
            "1191": "Trading Pro - 1 Ticket 2K",
            "1192": "Trading Pro - 2 Ticket 2K",
            "1193": "Trading Pro - 3 Ticket 2K",
            "1211": "1 Free Keno",
            "1212": "2 Free Keno",
            "1213": "3 Free Keno",
            "2012": "Vương quốc 88",
            "2015": "5 Vương quốc 88",
            "2032": "Sấm Truyền",
            "2034": "4 Sấm Truyền",
            "2052": "Gái Nhảy",
            "2054": "4 Gái Nhảy",
            "2072": "Thủy Cung",
            "2075": "5 Thủy Cung",
            "2112": "Rừng Vàng",
            "2115": "5 Rừng Vàng",
            "2134": "Thần tài",
            "2152": "2 Vũ Trường",
            "2154": "4 Vũ Trường",
            "4011": "Poker Tour",
            "4013": "3 Poker Tour",
            "4031": "TLMN Tour",
            "4033": "3 TLMN Tour",
            "4051": "Sâm lốc Tour",
            "4071": "OTT Tour",
            "4073": "3 OTT Tour",
            "5012": "Sport - 2 - Vé miễn phí - 2K",
            "5015": "Sport - 5 - Vé miễn phí - 5K",
            "5033": "US Power Ball",
            "5043": "US Mega Millions",
            "5091": "Fantasy Sport - 1 - Vé miễn phí - 2K",
            "6015": "Cá Kiếm",
            "6035": "Long Vương",
            "6055": "Cá Mập",
            "6075": "Xuất Kích",
            "6095": "Phi Đội - 5000 - Vàng",
            "11512": "2 Free Lottery 1k",
            "11513": "3 Free Lottery 1k",
            "11522": "2 Free Lottery 2k",
            "11523": "3 Free Lottery 2k",
            "21310": "10 Thần tài"
          };
          _this.mapNameGameReal = {
            "115": "na28",
            "119": "na288",
            //chua biet
            "201": "na8",
            "203": "na9",
            "205": "na11",
            "207": "na10",
            "211": "na33",
            "213": "na34",
            "215": "na44",
            "401": "na37",
            "403": "na38",
            "405": "na39",
            "407": "na40",
            "501": "na43",
            "503": "na431",
            //chua biet
            "504": "na432",
            "509": "na41",
            "601": "na19",
            "603": "na20",
            "605": "na32",
            "607": "na36",
            "609": "na42",
            "121": "na121"
          };
          _this.mapWheel = null;
          _this.gameID = 0;
          _this.countDownTime = 10;
          return _this;
        }
        var _proto = PopupSpinWheel.prototype;
        _proto.start = function start() {
          this.nodeChuyenGame.active = false;
          this.getPrizeData();
          this.lblDoneNumber.string = this.LIBNUMBER;
        };
        _proto.show = function show() {
          _Dialog.prototype.show.call(this);
          // this.edbCode.string = "";
        };

        _proto.getPrizeData = /*#__PURE__*/function () {
          var _getPrizeData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
            var _this2 = this;
            return _regeneratorRuntime().wrap(function _callee$(_context) {
              while (1) switch (_context.prev = _context.next) {
                case 0:
                  App.instance.showLoading(true);

                  // giải thưởng
                  Http.get(Configs.App.DOMAIN_CONFIG['VQMM_GetRewardsConfigUrl'], {}, function (status, res) {
                    App.instance.showLoading(false);
                    if (status !== 200 || res.c !== 0) {
                      _this2.isSpinning = true;
                      App.instance.alertDialog.showMsg(App.instance.getTextLang("error_fetch_prize_data"));
                      return;
                    }
                    _this2.mapWheel = res.d;
                    _this2.mapPrizeData(res.d);
                  });
                case 2:
                case "end":
                  return _context.stop();
              }
            }, _callee);
          }));
          function getPrizeData() {
            return _getPrizeData.apply(this, arguments);
          }
          return getPrizeData;
        }();
        _proto.mapPrizeData = function mapPrizeData(prizes) {
          var _this3 = this;
          if (!prizes || prizes.length === 0) return;
          prizes.sort(function (a, b) {
            return a.position - b.position;
          });
          prizes.forEach(function (prize, index) {
            var imageNode = _this3.wheel3.children[_this3.wheel3.children.length - 1 - index]; // Lấy Node ảnh tại vị trí tương ứng
            if (!imageNode) return;
            if (LanguageManager.instance.locale == "vi") {
              var sprite = _this3.rewardVn.children.find(function (img) {
                return img.name === "lucky-wheel-symbol-" + prize.symbolID + "-vi";
              });
              if (sprite) {
                var spriteComponent = imageNode.getComponent(Sprite);
                if (spriteComponent) {
                  spriteComponent.spriteFrame = sprite.getComponent(Sprite).spriteFrame; // Gán ảnh vào vòng quay
                }
              }
            } else {
              var _sprite = _this3.rewardEn.children.find(function (img) {
                return img.name === "lucky-wheel-symbol-" + prize.symbolID;
              });
              if (_sprite) {
                var _spriteComponent = imageNode.getComponent(Sprite);
                if (_spriteComponent) {
                  _spriteComponent.spriteFrame = _sprite.getComponent(Sprite).spriteFrame; // Gán ảnh vào vòng quay
                }
              }
            }
          });

          // Sắp xếp lại ảnh trên vòng quay
          this.arrangeImagesInCircle();
          this.getDataListRotation();
        };
        _proto.arrangeImagesInCircle = function arrangeImagesInCircle() {
          var numberOfImages = this.wheel3.children.length; // Số lượng ảnh con
          var angleStep = 360 / numberOfImages;
          for (var i = 0; i < numberOfImages; i++) {
            var imageNode = this.wheel3.children[i]; // Lấy ảnh con thứ i

            // Tính toán góc hiện tại
            var angle = angleStep * i + 22.5 + 90;

            // Tính toán vị trí dựa trên góc và bán kính
            var radians = misc.degreesToRadians(angle);
            var x = this.circleRadius * Math.cos(radians);
            var y = this.circleRadius * Math.sin(radians);
            imageNode.setPosition(x, y);

            // Xoay ảnh sao cho vector BA hướng về tâm
            imageNode.angle = angle - 90; // +90 để điểm A hướng về tâm
          }
        };

        _proto.actRotate = function actRotate() {
          //    if( Configs.Login.SecurityStatus == 0){
          //          App.instance.alertDialog.showMsg(App.instance.getTextLang("me-3003"));
          //             return;
          //    }
          if (this.isSpinning) {
            // App.instance.alertDialog.showMsg("Đang quay, vui lòng chờ...");
            return;
          }

          //Kiểm tra thành công mới chạy
          var currentTurns = parseInt(this.lblDoneNumber.string);
          if (currentTurns <= 0) {
            App.instance.alertDialog.showMsg(App.instance.getTextLang("vqmm6"));
            return;
          }
          this.isSpinning = true;

          //Gọi đến api spin
          App.instance.showLoading(true);
          this.postRotation();
        };
        _proto.clickHistory = function clickHistory() {
          var _this4 = this;
          var cb = function cb(prefab) {
            var popup = instantiate(prefab).getComponent("PopupHistoryWheel");
            popup.node.parent = App.instance.node;
            popup.setData(_this4);
            popup.show();
          };
          BundleControl.loadPrefabPopup("prefabs/PopupHistoryWheel", cb);
        };
        _proto.clickTutorial = function clickTutorial() {
          var cb = function cb(prefab) {
            var popup = instantiate(prefab).getComponent("PopupTutorialWheel");
            popup.node.parent = App.instance.node;
            popup.show();
          };
          BundleControl.loadPrefabPopup("prefabs/PopupTutorialWheel", cb);
        };
        _proto.getDataListRotation = function getDataListRotation() {
          var _this5 = this;
          Http.get(Configs.App.DOMAIN_CONFIG['VQMM_GetTurnUrl'], {
            type: 0
          }, function (status, res) {
            try {
              // App.instance.alertDialog.showMsg(status);
              if (status !== 200 || res.c !== 0) {
                App.instance.alertDialog.showMsg(App.instance.getTextLang("ca-10000"));
                return;
              }
              if (status === 200 && res.c == 0) {
                if (+(res == null ? void 0 : res.d) > 0) {
                  _this5.lblDoneNumber.string = res == null ? void 0 : res.d.toString();
                } else {
                  _this5.lblDoneNumber.string = "0";
                }
              }
              _this5.isSpinning = false;
              App.instance.showLoading(false);
            } catch (error) {
              App.instance.showLoading(false);
              App.instance.alertDialog.showMsg(App.instance.getTextLang("ca-10000"));
            }
          });
          // this.dismiss();
        };

        _proto.postRotation = function postRotation() {
          var _this6 = this;
          var CurrencyID = Configs.Login.CurrencyID;
          var data = {
            "CurrencyID": CurrencyID,
            "type": this.TYPE_OFTEN
          };
          Http.post(Configs.App.DOMAIN_CONFIG['VQMM_GetSpinUrl'], data, function (status, res) {
            // App.instance.alertDialog.showMsg(res?.c);

            if (status !== 200 || (res == null ? void 0 : res.c) !== 0) {
              // switch (res?.c) {
              //     case -51:
              //         App.instance.alertDialog.showMsg(App.instance.getTextLang("txt_insufficient_balance"));
              //         break;
              //     case -600:
              //         App.instance.alertDialog.showMsg(App.instance.getTextLang("ca-10003"));
              //         break;

              //     case -99:
              //         App.instance.alertDialog.showMsg(App.instance.getTextLang("me-99"));
              //         break;

              //     case -62:
              //         App.instance.alertDialog.showMsg(App.instance.getTextLang("txt_unknown_error"));
              //         break;
              //     default:
              //         App.instance.alertDialog.showMsg(App.instance.getTextLang("ca-10004"));
              //         break;
              // }

              // App.instance.showLoading(false);
              // this.isSpinning = false;
              return;
            }
            App.instance.showLoading(false);
            _this6.runWheel(res == null ? void 0 : res.d);
          });
          //  App.instance.showLoading(false);
          // this.runWheel(null);
        };

        _proto.closePopupp = function closePopupp() {
          this.unschedule(this.countDownTick);
          this.nodeNotify.active = false;
          this.isSpinning = false;
          App.instance.checkTurnVQMM();
        };
        _proto.runWheel = function runWheel(spinData) {
          var rotateToIdx3 = (spinData == null ? void 0 : spinData.positionPrize) - 1;
          var rotateToIdx1 = (spinData == null ? void 0 : spinData.positionCoin) - 1;
          this.wheel1.eulerAngles = new Vec3(0, 0, 0);
          this.wheel3.eulerAngles = new Vec3(0, 0, 0);
          var arrIndexNew = [6, 5, 4, 3, 2, 1, 0, 7];
          // "201": "2.000.000 Xu",6
          // "202": "300,000 Xu",5
          // "203": "3.000.000 Xu",4
          // "204": "500.000 Xu",3
          // "205": "1.000.000 Xu",2
          // "206": "100.000 Xu", 1
          // "207": "5.000.000 Xu", 0
          // "208": "200.000 Xu",7

          this.gameID = spinData == null ? void 0 : spinData.gamePrizeID;
          var found = this.mapWheel.find(function (item) {
            return item.position === (spinData == null ? void 0 : spinData.positionPrize);
          });
          this.nodeChuyenGame.active = found.symbolID < 100 ? false : true;

          //Vòng quay nhỏ
          var targetAngleZ = -(360 * 4 + (360 - 360 / 8 * arrIndexNew[rotateToIdx1]) - 360 / 8 / 2);

          // Lấy góc hiện tại
          var currentEuler = this.wheel1.eulerAngles;

          // Tạo Vec3 mới với góc Z mới, giữ nguyên X và Y
          var targetEuler = new Vec3(currentEuler.x, currentEuler.y, targetAngleZ);

          // Tween xoay bằng eulerAngles trong 3 giây
          tween(this.wheel1).to(3, {
            eulerAngles: targetEuler
          }, {
            easing: 'sineInOut'
          }) // dùng easing bằng string
          .start();
          var thiz = this;
          director.getScene().emit('rotateWheelFinish', {});
          thiz.lblXu.string = thiz.mapName["20" + (spinData == null ? void 0 : spinData.positionCoin)];
          // const found = this.mapWheel.find(item => item.position === spinData?.positionPrize);
          if (found) {
            if (found.symbolID != 18) {
              thiz.lblPrice.string = App.instance.getTextLang("vqmm_rs_" + found.symbolID);
            } else {
              this.lblPrice.string = "";
            }
          }
          var angleZ = 360 * 4 + 360 / 8 * rotateToIdx3 + 360 / 8 / 2;

          // Lưu euler góc hiện tại
          var currentEuler3 = this.wheel3.eulerAngles;

          // Tạo euler target mới
          var targetEuler3 = new Vec3(currentEuler3.x, currentEuler3.y, angleZ);

          // Dừng tween cũ nếu có
          tween(this.wheel3).stop();

          // Bắt đầu tween mới (thay cho runAction)
          tween(this.wheel3).delay(0.25).to(4, {
            eulerAngles: targetEuler3
          }, {
            easing: 'sineInOut'
          }).delay(1).call(function () {
            thiz.lblDoneNumber.string = spinData == null ? void 0 : spinData.turnBalance.toString();
            BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);
            thiz.nodeNotify.active = true;
            if (found.symbolID > 100) {
              thiz.startCountDown();
            }
          }).start();
        };
        _proto.startCountDown = function startCountDown() {
          this.countDownTime = 10;

          // Hiển thị giá trị ban đầu
          this.updateCountDownLabel();

          // Dừng bất kỳ schedule nào đang chạy trước đó (nếu có)
          this.unschedule(this.countDownTick);

          // Bắt đầu đếm ngược mỗi giây
          this.schedule(this.countDownTick, 1, this.countDownTime - 1, 0);
        };
        _proto.countDownTick = function countDownTick() {
          this.countDownTime--;
          this.updateCountDownLabel();
          if (this.countDownTime <= 0) {
            this.unschedule(this.countDownTick);
            this.showCountdownFinished();
          }
        };
        _proto.updateCountDownLabel = function updateCountDownLabel() {
          if (this.lbltoGame) {
            this.lbltoGame.string = LanguageManager.instance.getString(this.mapNameGameReal[this.gameID.toString()]) + ": " + this.countDownTime.toString() + "s";
          }
        };
        _proto.showCountdownFinished = function showCountdownFinished() {
          this.node.active = false;
          App.instance.openGameFromWheel(this.gameID);
        }

        // private showPrizeImage(imageFrame: SpriteFrame) {
        //     let prizePopup = new Node();
        //     let sprite = prizePopup.addComponent(Sprite);
        //     sprite.spriteFrame = imageFrame;

        //     prizePopup.parent = this.node; 
        //     prizePopup.setPosition(0, 0); 
        //     prizePopup.setContentSize(200, 200); 
        // }
        ;

        return PopupSpinWheel;
      }(Dialog), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "edbCode", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "wheel3", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "wheel1", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "nodeChuyenGame", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "lblDoneNumber", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "lbltoGame", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "rewardVn", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "rewardEn", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "nodeNotify", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "lblXu", [_dec10], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "lblPrice", [_dec11], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PopupSupport.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Dialog.ts', './Config.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, WebView, Dialog, Configs;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      WebView = module.WebView;
    }, function (module) {
      Dialog = module.default;
    }, function (module) {
      Configs = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;
      cclegacy._RF.push({}, "715dfHXA7NEzoaONxAkgGPP", "PopupSupport", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PopupSupport = exports('PopupSupport', (_dec = ccclass('PopupSupport'), _dec2 = property(WebView), _dec(_class = (_class2 = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(PopupSupport, _Dialog);
        function PopupSupport() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Dialog.call.apply(_Dialog, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "webview", _descriptor, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = PopupSupport.prototype;
        _proto.start = function start() {
          if (this.webview) {
            this.webview.url = Configs.App.DOMAIN_CONFIG["SupportUrl"];
          }
        };
        _proto.show = function show() {
          _Dialog.prototype.show.call(this);
        };
        _proto.dismiss = function dismiss() {
          _Dialog.prototype.dismiss.call(this);
        };
        return PopupSupport;
      }(Dialog), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "webview", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PopupTournament.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Dialog.ts'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, Dialog;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
    }, function (module) {
      Dialog = module.default;
    }],
    execute: function () {
      var _dec, _class;
      cclegacy._RF.push({}, "dbd83zyDDhC2JFSe2sC4ST6", "PopupTournament", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PopupTournament = exports('PopupTournament', (_dec = ccclass('PopupTournament'), _dec(_class = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(PopupTournament, _Dialog);
        function PopupTournament() {
          return _Dialog.apply(this, arguments) || this;
        }
        var _proto = PopupTournament.prototype;
        _proto.start = function start() {};
        _proto.show = function show() {
          _Dialog.prototype.show.call(this);
        };
        _proto.dismiss = function dismiss() {
          _Dialog.prototype.dismiss.call(this);
        };
        return PopupTournament;
      }(Dialog)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PopupTutorialWheel.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Dialog.ts', './App.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, instantiate, Label, log, Dialog, App;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      instantiate = module.instantiate;
      Label = module.Label;
      log = module.log;
    }, function (module) {
      Dialog = module.default;
    }, function (module) {
      App = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor, _descriptor2;
      cclegacy._RF.push({}, "8ebd4QYL1hKQaMR5+mEsKvi", "PopupTutorialWheel", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PopupTutorialWheel = exports('default', (_dec = property(Node), _dec2 = property(Node), ccclass(_class = (_class2 = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(PopupTutorialWheel, _Dialog);
        function PopupTutorialWheel() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Dialog.call.apply(_Dialog, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "itemClone", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "parentScrollView", _descriptor2, _assertThisInitialized(_this));
          // LIFE-CYCLE CALLBACKS:
          // onLoad () {}
          _this.isEmtyData = false;
          _this.page = 1;
          _this.mapName = {
            "na8": "2.000",
            "na34": "1.000",
            "na11": "2.500",
            "na44": "2.500",
            "na10": "2.000",
            "na9": "2.500",
            "na33": "2.000",
            "st06": "2.000",
            "US Mega Millions": "1.000",
            "US Power Ball": "1.000",
            "na41": "1.000",
            "spr117": "1.000",
            "na28": "2.000",
            "Keno": "1.000"
          };
          return _this;
        }
        var _proto = PopupTutorialWheel.prototype;
        _proto.start = function start() {
          this.getInboxs();
        };
        _proto.getInboxs = function getInboxs() {
          for (var index = 0; index < Object.keys(this.mapName).length; index++) {
            var itemNode = instantiate(this.itemClone);
            itemNode.active = true;
            this.parentScrollView.addChild(itemNode);
            itemNode.children[0].active = index % 2 == 0;
            itemNode.children[1].getComponent(Label).string = (index + 1).toString();
            itemNode.children[2].getComponent(Label).string = App.instance.getTextLang(Object.keys(this.mapName)[index]);
            itemNode.children[3].getComponent(Label).string = this.mapName[Object.keys(this.mapName)[index]];
          }
        };
        _proto.scrollEvent = function scrollEvent(sender, event) {
          switch (event) {
            case 1:
              log("Scroll to Bottom");
              if (!this.isEmtyData) ;
              break;
            case 6:
              log("Bounce bottom");
              break;
          }
        }

        // update (dt) {}
        ;

        return PopupTutorialWheel;
      }(Dialog), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "itemClone", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "parentScrollView", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PopupUpdateNickname.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Dialog.ts', './App.ts', './Utils.ts', './Http.ts', './Config.ts', './SPUtils.ts', './BroadcastListener.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, EditBox, Label, Dialog, App, Utils, Http, Configs, SPUtils, BroadcastReceiver;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      EditBox = module.EditBox;
      Label = module.Label;
    }, function (module) {
      Dialog = module.default;
    }, function (module) {
      App = module.default;
    }, function (module) {
      Utils = module.Utils;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      SPUtils = module.SPUtils;
    }, function (module) {
      BroadcastReceiver = module.BroadcastReceiver;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;
      cclegacy._RF.push({}, "98fa6a8u0NFcqDx+oNqZYCw", "PopupUpdateNickname", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PopupUpdateNickname = exports('PopupUpdateNickname', (_dec = ccclass("PopupUpdateNickname"), _dec2 = property(EditBox), _dec3 = property(Label), _dec4 = property(Label), _dec(_class = (_class2 = /*#__PURE__*/function (_Dialog) {
        _inheritsLoose(PopupUpdateNickname, _Dialog);
        function PopupUpdateNickname() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Dialog.call.apply(_Dialog, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "edbNickname", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lbUsername", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblToast", _descriptor3, _assertThisInitialized(_this));
          _this.username = "";
          _this.password = "";
          return _this;
        }
        var _proto = PopupUpdateNickname.prototype;
        _proto.showDetail = function showDetail(username, password) {
          this.username = username;
          this.password = password;
          this.lbUsername.string = username;
          this.show();
        };
        _proto.actUpdate = function actUpdate() {
          var _this2 = this;
          var nickname = this.edbNickname.string.trim();
          if (nickname.length == 0) {
            this.showToast(App.instance.getTextLang('txt_login_username_not_blank'));
            return;
          }
          App.instance.showLoading(true);
          var data = {
            userName: this.username,
            Timestamp: Utils.getTicks(),
            Nickname: nickname
          };
          var json = {
            "Input": Utils.encryptWithRSA(JSON.stringify(data))
          };
          Http.post(Configs.App.DOMAIN_CONFIG['UpdateNicknameUrl'], json, function (_status, res) {
            App.instance.showLoading(false);
            if (res['c'] != 0) {
              _this2.showToast(res['r']);
              return;
            }
            App.instance.showLoading(false);
            SPUtils.setUserName(_this2.username);
            SPUtils.setUserPass(_this2.password);
            Configs.Login.AccessToken = res["m"];
            Configs.Login.SessionKey = res["d"]["sessionToken"];
            _this2.dismiss();
            BroadcastReceiver.send(BroadcastReceiver.USER_INFO_REFRESH, res['d']);
            BroadcastReceiver.send(BroadcastReceiver.USER_LOGGED_IN);
          }, false);
        };
        _proto.showToast = function showToast(message) {
          var _this3 = this;
          this.lblToast.string = message;
          this.scheduleOnce(function () {
            _this3.lblToast.string = "";
          }, 2);
        };
        return PopupUpdateNickname;
      }(Dialog), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "edbNickname", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "lbUsername", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "lblToast", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PopupVipWheel.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Http.ts', './Config.ts', './Language.LanguageManager.ts', './BundleControl.ts', './App.ts', './BroadcastListener.ts', './Utils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Label, Sprite, log, misc, Vec3, UITransform, tween, Component, instantiate, Http, Configs, LanguageManager, BundleControl, App, BroadcastReceiver, Utils;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Label = module.Label;
      Sprite = module.Sprite;
      log = module.log;
      misc = module.misc;
      Vec3 = module.Vec3;
      UITransform = module.UITransform;
      tween = module.tween;
      Component = module.Component;
      instantiate = module.instantiate;
    }, function (module) {
      Http = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      LanguageManager = module.LanguageManager;
    }, function (module) {
      BundleControl = module.default;
    }, function (module) {
      App = module.default;
    }, function (module) {
      BroadcastReceiver = module.BroadcastReceiver;
    }, function (module) {
      Utils = module.Utils;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7;
      cclegacy._RF.push({}, "ea5835oUrJKg51RbxtElfLq", "PopupVipWheel", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PopupVipWheel = exports('default', (_dec = property(Node), _dec2 = property(Node), _dec3 = property(Label), _dec4 = property(Node), _dec5 = property(Node), _dec6 = property(Label), _dec7 = property(Sprite), ccclass(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(PopupVipWheel, _Component);
        function PopupVipWheel() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "wheel3", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "wheel1", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblDoneNumber", _descriptor3, _assertThisInitialized(_this));
          _this.isSpinning = false;
          // [7,8,4,2,5,1,9,14,3,13,12,6]
          _this.prizes = [[{
            "id": 1,
            "prize": "100.000"
          }, {
            "id": 2,
            "prize": "200.000"
          }, {
            "id": 3,
            "prize": "300.000"
          }, {
            "id": 4,
            "prize": "400.000"
          }, {
            "id": 5,
            "prize": "500.000"
          }, {
            "id": 6,
            "prize": "1.000.000"
          }, {
            "id": 7,
            "prize": "2.000.000"
          }, {
            "id": 8,
            "prize": "3.000.000"
          }, {
            "id": 9,
            "prize": "4.000.000"
          }, {
            "id": 90,
            "prize": "4.000.000"
          }, {
            "id": 10,
            "prize": "5.000.000"
          }, {
            "id": 11,
            "prize": "10.000.000"
          }, {
            "id": 12,
            "prize": "Mercedes GLC 300"
          }, {
            "id": 13,
            "prize": "SH 150I"
          }, {
            "id": 14,
            "prize": "Iphone"
          }, {
            "id": 30,
            "prize": "+3 "
          }], [{
            "id": 6,
            "prize": 100
          }, {
            "id": 2,
            "prize": 2
          }, {
            "id": 5,
            "prize": 20
          }, {
            "id": 3,
            "prize": 5
          }, {
            "id": 4,
            "prize": 10
          }, {
            "id": 1,
            "prize": 1
          }]];
          _initializerDefineProperty(_this, "rewardNode", _descriptor4, _assertThisInitialized(_this));
          _this.circleRadius = 260;
          _this.arrID = [];
          _initializerDefineProperty(_this, "nodeNotify", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblNamereward", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "imgWin", _descriptor7, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = PopupVipWheel.prototype;
        _proto.start = function start() {
          var _this2 = this;
          Http.get(Configs.App.DOMAIN_CONFIG['VQMM_GetTurnUrl'], {
            type: 1
          }, function (status, res) {
            try {
              log(JSON.stringify(res));
              // App.instance.alertDialog.showMsg(status);

              if (status === 200 && res.c == 0) {
                if (+(res == null ? void 0 : res.d) > 0) {
                  _this2.lblDoneNumber.string = res == null ? void 0 : res.d.toString();
                } else {
                  _this2.lblDoneNumber.string = "0";
                }
                var arr = res.m.split(";").map(Number);
                log("arrwheel" + JSON.stringify(arr));
                _this2.mapPrizeData(arr);
                _this2.arrID = arr;
                // Find the position of the number 3
              }

              _this2.isSpinning = false;
              App.instance.showLoading(false);
            } catch (error) {
              // App.instance.showLoading(false);
              // App.instance.alertDialog.showMsg(App.instance.getTextLang("ca-10000"));
            }
          });
        };
        _proto.mapPrizeData = function mapPrizeData(arr) {
          var _this3 = this;
          log(arr);
          var data = [].concat(arr).reverse();
          var _loop = function _loop(index) {
              var imageNode = _this3.wheel3.children[_this3.wheel3.children.length - 1 - index]; // Lấy Node ảnh tại vị trí tương ứng
              if (!imageNode) return {
                v: void 0
              };
              var spriteComponent = imageNode.getComponent(Sprite);
              sprite = _this3.rewardNode.children.find(function (img) {
                return img.name === "lucky-vip-" + data[index];
              });
              if (LanguageManager.instance.locale == "vi" && (data[index] == 12 || data[index] == 30)) {
                sprite = _this3.rewardNode.children.find(function (img) {
                  return img.name === "lucky-vip-" + data[index] + "-vi";
                });
              }
              if (sprite) {
                var _spriteComponent = imageNode.getComponent(Sprite);
                if (_spriteComponent) {
                  _spriteComponent.spriteFrame = sprite.getComponent(Sprite).spriteFrame; // Gán ảnh vào vòng quay
                }
              }
            },
            sprite,
            _ret;
          for (var index = 0; index < data.length; index++) {
            _ret = _loop(index);
            if (_ret) return _ret.v;
          }

          // Sắp xếp lại ảnh trên vòng quay
          this.arrangeImagesInCircle();
        };
        _proto.arrangeImagesInCircle = function arrangeImagesInCircle() {
          var numberOfImages = this.wheel3.children.length; // Số lượng ảnh con
          var angleStep = 360 / numberOfImages;
          for (var i = 0; i < numberOfImages; i++) {
            var imageNode = this.wheel3.children[i]; // Lấy ảnh con thứ i

            // Tính toán góc hiện tại
            var angle = angleStep * i + 15 + 90;

            // Tính toán vị trí dựa trên góc và bán kính
            var radians = misc.degreesToRadians(angle);
            var x = this.circleRadius * Math.cos(radians);
            var y = this.circleRadius * Math.sin(radians);
            imageNode.setPosition(x, y);

            // Xoay ảnh sao cho vector BA hướng về tâm
            imageNode.angle = angle - 90; // +90 để điểm A hướng về tâm
          }
        };

        _proto.dismiss = function dismiss() {
          this.node.destroy();
        };
        _proto.clickHistory = function clickHistory() {
          var _this4 = this;
          var cb = function cb(prefab) {
            var popup = instantiate(prefab).getComponent("PopupHistoryWheel");
            popup.node.parent = App.instance.node;
            popup.setData(_this4, 1);
            popup.show();
          };
          BundleControl.loadPrefabPopup("prefabs/PopupHistoryWheel", cb);
        };
        _proto.clickTutorial = function clickTutorial() {
          // let cb = (prefab) => {
          //     let popup = cc
          //       .instantiate(prefab)
          //       .getComponent("PopupTutorialWheel");
          //     popup.node.parent = App.instance.node;

          //     popup.show();
          //   };
          //   BundleControl.loadPrefabPopup("PrefabPopup/PopupTutorialWheel", cb);
        };
        _proto.actRotate = function actRotate() {
          var _this5 = this;
          this.lblNamereward.string = "";
          App.instance.showLoading(false);
          if (this.lblDoneNumber.string == "0") {
            App.instance.alertDialog.showMsg(App.instance.getTextLang("vqmm6"));
            return;
          }
          if (this.isSpinning) {
            // App.instance.alertDialog.showMsg("Đang quay, vui lòng chờ...");
            return;
          }
          this.isSpinning = true;
          this.wheel1.eulerAngles = new Vec3(0, 0, 0);
          this.wheel3.eulerAngles = new Vec3(0, 0, 0);
          var CurrencyID = Configs.Login.CurrencyID;
          var data = {
            "CurrencyID": CurrencyID,
            "type": 1
          };
          App.instance.showLoading(true);
          Http.post(Configs.App.DOMAIN_CONFIG['VQMM_GetSpinUrl'], data, function (status, res) {
            // App.instance.alertDialog.showMsg(res?.c);

            if (status !== 200 || (res == null ? void 0 : res.c) !== 0) {
              return;
            }
            App.instance.showLoading(false);
            // const item = this.prizes[0].find(p => p.id === res.d.item1ID);
            // log(item.prize);
            var iddd = res.d.item1ID;
            var sprite = _this5.rewardNode.children.find(function (img) {
              return img.name === "lucky-vip-" + iddd;
            });
            if (LanguageManager.instance.locale == "vi" && (iddd == 12 || iddd == 30)) {
              sprite = _this5.rewardNode.children.find(function (img) {
                return img.name === "lucky-vip-" + iddd + "-vi";
              });
            }
            if (iddd < 12) {
              _this5.imgWin.spriteFrame = null; // Gán ảnh vào vòng quay
            } else {
              _this5.imgWin.spriteFrame = sprite.getComponent(Sprite).spriteFrame; // Gán ảnh vào vòng quay
              _this5.imgWin.node.getComponent(UITransform).setContentSize(_this5.imgWin.spriteFrame.originalSize);
            }

            // this.lblNamereward.string = App.instance.getTextLang("sl59")+ ": " +     \
            //       if(iddd == 30){
            //  this.lblNamereward.string  = this.prizes[0].find(p => p.id === iddd).prize  +  App.instance.getTextLang("me41") + " X " +   this.prizes[1].find(item => item.id === res.d.item2ID).prize + " = " + Utils.formatNumber( res.d.prizeValue);
            //       }else{
            if (iddd < 12) {
              var org = _this5.prizes[0].find(function (p) {
                return p.id === iddd;
              }).prize;
              var heso = _this5.prizes[1].find(function (item) {
                return item.id === res.d.item2ID;
              }).prize;
              _this5.lblNamereward.string = org + " X " + heso.toString() + " = " + Utils.formatNumber(res.d.prizeValue);
            }
            //
            //   }

            var rotateToIdx3 = _this5.arrID.indexOf(iddd);
            var rotateToIdx1 = _this5.prizes[1].findIndex(function (item) {
              return item.id === res.d.item2ID;
            });
            var angle1 = -(360 * 8 + (360 - 360 / 6 * rotateToIdx1) - 360 / 6 / 2);
            tween(_this5.wheel1).to(14, {
              eulerAngles: new Vec3(0, 0, angle1)
            }, {
              easing: 'sineInOut'
            }).delay(1).call(function () {
              var _res$d;
              _this5.lblDoneNumber.string = (_res$d = res.d) == null ? void 0 : _res$d.spinBalance.toString();
              BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);
              _this5.nodeNotify.active = true;
            }).delay(4).call(function () {
              _this5.nodeNotify.active = false;
              _this5.isSpinning = false;
            }).start();

            // Wheel3: Sequence tween
            var angle3 = 360 * 4 + 360 / 12 * rotateToIdx3 + 360 / 12 / 2;
            tween(_this5.wheel3).delay(0.25).to(7, {
              eulerAngles: new Vec3(0, 0, -angle3)
            }, {
              easing: 'sineInOut'
            }) // âm nếu quay ngược
            .start();
          });
        };
        return PopupVipWheel;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "wheel3", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "wheel1", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "lblDoneNumber", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "rewardNode", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "nodeNotify", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "lblNamereward", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "imgWin", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PulseScale.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, v3, tween, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      v3 = module.v3;
      tween = module.tween;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _class, _class2, _descriptor, _descriptor2, _descriptor3;
      cclegacy._RF.push({}, "e8c5fsxWcNFZIcOJrjS+9Uv", "PulseScale", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var PulseScale = exports('default', (_dec = ccclass('PulseScale'), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(PulseScale, _Component);
        function PulseScale() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "minScale", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "maxScale", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "duration", _descriptor3, _assertThisInitialized(_this));
          _this._tempScale = v3();
          return _this;
        }
        var _proto = PulseScale.prototype;
        _proto.onLoad = function onLoad() {
          this.startPulse();
        };
        _proto.startPulse = function startPulse() {
          var _this2 = this;
          tween(this._tempScale).repeatForever(tween().to(this.duration, v3(this.maxScale, this.maxScale, 1), {
            easing: 'sineOut',
            onUpdate: function onUpdate(target) {
              _this2.node.setScale(target);
            }
          }).to(this.duration, v3(this.minScale, this.minScale, 1), {
            easing: 'sineIn',
            onUpdate: function onUpdate(target) {
              _this2.node.setScale(target);
            }
          })).start();
        };
        return PulseScale;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "minScale", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0.9;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "maxScale", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 1.1;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "duration", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0.3;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/QR8bitByte.ts", ['cc', './QRConst.ts'], function (exports) {
  var cclegacy, QRMode;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      QRMode = module.QRMode;
    }],
    execute: function () {
      cclegacy._RF.push({}, "6cc9evYOKtLnbOUsaE4b7TY", "QR8bitByte", undefined); //---------------------------------------------------------------------
      var QR8bitByte = exports('QR8bitByte', /*#__PURE__*/function () {
        function QR8bitByte(data) {
          this.mode = void 0;
          this.mode = QRMode.MODE_8BIT_BYTE;
          this.data = data;
        }
        var _proto = QR8bitByte.prototype;
        _proto.getLength = function getLength(buffer) {
          return this.data.length;
        };
        _proto.write = function write(buffer) {
          for (var i = 0; i < this.data.length; i++) {
            // not JIS ...
            buffer.put(this.data.charCodeAt(i), 8);
          }
        };
        return QR8bitByte;
      }());
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/QRBitBuffer.ts", ['cc'], function (exports) {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "4aba720e+xJEI4u/b7dABhO", "QRBitBuffer", undefined); //---------------------------------------------------------------------
      // QRBitBuffer
      //---------------------------------------------------------------------
      var QRBitBuffer = exports('QRBitBuffer', /*#__PURE__*/function () {
        function QRBitBuffer() {
          this.buffer = void 0;
          this.length = 0;
          this.buffer = new Array();
          this.length = 0;
        }
        var _proto = QRBitBuffer.prototype;
        _proto.get = function get(index) {
          var bufIndex = Math.floor(index / 8);
          return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;
        };
        _proto.put = function put(num, length) {
          for (var i = 0; i < length; i++) {
            this.putBit((num >>> length - i - 1 & 1) == 1);
          }
        };
        _proto.getLengthInBits = function getLengthInBits() {
          return this.length;
        };
        _proto.putBit = function putBit(bit) {
          var bufIndex = Math.floor(this.length / 8);
          if (this.buffer.length <= bufIndex) {
            this.buffer.push(0);
          }
          if (bit) {
            this.buffer[bufIndex] |= 0x80 >>> this.length % 8;
          }
          this.length++;
        };
        return QRBitBuffer;
      }());
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/QRCode.ts", ['cc', './QR8bitByte.ts', './QRBitBuffer.ts', './QRPolynomial.ts', './QRRSBlock.ts', './QRUtil.ts'], function (exports) {
  var cclegacy, QR8bitByte, QRBitBuffer, QRPolynomial, QRRSBlock, QRUtil;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      QR8bitByte = module.QR8bitByte;
    }, function (module) {
      QRBitBuffer = module.QRBitBuffer;
    }, function (module) {
      QRPolynomial = module.QRPolynomial;
    }, function (module) {
      QRRSBlock = module.QRRSBlock;
    }, function (module) {
      QRUtil = module.QRUtil;
    }],
    execute: function () {
      cclegacy._RF.push({}, "926fe//EXRKC6E8FmsvJhFI", "QRCode", undefined);

      //---------------------------------------------------------------------
      // QRCode
      //---------------------------------------------------------------------

      var QRCode = exports('QRCode', /*#__PURE__*/function () {
        function QRCode(typeNumber, errorCorrectLevel) {
          this.typeNumber = void 0;
          this.errorCorrectLevel = void 0;
          this.modules = [];
          this.moduleCount = void 0;
          this.dataCache = void 0;
          this.dataList = void 0;
          this.typeNumber = typeNumber;
          this.errorCorrectLevel = errorCorrectLevel;
          this.modules = [];
          this.moduleCount = 0;
          this.dataCache = null;
          this.dataList = new Array();
        }
        var _proto = QRCode.prototype;
        _proto.addData = function addData(data) {
          var newData = new QR8bitByte(data);
          this.dataList.push(newData);
          this.dataCache = null;
        };
        _proto.isDark = function isDark(row, col) {
          if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {
            throw new Error(row + "," + col);
          }
          return this.modules[row][col];
        };
        _proto.getModuleCount = function getModuleCount() {
          return this.moduleCount;
        };
        _proto.make = function make() {
          // Calculate automatically typeNumber if provided is < 1
          if (this.typeNumber < 1) {
            var typeNumber = 1;
            for (typeNumber = 1; typeNumber < 40; typeNumber++) {
              var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);
              var buffer = new QRBitBuffer();
              var totalDataCount = 0;
              for (var i = 0; i < rsBlocks.length; i++) {
                totalDataCount += rsBlocks[i].dataCount;
              }
              for (var i = 0; i < this.dataList.length; i++) {
                var data = this.dataList[i];
                buffer.put(data.mode, 4);
                buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));
                data.write(buffer);
              }
              if (buffer.getLengthInBits() <= totalDataCount * 8) break;
            }
            this.typeNumber = typeNumber;
          }
          this.makeImpl(false, this.getBestMaskPattern());
        };
        _proto.makeImpl = function makeImpl(test, maskPattern) {
          this.moduleCount = this.typeNumber * 4 + 17;
          this.modules = new Array(this.moduleCount);
          for (var row = 0; row < this.moduleCount; row++) {
            this.modules[row] = new Array(this.moduleCount);
            for (var col = 0; col < this.moduleCount; col++) {
              this.modules[row][col] = null; //(col + row) % 3;
            }
          }

          this.setupPositionProbePattern(0, 0);
          this.setupPositionProbePattern(this.moduleCount - 7, 0);
          this.setupPositionProbePattern(0, this.moduleCount - 7);
          this.setupPositionAdjustPattern();
          this.setupTimingPattern();
          this.setupTypeInfo(test, maskPattern);
          if (this.typeNumber >= 7) {
            this.setupTypeNumber(test);
          }
          if (this.dataCache == null) {
            this.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);
          }
          this.mapData(this.dataCache, maskPattern);
        };
        _proto.setupPositionProbePattern = function setupPositionProbePattern(row, col) {
          for (var r = -1; r <= 7; r++) {
            if (row + r <= -1 || this.moduleCount <= row + r) continue;
            for (var c = -1; c <= 7; c++) {
              if (col + c <= -1 || this.moduleCount <= col + c) continue;
              if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {
                this.modules[row + r][col + c] = true;
              } else {
                this.modules[row + r][col + c] = false;
              }
            }
          }
        };
        _proto.getBestMaskPattern = function getBestMaskPattern() {
          var minLostPoint = 0;
          var pattern = 0;
          for (var i = 0; i < 8; i++) {
            this.makeImpl(true, i);
            var lostPoint = QRUtil.getLostPoint(this);
            if (i == 0 || minLostPoint > lostPoint) {
              minLostPoint = lostPoint;
              pattern = i;
            }
          }
          return pattern;
        }

        // createMovieClip (target_mc, instance_name, depth) {

        // 	var qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);
        // 	var cs = 1;

        // 	this.make();

        // 	for (var row = 0; row < this.modules.length; row++) {

        // 		var y = row * cs;

        // 		for (var col = 0; col < this.modules[row].length; col++) {

        // 			var x = col * cs;
        // 			var dark = this.modules[row][col];

        // 			if (dark) {
        // 				qr_mc.beginFill(0, 100);
        // 				qr_mc.moveTo(x, y);
        // 				qr_mc.lineTo(x + cs, y);
        // 				qr_mc.lineTo(x + cs, y + cs);
        // 				qr_mc.lineTo(x, y + cs);
        // 				qr_mc.endFill();
        // 			}
        // 		}
        // 	}

        // 	return qr_mc;
        // }
        ;

        _proto.setupTimingPattern = function setupTimingPattern() {
          for (var r = 8; r < this.moduleCount - 8; r++) {
            if (this.modules[r][6] != null) {
              continue;
            }
            this.modules[r][6] = r % 2 == 0;
          }
          for (var c = 8; c < this.moduleCount - 8; c++) {
            if (this.modules[6][c] != null) {
              continue;
            }
            this.modules[6][c] = c % 2 == 0;
          }
        };
        _proto.setupPositionAdjustPattern = function setupPositionAdjustPattern() {
          var pos = QRUtil.getPatternPosition(this.typeNumber);
          for (var i = 0; i < pos.length; i++) {
            for (var j = 0; j < pos.length; j++) {
              var row = pos[i];
              var col = pos[j];
              if (this.modules[row][col] != null) {
                continue;
              }
              for (var r = -2; r <= 2; r++) {
                for (var c = -2; c <= 2; c++) {
                  if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {
                    this.modules[row + r][col + c] = true;
                  } else {
                    this.modules[row + r][col + c] = false;
                  }
                }
              }
            }
          }
        };
        _proto.setupTypeNumber = function setupTypeNumber(test) {
          var bits = QRUtil.getBCHTypeNumber(this.typeNumber);
          for (var i = 0; i < 18; i++) {
            var mod = !test && (bits >> i & 1) == 1;
            this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;
          }
          for (var i = 0; i < 18; i++) {
            var mod = !test && (bits >> i & 1) == 1;
            this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;
          }
        };
        _proto.setupTypeInfo = function setupTypeInfo(test, maskPattern) {
          var data = this.errorCorrectLevel << 3 | maskPattern;
          var bits = QRUtil.getBCHTypeInfo(data);

          // vertical		
          for (var i = 0; i < 15; i++) {
            var mod = !test && (bits >> i & 1) == 1;
            if (i < 6) {
              this.modules[i][8] = mod;
            } else if (i < 8) {
              this.modules[i + 1][8] = mod;
            } else {
              this.modules[this.moduleCount - 15 + i][8] = mod;
            }
          }

          // horizontal
          for (var i = 0; i < 15; i++) {
            var mod = !test && (bits >> i & 1) == 1;
            if (i < 8) {
              this.modules[8][this.moduleCount - i - 1] = mod;
            } else if (i < 9) {
              this.modules[8][15 - i - 1 + 1] = mod;
            } else {
              this.modules[8][15 - i - 1] = mod;
            }
          }

          // fixed module
          this.modules[this.moduleCount - 8][8] = !test;
        };
        _proto.mapData = function mapData(data, maskPattern) {
          var inc = -1;
          var row = this.moduleCount - 1;
          var bitIndex = 7;
          var byteIndex = 0;
          for (var col = this.moduleCount - 1; col > 0; col -= 2) {
            if (col == 6) col--;
            while (true) {
              for (var c = 0; c < 2; c++) {
                if (this.modules[row][col - c] == null) {
                  var dark = false;
                  if (byteIndex < data.length) {
                    dark = (data[byteIndex] >>> bitIndex & 1) == 1;
                  }
                  var mask = QRUtil.getMask(maskPattern, row, col - c);
                  if (mask) {
                    dark = !dark;
                  }
                  this.modules[row][col - c] = dark;
                  bitIndex--;
                  if (bitIndex == -1) {
                    byteIndex++;
                    bitIndex = 7;
                  }
                }
              }
              row += inc;
              if (row < 0 || this.moduleCount <= row) {
                row -= inc;
                inc = -inc;
                break;
              }
            }
          }
        };
        QRCode.createData = function createData(typeNumber, errorCorrectLevel, dataList) {
          var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);
          var buffer = new QRBitBuffer();
          for (var i = 0; i < dataList.length; i++) {
            var data = dataList[i];
            buffer.put(data.mode, 4);
            buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));
            data.write(buffer);
          }

          // calc num max data.
          var totalDataCount = 0;
          for (var i = 0; i < rsBlocks.length; i++) {
            totalDataCount += rsBlocks[i].dataCount;
          }
          if (buffer.getLengthInBits() > totalDataCount * 8) {
            throw new Error("code length overflow. (" + buffer.getLengthInBits() + ">" + totalDataCount * 8 + ")");
          }

          // end code
          if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {
            buffer.put(0, 4);
          }

          // padding
          while (buffer.getLengthInBits() % 8 != 0) {
            buffer.putBit(false);
          }

          // padding
          while (true) {
            if (buffer.getLengthInBits() >= totalDataCount * 8) {
              break;
            }
            buffer.put(QRCode.PAD0, 8);
            if (buffer.getLengthInBits() >= totalDataCount * 8) {
              break;
            }
            buffer.put(QRCode.PAD1, 8);
          }
          return QRCode.createBytes(buffer, rsBlocks);
        };
        return QRCode;
      }());
      QRCode.PAD0 = 0xEC;
      QRCode.PAD1 = 0x11;
      QRCode.createBytes = function (buffer, rsBlocks) {
        var offset = 0;
        var maxDcCount = 0;
        var maxEcCount = 0;
        var dcdata = new Array(rsBlocks.length);
        var ecdata = new Array(rsBlocks.length);
        for (var r = 0; r < rsBlocks.length; r++) {
          var dcCount = rsBlocks[r].dataCount;
          var ecCount = rsBlocks[r].totalCount - dcCount;
          maxDcCount = Math.max(maxDcCount, dcCount);
          maxEcCount = Math.max(maxEcCount, ecCount);
          dcdata[r] = new Array(dcCount);
          for (var i = 0; i < dcdata[r].length; i++) {
            dcdata[r][i] = 0xff & buffer.buffer[i + offset];
          }
          offset += dcCount;
          var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);
          var rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);
          var modPoly = rawPoly.mod(rsPoly);
          ecdata[r] = new Array(rsPoly.getLength() - 1);
          for (var i = 0; i < ecdata[r].length; i++) {
            var modIndex = i + modPoly.getLength() - ecdata[r].length;
            ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;
          }
        }
        var totalCodeCount = 0;
        for (var i = 0; i < rsBlocks.length; i++) {
          totalCodeCount += rsBlocks[i].totalCount;
        }
        var data = new Array(totalCodeCount);
        var index = 0;
        for (var i = 0; i < maxDcCount; i++) {
          for (var r = 0; r < rsBlocks.length; r++) {
            if (i < dcdata[r].length) {
              data[index++] = dcdata[r][i];
            }
          }
        }
        for (var i = 0; i < maxEcCount; i++) {
          for (var r = 0; r < rsBlocks.length; r++) {
            if (i < ecdata[r].length) {
              data[index++] = ecdata[r][i];
            }
          }
        }
        return data;
      };
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/QRCodeScene.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './TwoInviteQRCodePrefab.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Prefab, instantiate, Component, TwoInviteQRCodePrefab;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Prefab = module.Prefab;
      instantiate = module.instantiate;
      Component = module.Component;
    }, function (module) {
      TwoInviteQRCodePrefab = module.TwoInviteQRCodePrefab;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;
      cclegacy._RF.push({}, "908e95qW79Nmr60HCBlTU91", "QRCodeScene", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var QRCodeScene = exports('QRCodeScene', (_dec = ccclass('QRCodeScene'), _dec2 = property(Prefab), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(QRCodeScene, _Component);
        function QRCodeScene() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "invitePrefab", _descriptor, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = QRCodeScene.prototype;
        _proto.setURL = function setURL(url) {
          var inviteView = instantiate(this.invitePrefab);
          inviteView.getComponent(TwoInviteQRCodePrefab).setURL(url);
          this.node.addChild(inviteView);
        };
        _proto.update = function update(deltaTime) {};
        return QRCodeScene;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "invitePrefab", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/QRConst.ts", ['cc'], function (exports) {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "c219d6vQlVMp4dqUdh6cmmp", "QRConst", undefined);
      //---------------------------------------------------------------------
      // QRMode
      //---------------------------------------------------------------------

      var QRMode = exports('QRMode', /*#__PURE__*/function (QRMode) {
        QRMode[QRMode["MODE_NUMBER"] = 1] = "MODE_NUMBER";
        QRMode[QRMode["MODE_ALPHA_NUM"] = 2] = "MODE_ALPHA_NUM";
        QRMode[QRMode["MODE_8BIT_BYTE"] = 4] = "MODE_8BIT_BYTE";
        QRMode[QRMode["MODE_KANJI"] = 8] = "MODE_KANJI";
        return QRMode;
      }({}));

      //---------------------------------------------------------------------
      // QRErrorCorrectLevel
      //---------------------------------------------------------------------

      var QRErrorCorrectLevel = exports('QRErrorCorrectLevel', /*#__PURE__*/function (QRErrorCorrectLevel) {
        QRErrorCorrectLevel[QRErrorCorrectLevel["L"] = 1] = "L";
        QRErrorCorrectLevel[QRErrorCorrectLevel["M"] = 0] = "M";
        QRErrorCorrectLevel[QRErrorCorrectLevel["Q"] = 3] = "Q";
        QRErrorCorrectLevel[QRErrorCorrectLevel["H"] = 2] = "H";
        return QRErrorCorrectLevel;
      }({}));

      //---------------------------------------------------------------------
      // QRMaskPattern
      //---------------------------------------------------------------------

      var QRMaskPattern = exports('QRMaskPattern', /*#__PURE__*/function (QRMaskPattern) {
        QRMaskPattern[QRMaskPattern["PATTERN000"] = 0] = "PATTERN000";
        QRMaskPattern[QRMaskPattern["PATTERN001"] = 1] = "PATTERN001";
        QRMaskPattern[QRMaskPattern["PATTERN010"] = 2] = "PATTERN010";
        QRMaskPattern[QRMaskPattern["PATTERN011"] = 3] = "PATTERN011";
        QRMaskPattern[QRMaskPattern["PATTERN100"] = 4] = "PATTERN100";
        QRMaskPattern[QRMaskPattern["PATTERN101"] = 5] = "PATTERN101";
        QRMaskPattern[QRMaskPattern["PATTERN110"] = 6] = "PATTERN110";
        QRMaskPattern[QRMaskPattern["PATTERN111"] = 7] = "PATTERN111";
        return QRMaskPattern;
      }({}));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/QRMath.ts", ['cc'], function (exports) {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "4e7a074Pu5Av5C54F/gdS4j", "QRMath", undefined);
      //---------------------------------------------------------------------
      // QRMath
      //---------------------------------------------------------------------

      var QRMath = exports('QRMath', /*#__PURE__*/function () {
        function QRMath() {}
        QRMath.glog = function glog(n) {
          if (n < 1) {
            throw new Error("glog(" + n + ")");
          }
          return QRMath.LOG_TABLE[n];
        };
        QRMath.gexp = function gexp(n) {
          while (n < 0) {
            n += 255;
          }
          while (n >= 256) {
            n -= 255;
          }
          return QRMath.EXP_TABLE[n];
        };
        return QRMath;
      }());
      QRMath.EXP_TABLE = new Array(256);
      QRMath.LOG_TABLE = new Array(256);
      for (var i = 0; i < 8; i++) {
        QRMath.EXP_TABLE[i] = 1 << i;
      }
      for (var i = 8; i < 256; i++) {
        QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];
      }
      for (var i = 0; i < 255; i++) {
        QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;
      }
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/QRNode.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './QRCode.ts', './QRConst.ts'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, Graphics, Color, UITransform, Component, QRCode, QRErrorCorrectLevel;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Graphics = module.Graphics;
      Color = module.Color;
      UITransform = module.UITransform;
      Component = module.Component;
    }, function (module) {
      QRCode = module.QRCode;
    }, function (module) {
      QRErrorCorrectLevel = module.QRErrorCorrectLevel;
    }],
    execute: function () {
      var _dec, _class;
      cclegacy._RF.push({}, "94f5fkaCvVElpAa97QM/vG6", "QRNode", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var QRTTT = exports('default', (_dec = ccclass('QRTTT'), _dec(_class = /*#__PURE__*/function (_Component) {
        _inheritsLoose(QRTTT, _Component);
        function QRTTT() {
          return _Component.apply(this, arguments) || this;
        }
        var _proto = QRTTT.prototype;
        _proto.start = function start() {
          var node = this.node;
          var qrcode = new QRCode(-1, QRErrorCorrectLevel.L);
          qrcode.addData('https://forum.cocos.org/u/firewoof');
          qrcode.make();
          var ctx = node.getComponent(Graphics);
          ctx.fillColor = Color.WHITE;
          var tileW = node.getComponent(UITransform).width / qrcode.getModuleCount();
          var tileH = node.getComponent(UITransform).height / qrcode.getModuleCount();

          // draw in the Graphics
          for (var row = 0; row < qrcode.getModuleCount(); row++) {
            for (var col = 0; col < qrcode.getModuleCount(); col++) {
              if (qrcode.isDark(row, col)) {
                var w = Math.ceil((col + 1) * tileW) - Math.floor(col * tileW);
                var h = Math.ceil((row + 1) * tileW) - Math.floor(row * tileW);
                ctx.rect(Math.round(col * tileW), Math.round(row * tileH), w, h);
                ctx.fill();
              }
              var w = Math.ceil((col + 1) * tileW) - Math.floor(col * tileW);
            }
          }
        };
        return QRTTT;
      }(Component)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/QRPolynomial.ts", ['cc', './QRMath.ts'], function (exports) {
  var cclegacy, QRMath;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      QRMath = module.QRMath;
    }],
    execute: function () {
      cclegacy._RF.push({}, "6558bfY2g1FtrJGplX49t9R", "QRPolynomial", undefined);

      //---------------------------------------------------------------------
      var QRPolynomial = exports('QRPolynomial', /*#__PURE__*/function () {
        function QRPolynomial(num, shift) {
          this.num = void 0;
          if (num.length == undefined) {
            throw new Error(num.length + "/" + shift);
          }
          var offset = 0;
          while (offset < num.length && num[offset] == 0) {
            offset++;
          }
          this.num = new Array(num.length - offset + shift);
          for (var i = 0; i < num.length - offset; i++) {
            this.num[i] = num[i + offset];
          }
        }
        var _proto = QRPolynomial.prototype;
        _proto.get = function get(index) {
          return this.num[index];
        };
        _proto.getLength = function getLength() {
          return this.num.length;
        };
        _proto.multiply = function multiply(e) {
          var num = new Array(this.getLength() + e.getLength() - 1);
          for (var i = 0; i < this.getLength(); i++) {
            for (var j = 0; j < e.getLength(); j++) {
              num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));
            }
          }
          return new QRPolynomial(num, 0);
        };
        _proto.mod = function mod(e) {
          if (this.getLength() - e.getLength() < 0) {
            return this;
          }
          var ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));
          var num = new Array(this.getLength());
          for (var i = 0; i < this.getLength(); i++) {
            num[i] = this.get(i);
          }
          for (var i = 0; i < e.getLength(); i++) {
            num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);
          }

          // recursive call
          return new QRPolynomial(num, 0).mod(e);
        };
        return QRPolynomial;
      }());
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/QRRSBlock.ts", ['cc', './QRConst.ts'], function (exports) {
  var cclegacy, QRErrorCorrectLevel;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      QRErrorCorrectLevel = module.QRErrorCorrectLevel;
    }],
    execute: function () {
      var _class;
      cclegacy._RF.push({}, "8b5644dsVhD1ZfFXvaoWjTh", "QRRSBlock", undefined);

      //---------------------------------------------------------------------
      var QRRSBlock = exports('QRRSBlock', /*#__PURE__*/function () {
        function QRRSBlock(totalCount, dataCount) {
          this.totalCount = 0;
          this.dataCount = 0;
          this.totalCount = totalCount;
          this.dataCount = dataCount;
        }
        QRRSBlock.getRsBlockTable = function getRsBlockTable(typeNumber, errorCorrectLevel) {
          switch (errorCorrectLevel) {
            case QRErrorCorrectLevel.L:
              return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];
            case QRErrorCorrectLevel.M:
              return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];
            case QRErrorCorrectLevel.Q:
              return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];
            case QRErrorCorrectLevel.H:
              return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];
            default:
              return undefined;
          }
        };
        return QRRSBlock;
      }());
      _class = QRRSBlock;
      QRRSBlock.RS_BLOCK_TABLE = [
      // L
      // M
      // Q
      // H

      // 1
      [1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9],
      // 2
      [1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16],
      // 3
      [1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13],
      // 4		
      [1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9],
      // 5
      [1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12],
      // 6
      [2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15],
      // 7		
      [2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14],
      // 8
      [2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15],
      // 9
      [2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13],
      // 10		
      [2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16],
      // 11
      [4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13],
      // 12
      [2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15],
      // 13
      [4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12],
      // 14
      [3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13],
      // 15
      [5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12],
      // 16
      [5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16],
      // 17
      [1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15],
      // 18
      [5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15],
      // 19
      [3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14],
      // 20
      [3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16],
      // 21
      [4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17],
      // 22
      [2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13],
      // 23
      [4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16],
      // 24
      [6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17],
      // 25
      [8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16],
      // 26
      [10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17],
      // 27
      [8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16],
      // 28
      [3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16],
      // 29
      [7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16],
      // 30
      [5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16],
      // 31
      [13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16],
      // 32
      [17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16],
      // 33
      [17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16],
      // 34
      [13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17],
      // 35
      [12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16],
      // 36
      [6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16],
      // 37
      [17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16],
      // 38
      [4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16],
      // 39
      [20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16],
      // 40
      [19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]];
      QRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {
        var rsBlock = _class.getRsBlockTable(typeNumber, errorCorrectLevel);
        if (rsBlock == undefined) {
          throw new Error("bad rs block @ typeNumber:" + typeNumber + "/errorCorrectLevel:" + errorCorrectLevel);
        }
        var length = rsBlock.length / 3;
        var list = new Array();
        for (var i = 0; i < length; i++) {
          var count = rsBlock[i * 3 + 0];
          var totalCount = rsBlock[i * 3 + 1];
          var dataCount = rsBlock[i * 3 + 2];
          for (var j = 0; j < count; j++) {
            list.push(new _class(totalCount, dataCount));
          }
        }
        return list;
      };
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/QRUtil.ts", ['cc', './QRConst.ts', './QRMath.ts', './QRPolynomial.ts'], function (exports) {
  var cclegacy, QRMaskPattern, QRMode, QRMath, QRPolynomial;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      QRMaskPattern = module.QRMaskPattern;
      QRMode = module.QRMode;
    }, function (module) {
      QRMath = module.QRMath;
    }, function (module) {
      QRPolynomial = module.QRPolynomial;
    }],
    execute: function () {
      cclegacy._RF.push({}, "72bdf3VSUlLTIydYv5qVgeV", "QRUtil", undefined); //---------------------------------------------------------------------
      var QRUtil = exports('QRUtil', /*#__PURE__*/function () {
        function QRUtil() {}
        QRUtil.getBCHTypeInfo = function getBCHTypeInfo(data) {
          var d = data << 10;
          while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {
            d ^= QRUtil.G15 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15);
          }
          return (data << 10 | d) ^ QRUtil.G15_MASK;
        };
        QRUtil.getBCHTypeNumber = function getBCHTypeNumber(data) {
          var d = data << 12;
          while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {
            d ^= QRUtil.G18 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18);
          }
          return data << 12 | d;
        };
        QRUtil.getBCHDigit = function getBCHDigit(data) {
          var digit = 0;
          while (data != 0) {
            digit++;
            data >>>= 1;
          }
          return digit;
        };
        QRUtil.getPatternPosition = function getPatternPosition(typeNumber) {
          return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];
        };
        QRUtil.getMask = function getMask(maskPattern, i, j) {
          switch (maskPattern) {
            case QRMaskPattern.PATTERN000:
              return (i + j) % 2 == 0;
            case QRMaskPattern.PATTERN001:
              return i % 2 == 0;
            case QRMaskPattern.PATTERN010:
              return j % 3 == 0;
            case QRMaskPattern.PATTERN011:
              return (i + j) % 3 == 0;
            case QRMaskPattern.PATTERN100:
              return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;
            case QRMaskPattern.PATTERN101:
              return i * j % 2 + i * j % 3 == 0;
            case QRMaskPattern.PATTERN110:
              return (i * j % 2 + i * j % 3) % 2 == 0;
            case QRMaskPattern.PATTERN111:
              return (i * j % 3 + (i + j) % 2) % 2 == 0;
            default:
              throw new Error("bad maskPattern:" + maskPattern);
          }
        };
        QRUtil.getErrorCorrectPolynomial = function getErrorCorrectPolynomial(errorCorrectLength) {
          var a = new QRPolynomial([1], 0);
          for (var i = 0; i < errorCorrectLength; i++) {
            a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));
          }
          return a;
        };
        QRUtil.getLengthInBits = function getLengthInBits(mode, type) {
          if (1 <= type && type < 10) {
            // 1 - 9

            switch (mode) {
              case QRMode.MODE_NUMBER:
                return 10;
              case QRMode.MODE_ALPHA_NUM:
                return 9;
              case QRMode.MODE_8BIT_BYTE:
                return 8;
              case QRMode.MODE_KANJI:
                return 8;
              default:
                throw new Error("mode:" + mode);
            }
          } else if (type < 27) {
            // 10 - 26

            switch (mode) {
              case QRMode.MODE_NUMBER:
                return 12;
              case QRMode.MODE_ALPHA_NUM:
                return 11;
              case QRMode.MODE_8BIT_BYTE:
                return 16;
              case QRMode.MODE_KANJI:
                return 10;
              default:
                throw new Error("mode:" + mode);
            }
          } else if (type < 41) {
            // 27 - 40

            switch (mode) {
              case QRMode.MODE_NUMBER:
                return 14;
              case QRMode.MODE_ALPHA_NUM:
                return 13;
              case QRMode.MODE_8BIT_BYTE:
                return 16;
              case QRMode.MODE_KANJI:
                return 12;
              default:
                throw new Error("mode:" + mode);
            }
          } else {
            throw new Error("type:" + type);
          }
        };
        QRUtil.getLostPoint = function getLostPoint(qrCode) {
          var moduleCount = qrCode.getModuleCount();
          var lostPoint = 0;

          // LEVEL1

          for (var row = 0; row < moduleCount; row++) {
            for (var col = 0; col < moduleCount; col++) {
              var sameCount = 0;
              var dark = qrCode.isDark(row, col);
              for (var r = -1; r <= 1; r++) {
                if (row + r < 0 || moduleCount <= row + r) {
                  continue;
                }
                for (var c = -1; c <= 1; c++) {
                  if (col + c < 0 || moduleCount <= col + c) {
                    continue;
                  }
                  if (r == 0 && c == 0) {
                    continue;
                  }
                  if (dark == qrCode.isDark(row + r, col + c)) {
                    sameCount++;
                  }
                }
              }
              if (sameCount > 5) {
                lostPoint += 3 + sameCount - 5;
              }
            }
          }

          // LEVEL2

          for (var row = 0; row < moduleCount - 1; row++) {
            for (var col = 0; col < moduleCount - 1; col++) {
              var count = 0;
              if (qrCode.isDark(row, col)) count++;
              if (qrCode.isDark(row + 1, col)) count++;
              if (qrCode.isDark(row, col + 1)) count++;
              if (qrCode.isDark(row + 1, col + 1)) count++;
              if (count == 0 || count == 4) {
                lostPoint += 3;
              }
            }
          }

          // LEVEL3

          for (var row = 0; row < moduleCount; row++) {
            for (var col = 0; col < moduleCount - 6; col++) {
              if (qrCode.isDark(row, col) && !qrCode.isDark(row, col + 1) && qrCode.isDark(row, col + 2) && qrCode.isDark(row, col + 3) && qrCode.isDark(row, col + 4) && !qrCode.isDark(row, col + 5) && qrCode.isDark(row, col + 6)) {
                lostPoint += 40;
              }
            }
          }
          for (var col = 0; col < moduleCount; col++) {
            for (var row = 0; row < moduleCount - 6; row++) {
              if (qrCode.isDark(row, col) && !qrCode.isDark(row + 1, col) && qrCode.isDark(row + 2, col) && qrCode.isDark(row + 3, col) && qrCode.isDark(row + 4, col) && !qrCode.isDark(row + 5, col) && qrCode.isDark(row + 6, col)) {
                lostPoint += 40;
              }
            }
          }

          // LEVEL4

          var darkCount = 0;
          for (var col = 0; col < moduleCount; col++) {
            for (var row = 0; row < moduleCount; row++) {
              if (qrCode.isDark(row, col)) {
                darkCount++;
              }
            }
          }
          var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;
          lostPoint += ratio * 10;
          return lostPoint;
        };
        return QRUtil;
      }());
      QRUtil.PATTERN_POSITION_TABLE = [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]];
      QRUtil.G15 = 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0;
      QRUtil.G18 = 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0;
      QRUtil.G15_MASK = 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Random.ts", ['cc'], function (exports) {
  var cclegacy, _decorator;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
    }],
    execute: function () {
      var _dec, _class;
      cclegacy._RF.push({}, "91ce7IUkVVEnqpB8EDSDCVI", "Random", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var Random = exports('default', (_dec = ccclass("Random"), _dec(_class = /*#__PURE__*/function () {
        function Random() {}
        Random.range = function range(min, max) {
          return Math.random() * (max - min) + min;
        };
        Random.rangeInt = function rangeInt(min, max) {
          min = Math.ceil(min);
          max = Math.floor(max);
          return Math.floor(Math.random() * (max - min)) + min;
        };
        return Random;
      }()) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/RoomCards.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './BuyChipPoker.ts', './Config.ts', './Casino.PopupRank.ts', './ChatHubSignalRClient.ts', './App.ts', './CardGameSignalRClient.ts', './Utils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, EditBox, Label, instantiate, RichText, log, Component, UIOpacity, BuyChipPoker, Configs, CasinoPopupRank, ChatHubSignalRClient, App, CardGameSignalRClient, Utils;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      EditBox = module.EditBox;
      Label = module.Label;
      instantiate = module.instantiate;
      RichText = module.RichText;
      log = module.log;
      Component = module.Component;
      UIOpacity = module.UIOpacity;
    }, function (module) {
      BuyChipPoker = module.default;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      CasinoPopupRank = module.default;
    }, function (module) {
      ChatHubSignalRClient = module.default;
    }, function (module) {
      App = module.default;
    }, function (module) {
      CardGameSignalRClient = module.default;
    }, function (module) {
      Utils = module.Utils;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _class3;
      cclegacy._RF.push({}, "355aa2dgT1Gxbl7susKuPbL", "RoomCards", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var RoomCards = exports('default', (_dec = property(Node), _dec2 = property([Node]), _dec3 = property(BuyChipPoker), _dec4 = property(Node), _dec5 = property(Node), _dec6 = property(EditBox), _dec7 = property(Label), ccclass(_class = (_class2 = (_class3 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(RoomCards, _Component);
        function RoomCards() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "tabNode", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabContents", _descriptor2, _assertThisInitialized(_this));
          _this.gameID = -1;
          _this.CurrencyID = 1;
          _initializerDefineProperty(_this, "buyChip", _descriptor3, _assertThisInitialized(_this));
          _this.chatChannel = "";
          _initializerDefineProperty(_this, "contentMsg", _descriptor4, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "itemMsg", _descriptor5, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "editBoxChat", _descriptor6, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "lblNamegame", _descriptor7, _assertThisInitialized(_this));
          _this.dictName = {};
          return _this;
        }
        var _proto = RoomCards.prototype;
        _proto.onLoad = function onLoad() {
          this.dictName[Configs.InGameIds.TLMN] = "na3";
          this.dictName[Configs.InGameIds.TLMNSolo] = "na5";
          this.dictName[Configs.InGameIds.SamLoc] = "na4";
          this.dictName[Configs.InGameIds.SamLocSolo] = "na6";
          this.dictName[Configs.InGameIds.BaCay] = "na1";
          this.dictName[Configs.InGameIds.Poker] = "na2";
          this.dictName[Configs.InGameIds.MauBinh] = "na7";
          this.dictName[Configs.InGameIds.Catte] = "na8";
        };
        _proto.setDataRoom = function setDataRoom(gameID) {
          var _this2 = this;
          this.gameID = gameID;
          this.lblNamegame.string = "";
          if (this.dictName[gameID]) {
            this.lblNamegame.string = Configs.InGameIds.getGameName(gameID).toUpperCase();
          }
          this.node.getComponent(CasinoPopupRank).gameId = gameID;
          this.chatChannel = Configs.InGameIds.getChatChannelName(gameID);
          this.contentMsg.removeAllChildren();
          ChatHubSignalRClient.getInstance().registerChat(this.chatChannel, function (_response) {});
          ChatHubSignalRClient.getInstance().receiveChat(function (response) {
            for (var i = 0; i < response.length; i++) {
              var data = response[i];
              if (data.i !== _this2.chatChannel) {
                return;
              }
              _this2.editBoxChat.string = "";
              var item = instantiate(_this2.itemMsg);
              if (data.v >= 6) {
                item.getComponent(RichText).string = "<color=#ffffff>" + data.c + "</color>";
              } else if (data.a + ":" + data.p === Configs.Login.AccountID + ":" + Configs.Login.PortalID) {
                item.getComponent(RichText).string = "<color=#fff600>" + data.n + ": </c><color=#ffffff>" + data.c + "</color>";
              } else {
                item.getComponent(RichText).string = "<color=#3c91e6>" + data.n + ": </c><color=#ffffff>" + data.c + "</color>";
              }
              _this2.contentMsg.addChild(item);
            }
          });
          var _loop = function _loop(index) {
              dataVip = Configs.App.G88_CONFIG["ListRoomVip"][_this2.gameID];
              dataNonal = Configs.App.G88_CONFIG["ListRoomNormal"][_this2.gameID];
              if (dataVip[index].IsLock) {
                _this2.tabContents[0].children[index].getComponent(UIOpacity).opacity = 130;
              } else {
                _this2.tabContents[0].children[index].on("click", function () {
                  log(dataVip[index].Value);
                  _this2.actJoinRoom(dataVip[index].Value);
                });
              }
              if (dataNonal[index].IsLock) {
                _this2.tabContents[1].children[index].getComponent(UIOpacity).opacity = 130;
              } else {
                _this2.tabContents[1].children[index].on("click", function () {
                  log(dataNonal[index].Value);
                  _this2.actJoinRoom(dataNonal[index].Value);
                });
              }
            },
            dataVip,
            dataNonal;
          for (var index = 0; index < 12; index++) {
            _loop(index);
          }
        };
        _proto.sendMessage = function sendMessage() {
          var _this3 = this;
          var content = this.editBoxChat.string;
          if (content == "") {
            return;
          }
          ChatHubSignalRClient.getInstance().sendChat(this.chatChannel, content, function (_response) {
            _this3.editBoxChat.string = "";
          });
        };
        _proto.start = function start() {
          var _this4 = this;
          RoomCards.instance = this;
          CardGameSignalRClient.getInstance().receiveArray('joinGame', function (data1, data2) {
            _this4.onHandleJoin(data1, data2);
          });
          this.initTab();
          if (this.gameID === Configs.InGameIds.Catte) {
            CardGameSignalRClient.getInstance().send('EnterGame', [Configs.Login.CurrencyID], function (data) {
              if (data && data.r) {
                log(data.r);
                App.instance.showLoading(false);
              }
            });
          } else {
            CardGameSignalRClient.getInstance().send('EnterLobby', [Configs.Login.CurrencyID], function (data) {
              log(data);
              App.instance.showLoading(false);
            });
          }
        };
        _proto.actBack = function actBack() {
          if (this.gameID === Configs.InGameIds.Catte) {
            CardGameSignalRClient.getInstance().send('ExitGame', [], function (data) {
              if (data && data.r) {
                log(data.r);
              }
              CardGameSignalRClient.getInstance().close();
            });
          } else {
            CardGameSignalRClient.getInstance().send('ExitLobby', [], function (data) {
              log(data);
              CardGameSignalRClient.getInstance().close();
            });
          }
          this.node.destroy();
          Utils.setStorageValue("last_open_game_id", "");
        };
        _proto.onHandleJoin = function onHandleJoin(data, extra) {
          App.instance.DataPass = [data, extra];
          switch (data.GameId) {
            case Configs.InGameIds.TLMN:
            case Configs.InGameIds.TLMNSolo:
              App.instance.openPrefabGame("TienLen", "TienLen", function (prefab) {
                App.instance.showLoading(false);
                App.instance.addGameToNode(prefab);
              });
              break;
            case Configs.InGameIds.MauBinh:
              App.instance.openPrefabGame("MauBinh", "MauBinh", function (prefab) {
                App.instance.showLoading(false);
                App.instance.addGameToNode(prefab);
              });
              // App.instance.openGame("MauBinh", "MauBinh");
              break;
            case Configs.InGameIds.Poker:
              App.instance.openPrefabGame("Poker", "Poker", function (prefab) {
                App.instance.showLoading(false);
                App.instance.addGameToNode(prefab);
              });
              //  App.instance.openGame("Poker", "Poker");
              break;
            case Configs.InGameIds.SamLoc:
            case Configs.InGameIds.SamLocSolo:
              App.instance.openPrefabGame("Sam", "Sam", function (prefab) {
                App.instance.showLoading(false);
                App.instance.addGameToNode(prefab);
              });
              // App.instance.openGame("Sam", "Sam");
              break;
            case Configs.InGameIds.BaCay:
              App.instance.openPrefabGame("ba_cay", "ba_cay", function (prefab) {
                App.instance.showLoading(false);
                App.instance.addGameToNode(prefab);
              });
              // App.instance.openGame("ba_cay", "ba_cay");
              break;
            case Configs.InGameIds.Catte:
              App.instance.openPrefabGame("Catte", "Catte", function (prefab) {
                App.instance.showLoading(false);
                App.instance.addGameToNode(prefab);
              });
              // App.instance.openGame("ba_cay", "ba_cay");
              break;
          }
        };
        _proto.initTab = function initTab() {
          var _this5 = this;
          var _loop2 = function _loop2(index) {
            _this5.tabNode.children[index].on("click", function () {
              _this5.onClickTab(index);
            });
          };
          for (var index = 0; index < this.tabNode.children.length; index++) {
            _loop2(index);
          }
          this.onClickTab(0);
        };
        _proto.onClickTab = function onClickTab(index1) {
          for (var index = 0; index < this.tabNode.children.length; index++) {
            this.tabNode.children[index].children[1].active = index1 == index ? true : false;
            this.tabContents[index].active = index1 == index ? true : false;
          }
          this.CurrencyID = 1 - index1;
          log("EnterLobby" + this.CurrencyID);
        };
        _proto.actJoinRoom = function actJoinRoom(value) {
          var _this6 = this;
          if (this.gameID == -1) {
            return;
          }
          //preload game trước xử lí lỗi vào nhưng ko nhận data vi đang tải

          App.instance.DataPass = [];
          if (this.gameID == Configs.InGameIds.Poker) {
            this.buyChip.showWithData(value, this.CurrencyID, true);
          } else {
            App.instance.showLoading(true);
            log("PlayNow" + this.CurrencyID);
            var cb = function cb(data) {
              App.instance.showLoading(false);
              log(data);
              if (data == -1) {
                App.instance.ShowAlertDialog(App.instance.getTextLang("st12"));
              }
            };
            if (this.gameID === Configs.InGameIds.Catte) {
              CardGameSignalRClient.getInstance().send('EnterRoom', [value, this.CurrencyID], function (data) {
                if (data && data.r) {
                  cb(data);
                  _this6.onHandleJoin(data.r, null);
                }
              });
            } else {
              CardGameSignalRClient.getInstance().send('PlayNow', [value, this.CurrencyID], function (data) {
                cb(data);
              });
            }
          }
        }
        //   itemNode.children[6].on("click", () => {
        //                         this.onClickDetail(results[index]);
        //                                         });
        ;

        _proto.onDestroy = function onDestroy() {
          CardGameSignalRClient.getInstance().dontReceive();
          ChatHubSignalRClient.getInstance().dontReceive();
        }

        // update (dt) {}
        ;

        return RoomCards;
      }(Component), _class3.instance = null, _class3), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "tabNode", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "tabContents", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "buyChip", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "contentMsg", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "itemMsg", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "editBoxChat", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "lblNamegame", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/RotateSmooth.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Component, tween, Vec3;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Component = module.Component;
      tween = module.tween;
      Vec3 = module.Vec3;
    }],
    execute: function () {
      var _dec, _class, _class2, _descriptor, _descriptor2, _descriptor3;
      cclegacy._RF.push({}, "d2823W90Q9CsajV+TOzQThk", "RotateSmooth", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var RotateSmooth = exports('default', (_dec = ccclass('RotateSmooth'), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(RotateSmooth, _Component);
        function RotateSmooth() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "stepAngle", _descriptor, _assertThisInitialized(_this));
          // Góc quay mỗi bước (độ)
          _initializerDefineProperty(_this, "stepDuration", _descriptor2, _assertThisInitialized(_this));
          // Thời gian xoay mỗi bước (giây)
          _initializerDefineProperty(_this, "delayBetweenSteps", _descriptor3, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = RotateSmooth.prototype;
        // Thời gian nghỉ giữa các bước (giây)
        _proto.onLoad = function onLoad() {
          this.startSteppedRotation();
        };
        _proto.startSteppedRotation = function startSteppedRotation() {
          var node = this.node;
          var stepAngle = this.stepAngle;
          var stepDuration = this.stepDuration;
          var delay = this.delayBetweenSteps;

          // Lặp xoay vô hạn từng bước bằng tween đệ quy
          var rotateStep = function rotateStep() {
            tween(node).by(stepDuration, {
              eulerAngles: new Vec3(0, 0, stepAngle)
            }).delay(delay).call(function () {
              rotateStep(); // lặp lại
            }).start();
          };
          rotateStep(); // bắt đầu xoay
        };

        return RotateSmooth;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "stepAngle", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 15;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "stepDuration", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0.2;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "delayBetweenSteps", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0.2;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/RotateSprite.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, tween, Tween, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      tween = module.tween;
      Tween = module.Tween;
      Component = module.Component;
    }],
    execute: function () {
      var _class, _class2, _descriptor;
      cclegacy._RF.push({}, "e3cb0AxKMdHjJUuxkn09ZVi", "RotateSprite", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var RotateSprite = exports('default', ccclass(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(RotateSprite, _Component);
        function RotateSprite() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "rotationSpeed", _descriptor, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = RotateSprite.prototype;
        _proto.onLoad = function onLoad() {
          this.startRotation();
        };
        _proto.startRotation = function startRotation() {
          tween(this.node).by(this.rotationSpeed, {
            angle: -360
          }).repeatForever().start();
        };
        _proto.stopRotation = function stopRotation() {
          Tween.stopAllByTarget(this.node);
        };
        _proto.onDestroy = function onDestroy() {
          this.stopRotation();
        };
        return RotateSprite;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "rotationSpeed", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 2;
        }
      }), _class2)) || _class);
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/RouletteSignalRClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Config.ts', './Network.SignalRClient.ts', './DragonTigerSignalRClient.ts'], function (exports) {
  var _inheritsLoose, cclegacy, Configs, SignalRClient, DragonTigerSignalRClient;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      SignalRClient = module.default;
    }, function (module) {
      DragonTigerSignalRClient = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "ad1fb1dszZOibOgxT8AQUL9", "RouletteSignalRClient", undefined);
      var RouletteSignalRClient = exports('default', /*#__PURE__*/function (_SignalRClient) {
        _inheritsLoose(RouletteSignalRClient, _SignalRClient);
        function RouletteSignalRClient() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _SignalRClient.call.apply(_SignalRClient, [this].concat(args)) || this;
          _this.onSuccess = void 0;
          return _this;
        }
        RouletteSignalRClient.getErrMsg = function getErrMsg(errCode) {
          return DragonTigerSignalRClient.getErrMsg(errCode);
        };
        RouletteSignalRClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new RouletteSignalRClient();
          }
          return this.instance;
        };
        var _proto = RouletteSignalRClient.prototype;
        _proto.onstart = function onstart() {
          this.onSuccess(true);
        };
        _proto.onError = function onError() {
          this.onSuccess(false);
        };
        _proto.connectHub = function connectHub(onSuccess) {
          this.onSuccess = onSuccess;
          _SignalRClient.prototype.connect.call(this, Configs.App.DOMAIN_CONFIG['RouletteHubUrl']);
        };
        return RouletteSignalRClient;
      }(SignalRClient));
      RouletteSignalRClient.instance = null;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/ScaleJackpotx6.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Vec3, tween, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Vec3 = module.Vec3;
      tween = module.tween;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2, _descriptor3;
      cclegacy._RF.push({}, "a7f6dhE6zpC851/Kdvfv7LO", "ScaleJackpotx6", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var ScaleJackpotx6 = exports('default', (_dec = ccclass('ScaleJackpotx6'), _dec2 = property({
        type: Vec3
      }), _dec3 = property({
        type: Vec3
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(ScaleJackpotx6, _Component);
        function ScaleJackpotx6() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "minScale", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "maxScale", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "duration", _descriptor3, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = ScaleJackpotx6.prototype;
        _proto.start = function start() {
          this.startAutoScale();
        };
        _proto.startAutoScale = function startAutoScale() {
          tween(this.node).to(this.duration, {
            scale: this.maxScale
          }).to(this.duration, {
            scale: this.minScale
          }).union().repeatForever().start();
        };
        return ScaleJackpotx6;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "minScale", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return new Vec3(1, 1, 1);
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "maxScale", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return new Vec3(1.5, 1.5, 1.5);
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "duration", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 1;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/SedieSignalRClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Config.ts', './Network.SignalRClient.ts', './App.ts'], function (exports) {
  var _inheritsLoose, cclegacy, Configs, SignalRClient, App;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      SignalRClient = module.default;
    }, function (module) {
      App = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "5b3b7T6YKNMgZbw9khaCywC", "SedieSignalRClient", undefined);
      var SedieSignalRClient = exports('default', /*#__PURE__*/function (_SignalRClient) {
        _inheritsLoose(SedieSignalRClient, _SignalRClient);
        function SedieSignalRClient() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _SignalRClient.call.apply(_SignalRClient, [this].concat(args)) || this;
          _this.onSuccess = void 0;
          return _this;
        }
        SedieSignalRClient.getErrMsg = function getErrMsg(errCode) {
          return App.instance.getTextLang("ca" + errCode);
        };
        SedieSignalRClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new SedieSignalRClient();
          }
          return this.instance;
        };
        var _proto = SedieSignalRClient.prototype;
        _proto.onstart = function onstart() {
          this.onSuccess(true);
        };
        _proto.onError = function onError() {
          this.onSuccess(false);
        };
        _proto.connectHub = function connectHub(onSuccess) {
          this.onSuccess = onSuccess;
          _SignalRClient.prototype.connect.call(this, Configs.App.DOMAIN_CONFIG['SedieHubUrl']);
        };
        return SedieSignalRClient;
      }(SignalRClient));
      SedieSignalRClient.instance = null;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/SicboSignalRClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Config.ts', './Network.SignalRClient.ts', './DragonTigerSignalRClient.ts'], function (exports) {
  var _inheritsLoose, cclegacy, Configs, SignalRClient, DragonTigerSignalRClient;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      SignalRClient = module.default;
    }, function (module) {
      DragonTigerSignalRClient = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "9c83bVydCNE67oaXQXdzRQn", "SicboSignalRClient", undefined);
      var SicboSignalRClient = exports('default', /*#__PURE__*/function (_SignalRClient) {
        _inheritsLoose(SicboSignalRClient, _SignalRClient);
        function SicboSignalRClient() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _SignalRClient.call.apply(_SignalRClient, [this].concat(args)) || this;
          _this.onSuccess = void 0;
          return _this;
        }
        SicboSignalRClient.getErrMsg = function getErrMsg(errCode) {
          return DragonTigerSignalRClient.getErrMsg(errCode);
        };
        SicboSignalRClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new SicboSignalRClient();
          }
          return this.instance;
        };
        var _proto = SicboSignalRClient.prototype;
        _proto.onstart = function onstart() {
          this.onSuccess(true);
        };
        _proto.onError = function onError() {
          this.onSuccess(false);
        };
        _proto.connectHub = function connectHub(onSuccess) {
          this.onSuccess = onSuccess;
          _SignalRClient.prototype.connect.call(this, Configs.App.DOMAIN_CONFIG['SicboHubUrl']);
        };
        return SicboSignalRClient;
      }(SignalRClient));
      SicboSignalRClient.instance = null;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/SlotConfig.ts", ['cc'], function (exports) {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "fa836ZSTfBKxa2PjnjsoxLH", "SlotConfig", undefined);
      var EnumEffect = exports('EnumEffect', /*#__PURE__*/function (EnumEffect) {
        EnumEffect["BIGWIN"] = "BigWin";
        EnumEffect["JACKPOT"] = "Jackpot";
        EnumEffect["FREESPIN"] = "FreeSpin";
        EnumEffect["BONUS"] = "Bonus";
        EnumEffect["MEGAWIN"] = "MegaWin";
        EnumEffect["SUPERWIN"] = "SuperWin";
        EnumEffect["CRAZY"] = "Crazy";
        return EnumEffect;
      }({}));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/SlotItem.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, UITransform, Size, Component;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      UITransform = module.UITransform;
      Size = module.Size;
      Component = module.Component;
    }],
    execute: function () {
      var _class;
      cclegacy._RF.push({}, "176fbURf3hE4InbrABqhXwi", "SlotItem", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var SlotItem = exports('default', ccclass(_class = /*#__PURE__*/function (_Component) {
        _inheritsLoose(SlotItem, _Component);
        function SlotItem() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _this.moveSpeed = 1000.0;
          _this.isStop = false;
          _this.YStop = -100000.0;
          _this.isRunning = false;
          _this.idItem = -1;
          _this.isStopNow = false;
          _this.biendo = 30;
          _this.distance2Item = void 0;
          _this.disHCell = 163;
          _this.itemWidth = 874 / 5;
          _this.maxY = void 0;
          _this.minY = void 0;
          _this.maxTime = void 0;
          _this.acceleration = void 0;
          _this.timeElapsed = void 0;
          _this.y1 = void 0;
          _this.y2 = void 0;
          _this.y3 = void 0;
          _this.soCot = void 0;
          _this.finishedHandler = void 0;
          _this.playsoundStopItem = void 0;
          _this.idItemNew = void 0;
          return _this;
        }
        var _proto = SlotItem.prototype;
        _proto.start = function start() {};
        _proto.getPositionY = function getPositionY() {
          return this.node.position.y;
        };
        _proto.stop = function stop(distance) {
          this.isStop = true;
          var y1 = this.node.position.y; //ban dau
          var y3 = y1 - Math.abs(distance - this.disHCell / 2); //cuoi
          var y2 = this.biendo; //biendo*2
          this.y1 = y1;
          this.y2 = y2;
          this.y3 = y3;
          var s = Math.abs(y1 - y3) + y2 * 2;
          this.timeElapsed = 0.0;
          this.acceleration = -(this.moveSpeed * this.moveSpeed) / (s * 2);
          this.maxTime = s * 2 / this.moveSpeed;
        };
        _proto.initItem = function initItem(heightCell, withCell, idItem) {
          this.idItemNew = Number(idItem);
          // console.log("this.idItemNew"+this.idItemNew);
          this.disHCell = heightCell;
          this.itemWidth = withCell;
          this.node.getComponent(UITransform).setContentSize(new Size(withCell, heightCell));
        };
        _proto.createItem = function createItem(i, j, lastY) {
          var padding = 0; //18.5;
          this.distance2Item = this.disHCell;
          var xItem = (i + 0.5) * this.itemWidth;
          this.maxY = 3 * this.disHCell + this.disHCell / 2 + padding;
          this.minY = -this.disHCell / 2;
          if (lastY != 0) {
            this.minY = j * this.disHCell + this.disHCell / 2 + padding;
          }
          var yItem = j * this.disHCell + lastY + this.disHCell / 2 + padding;
          if (lastY != 0) {
            yItem = j * this.disHCell + lastY + padding;
          }
          this.node.setPosition(xItem, yItem);
          // console.log(this.node.getPosition());

          this.isRunning = true;
        };
        _proto.update = function update(deltaTime) {
          if (!this.isRunning) {
            return;
          }

          // chuyen dong giam dan deu
          if (this.isStop) {
            this.timeElapsed += deltaTime;
            if (this.timeElapsed >= this.maxTime) {
              this.timeElapsed = this.maxTime;
              this.isRunning = false;
              //  console.log("idItem " + this.idItem + "/" + this.soCot*3)  ;
              if (this.idItem == this.soCot * 3) {
                //   console.log("====");
                //   console.log( this.idItem);
                //  console.log( this.soCot*3);
                if (this.finishedHandler) {
                  this.finishedHandler();
                }
              }
              if ((this.idItem - 1) % 3 == 0) {
                if (this.playsoundStopItem) {
                  this.playsoundStopItem();
                }
              }
            }
            var yyyy = this.y2 + this.moveSpeed * this.timeElapsed + this.acceleration * this.timeElapsed * this.timeElapsed / 2;
            var yNew = this.y1 + this.y2 - yyyy;
            if (yNew < this.y3 - this.y2) {
              yNew = 2 * (this.y3 - this.y2) - yNew;
              if (this.idItem == 15) ;
            }
            this.node.setPosition(this.node.position.x, yNew);
          } else {
            var y = this.getPositionY() - this.moveSpeed * deltaTime;
            if (y <= this.minY) {
              var delta = y - this.minY;
              y = this.maxY + delta;
            }
            this.node.setPosition(this.node.position.x, y);
            if (y <= this.YStop) {
              this.isRunning = false;
            }
          }
        };
        _proto.startRunning = function startRunning() {
          this.isRunning = true;
        };
        return SlotItem;
      }(Component)) || _class);
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/SlotLayer.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './SlotItem.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, UITransform, instantiate, Tween, tween, Component, SlotItem;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      UITransform = module.UITransform;
      instantiate = module.instantiate;
      Tween = module.Tween;
      tween = module.tween;
      Component = module.Component;
    }, function (module) {
      SlotItem = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor, _descriptor2, _descriptor3;
      cclegacy._RF.push({}, "08f77GPKbRPIrDoo4Vmgdzc", "SlotLayer", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var SlotLayer = exports('default', (_dec = property(Node), _dec2 = property(Node), ccclass(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(SlotLayer, _Component);
        function SlotLayer() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "nodeSlot", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "itemPrefab", _descriptor2, _assertThisInitialized(_this));
          _this.clolumnCurrent = 0;
          _initializerDefineProperty(_this, "soCot", _descriptor3, _assertThisInitialized(_this));
          _this.arrResuft = [];
          _this.arrItems = [];
          _this.arrResuftNew = [];
          _this.finishedHandler = void 0;
          _this.playsoundStopItem = void 0;
          _this.withCell = 100;
          _this.heightCell = 100;
          _this.maxrandom = 6;
          _this.speed = 1;
          return _this;
        }
        var _proto = SlotLayer.prototype;
        _proto.start = function start() {
          this.heightCell = this.nodeSlot.getComponent(UITransform).height / 3;
          this.withCell = this.nodeSlot.getComponent(UITransform).width / this.soCot;
          // this.rotate( );
        };

        _proto.setSpeed = function setSpeed(speeIndex) {
          this.speed = speeIndex;
        };
        _proto.update = function update(deltaTime) {};
        _proto.newItem = function newItem(idItem) {
          var newNode = instantiate(this.itemPrefab);
          newNode.getComponent(SlotItem).moveSpeed = this.speed * 1000;
          newNode.active = true;
          newNode.getComponent(SlotItem).initItem(this.heightCell, this.withCell, idItem);
          return newNode;
        };
        _proto.testRotate = function testRotate() {
          this.rotate();
        };
        _proto.testOnclick = function testOnclick() {
          this.stopSlotWithResuft([["1", "2", "3"], ["4", "5", "6"], ["0", "0", "0"], ["1", "2", "3"], ["6", "7", "6"]]);
          // this.showNotEffect([["1","2","3"],["4","5","6"],["7","8","9"],["10","11","12"],["13","14","15"]]);
          //this.stopNow([["1","2","3"],["4","5","6"],["7","8","9"],["10","11","12"],["13","14","15"]]);
          // this.initRandom();
          // var newNode = instantiate(this.itemPrefab);
          // this.nodeSlot.addChild(newNode);
          // tween(newNode).sequence( 
          //     tween(this.node).delay(1.5),
          //     tween(this.node).call(function(){
          //       console.log("hllo1");

          //     }),
          //     tween(this.node).delay(1.5),
          //     tween(this.node).call(function(){
          //       console.log("hllo2");

          //     })

          // ).start();
          // tween().target(newNode).to(3.0,{position: v3(0,100,0) }).start();
        };

        _proto.initRandom = function initRandom() {
          this.clearAll();
          // this.arrItemRandom = [];
          for (var i = 0; i < 5; i++) {
            // cot

            var subItem = [];
            var subItemRan = [];
            for (var j = 0; j < 4; j++) {
              // hang
              var randomItem = (Math.floor(Math.random() * this.maxrandom) + 1).toString();
              var item = this.newItem(randomItem);
              var itemTemp = item.getComponent(SlotItem);
              itemTemp.createItem(i, j, 0);
              this.nodeSlot.addChild(item);
              subItemRan.push(randomItem);
              subItem.push(itemTemp);
              itemTemp.isRunning = false;
            }
            // this.arrItemRandom.push(subItemRan);
            this.arrItems.push(subItem);
          }
        };
        _proto.rotate = function rotate() {
          this.clearAll();
          for (var i = 0; i < this.soCot; i++) {
            // cot

            var subItem = [];
            for (var j = 0; j < 4; j++) {
              // hang
              var randomItem = Math.floor(Math.random() * this.maxrandom) + 1;
              var item = this.newItem(randomItem.toString());
              item.getComponent(SlotItem).createItem(i, j, 0);
              this.nodeSlot.addChild(item);
              subItem.push(item.getComponent(SlotItem));
            }
            this.arrItems.push(subItem);
          }
        };
        _proto.showNotEffect = function showNotEffect(ketqua) {
          this.arrResuft = [];
          this.arrResuftNew = [];
          this.clearAll();
          for (var i = 0; i < this.soCot; i++) {
            // cot

            var subItem = [];
            for (var j = 0; j < 3; j++) {
              // hang
              var item = this.newItem(ketqua[i][j]);
              var temp = item.getComponent(SlotItem);
              temp.createItem(i, j, 0);
              temp.isRunning = false;
              this.nodeSlot.addChild(item);
              this.arrResuft.push(item);
              subItem.push(temp);
            }
            this.arrResuftNew.push(subItem);
          }

          // if(this.finishedHandler){
          //     this.finishedHandler();
          // }
        };

        _proto.clearAll = function clearAll() {
          this.arrResuft = [];
          Tween.stopAllByTarget(this.node);
          this.nodeSlot.removeAllChildren();
          this.arrItems = [];
          this.clolumnCurrent = -1;
        };
        _proto.stopSlotWithResuft = function stopSlotWithResuft(ketqua) {
          var thiz = this;
          this.arrResuftNew = [];
          for (var i = 0; i < this.arrItems.length; i++) {
            (function () {
              var inew = i;
              var subItems = thiz.arrItems[inew];
              tween(thiz.node).delay(inew * (0.5 / thiz.speed)).call(function () {
                var itemTemp = thiz.arrItems[inew][0]; // phần tử đầu tiên của cột
                var distance = itemTemp.distance2Item + thiz.getMaxYOfColumn(inew, 4);
                for (var j = 0; j < subItems.length; j++) {
                  var items = subItems[j];
                  items.stop(distance); // Giả sử stop là một hàm hợp lệ
                }

                thiz.initItemsColumn(3, inew, ketqua[inew], distance, false);
              }).start();
            })();
          }
        };
        _proto.stopSlotWithResuft2x = function stopSlotWithResuft2x(ketqua) {
          var thiz = this;
          this.arrResuftNew = [];
          for (var i = 0; i < this.arrItems.length; i++) {
            (function () {
              var inew = i;
              var subItems = thiz.arrItems[inew];
              tween(thiz.node).delay(inew * 0.25).call(function () {
                var itemTemp = thiz.arrItems[inew][0]; // phần tử đầu tiên của cột
                var distance = itemTemp.distance2Item + thiz.getMaxYOfColumn(inew, 4);
                for (var j = 0; j < subItems.length; j++) {
                  var items = subItems[j];
                  items.stop(distance); // Gọi stop với khoảng cách tính toán
                }

                thiz.initItemsColumn(3, inew, ketqua[inew], distance, false);
              }).start();
            })();
          }
        };
        _proto.stopNow = function stopNow(ketqua) {
          console.log("==ketqua" + ketqua);
          Tween.stopAllByTarget(this.node);
          var thiz = this;
          for (var i = this.clolumnCurrent + 1; i < this.arrItems.length; i++) {
            (function () {
              var inew = i;
              var subItems = thiz.arrItems[inew];
              var itemTemp = thiz.arrItems[inew][0]; //phan tu dau tien cua cot
              var distance = itemTemp.distance2Item + thiz.getMaxYOfColumn(inew, 4);
              for (var j = 0; j < subItems.length; j++) {
                var items = subItems[j];
                items.stop(distance);
              }
              thiz.initItemsColumn(3, inew, ketqua[inew], distance, true);
            })();
          }
        };
        _proto.getMaxYOfColumn = function getMaxYOfColumn(i, numberHorizontal) {
          var item0 = this.arrItems[i][0];
          // console.log(this.arrItems.length);
          // console.log(item0);
          var y = item0.getPositionY();
          for (var m = 0; m < numberHorizontal; m++) {
            var temp = this.arrItems[i][m];
            if (temp.getPositionY() > y) {
              y = temp.getPositionY();
            }
          }
          return y;
        };
        _proto.initItemsColumn = function initItemsColumn(numberHorizontal, i, ketqua, distance, stopNow) {
          var thiz = this;
          this.clolumnCurrent = i;
          var subItem = [];
          for (var j = 0; j < numberHorizontal; j++) {
            var item = this.newItem(ketqua[j]);
            var tempz = item.getComponent(SlotItem);
            tempz.isStopNow = stopNow;
            subItem.push(tempz);
            tempz.idItem = this.arrResuft.length + 1;
            this.arrResuft.push(item);
            tempz.finishedHandler = function () {
              if (thiz.finishedHandler) {
                thiz.finishedHandler();
              }
            };
            tempz.playsoundStopItem = function () {
              if (thiz.playsoundStopItem) {
                thiz.playsoundStopItem();
              }
            };
          }
          var item0 = this.arrItems[i][0]; //phan tu dau tien cua cot
          var y = this.getMaxYOfColumn(i, 4);
          var lastY = item0.distance2Item + y;
          for (var j = 0; j < numberHorizontal; j++) {
            var itemzzz = subItem[j].getComponent(SlotItem);
            itemzzz.createItem(i, j, lastY);
            this.nodeSlot.addChild(itemzzz.node);
            itemzzz.stop(distance);

            // if(i==4 && j==2)
            // {
            //     var delay = lastY/400.0;
            //      console.log("finish quay");
            // }
          }

          this.arrResuftNew.push(subItem);
        };
        return SlotLayer;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "nodeSlot", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "itemPrefab", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "soCot", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 5;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/SortiePhotonClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './PhotonClient.ts', './Config.ts'], function (exports) {
  var _inheritsLoose, cclegacy, PhotonClient, Configs;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      PhotonClient = module.PhotonClient;
    }, function (module) {
      Configs = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "da120+RcXNJErBp5OWGnVA7", "SortiePhotonClient", undefined);
      var EOperationSubCodes = /*#__PURE__*/function (EOperationSubCodes) {
        EOperationSubCodes[EOperationSubCodes["Login"] = 1] = "Login";
        EOperationSubCodes[EOperationSubCodes["GetCaptcha"] = 2] = "GetCaptcha";
        EOperationSubCodes[EOperationSubCodes["CashInGold"] = 3] = "CashInGold";
        EOperationSubCodes[EOperationSubCodes["CashOutGold"] = 4] = "CashOutGold";
        EOperationSubCodes[EOperationSubCodes["JoinRoom"] = 5] = "JoinRoom";
        EOperationSubCodes[EOperationSubCodes["LeaveRoom"] = 6] = "LeaveRoom";
        EOperationSubCodes[EOperationSubCodes["OtherJoinRoom"] = 7] = "OtherJoinRoom";
        EOperationSubCodes[EOperationSubCodes["CreateFighter"] = 8] = "CreateFighter";
        EOperationSubCodes[EOperationSubCodes["RemoveFighter"] = 9] = "RemoveFighter";
        EOperationSubCodes[EOperationSubCodes["ChangeGun"] = 10] = "ChangeGun";
        EOperationSubCodes[EOperationSubCodes["PlayerShooting"] = 11] = "PlayerShooting";
        EOperationSubCodes[EOperationSubCodes["PlayerShotFighter"] = 12] = "PlayerShotFighter";
        EOperationSubCodes[EOperationSubCodes["UseTarget"] = 13] = "UseTarget";
        EOperationSubCodes[EOperationSubCodes["ShotMagnetic"] = 17] = "ShotMagnetic";
        EOperationSubCodes[EOperationSubCodes["ReleaseMagnetic"] = 18] = "ReleaseMagnetic";
        EOperationSubCodes[EOperationSubCodes["UseRadar"] = 14] = "UseRadar";
        EOperationSubCodes[EOperationSubCodes["ReleaseRadar"] = 15] = "ReleaseRadar";
        EOperationSubCodes[EOperationSubCodes["CancelRadar"] = 16] = "CancelRadar";
        EOperationSubCodes[EOperationSubCodes["DropBomb"] = 19] = "DropBomb";
        EOperationSubCodes[EOperationSubCodes["ReleaseBomb"] = 20] = "ReleaseBomb";
        EOperationSubCodes[EOperationSubCodes["Chat"] = 21] = "Chat";
        EOperationSubCodes[EOperationSubCodes["ShowCommandMessage"] = 22] = "ShowCommandMessage";
        EOperationSubCodes[EOperationSubCodes["GetRoomInfo"] = 23] = "GetRoomInfo";
        EOperationSubCodes[EOperationSubCodes["GetCurrentJackpot"] = 24] = "GetCurrentJackpot";
        EOperationSubCodes[EOperationSubCodes["CashInHistory"] = 25] = "CashInHistory";
        EOperationSubCodes[EOperationSubCodes["CashOutHistory"] = 26] = "CashOutHistory";
        EOperationSubCodes[EOperationSubCodes["GetTopJackpot"] = 27] = "GetTopJackpot";
        EOperationSubCodes[EOperationSubCodes["PlayGameHistory"] = 28] = "PlayGameHistory";
        EOperationSubCodes[EOperationSubCodes["GetTopPlayer"] = 29] = "GetTopPlayer";
        EOperationSubCodes[EOperationSubCodes["Ping"] = 30] = "Ping";
        EOperationSubCodes[EOperationSubCodes["Pong"] = 31] = "Pong";
        EOperationSubCodes[EOperationSubCodes["CashoutMin"] = 32] = "CashoutMin";
        return EOperationSubCodes;
      }(EOperationSubCodes || {});
      var EParameterCodes = /*#__PURE__*/function (EParameterCodes) {
        EParameterCodes[EParameterCodes["OperationSubCode"] = 0] = "OperationSubCode";
        EParameterCodes[EParameterCodes["LoginMessage"] = 1] = "LoginMessage";
        EParameterCodes[EParameterCodes["LoginResponse"] = 2] = "LoginResponse";
        EParameterCodes[EParameterCodes["FighterConfigsResponse"] = 3] = "FighterConfigsResponse";
        EParameterCodes[EParameterCodes["GunConfigsResponse"] = 4] = "GunConfigsResponse";
        EParameterCodes[EParameterCodes["PingResponse"] = 5] = "PingResponse";
        EParameterCodes[EParameterCodes["PongMessage"] = 6] = "PongMessage";
        EParameterCodes[EParameterCodes["CreateFighterResponse"] = 7] = "CreateFighterResponse";
        EParameterCodes[EParameterCodes["RemoveSingleFighterResponse"] = 8] = "RemoveSingleFighterResponse";
        EParameterCodes[EParameterCodes["ClientParameterConfig"] = 10] = "ClientParameterConfig";
        EParameterCodes[EParameterCodes["JoinRoomResponse"] = 11] = "JoinRoomResponse";
        EParameterCodes[EParameterCodes["OtherJoinRoomResponse"] = 12] = "OtherJoinRoomResponse";
        EParameterCodes[EParameterCodes["LeaveRoomResponse"] = 13] = "LeaveRoomResponse";
        EParameterCodes[EParameterCodes["RoomInfoResponse"] = 15] = "RoomInfoResponse";
        EParameterCodes[EParameterCodes["ExchangeMessage"] = 16] = "ExchangeMessage";
        EParameterCodes[EParameterCodes["CashInResponse"] = 17] = "CashInResponse";
        EParameterCodes[EParameterCodes["CashOutResponse"] = 18] = "CashOutResponse";
        EParameterCodes[EParameterCodes["ExChangeHistoryResponse"] = 19] = "ExChangeHistoryResponse";
        EParameterCodes[EParameterCodes["TopJackpotResponse"] = 20] = "TopJackpotResponse";
        EParameterCodes[EParameterCodes["PlayHistoryResponse"] = 21] = "PlayHistoryResponse";
        EParameterCodes[EParameterCodes["CaptchaResponse"] = 22] = "CaptchaResponse";
        EParameterCodes[EParameterCodes["ChangeGunMessage"] = 23] = "ChangeGunMessage";
        EParameterCodes[EParameterCodes["ChangeGunResponse"] = 24] = "ChangeGunResponse";
        EParameterCodes[EParameterCodes["ShootingMessage"] = 25] = "ShootingMessage";
        EParameterCodes[EParameterCodes["ShootingResponse"] = 26] = "ShootingResponse";
        EParameterCodes[EParameterCodes["ShotFighterMessage"] = 27] = "ShotFighterMessage";
        EParameterCodes[EParameterCodes["HeadShotResponse"] = 28] = "HeadShotResponse";
        EParameterCodes[EParameterCodes["TimeToUse"] = 29] = "TimeToUse";
        EParameterCodes[EParameterCodes["ShotMagneticMessage"] = 30] = "ShotMagneticMessage";
        EParameterCodes[EParameterCodes["ReleaseMagneticResponse"] = 31] = "ReleaseMagneticResponse";
        EParameterCodes[EParameterCodes["DropBombMessage"] = 32] = "DropBombMessage";
        EParameterCodes[EParameterCodes["ReleaseBombMessage"] = 33] = "ReleaseBombMessage";
        EParameterCodes[EParameterCodes["ReleaseBombResponse"] = 34] = "ReleaseBombResponse";
        EParameterCodes[EParameterCodes["DropRadarMessage"] = 35] = "DropRadarMessage";
        EParameterCodes[EParameterCodes["ReleaseRadarResponse"] = 36] = "ReleaseRadarResponse";
        EParameterCodes[EParameterCodes["CancelRadarResponse"] = 37] = "CancelRadarResponse";
        EParameterCodes[EParameterCodes["ChatMessage"] = 38] = "ChatMessage";
        EParameterCodes[EParameterCodes["ChatResponse"] = 39] = "ChatResponse";
        EParameterCodes[EParameterCodes["ErrorCode"] = 40] = "ErrorCode";
        EParameterCodes[EParameterCodes["CurrencyId"] = 41] = "CurrencyId";
        EParameterCodes[EParameterCodes["CurrentJackpot"] = 42] = "CurrentJackpot";
        EParameterCodes[EParameterCodes["AccountId"] = 43] = "AccountId";
        EParameterCodes[EParameterCodes["PortalId"] = 44] = "PortalId";
        EParameterCodes[EParameterCodes["CashoutMinResponse"] = 45] = "CashoutMinResponse";
        return EParameterCodes;
      }(EParameterCodes || {});
      var SortiePhotonClient = exports('SortiePhotonClient', /*#__PURE__*/function (_PhotonClient) {
        _inheritsLoose(SortiePhotonClient, _PhotonClient);
        function SortiePhotonClient() {
          return _PhotonClient.apply(this, arguments) || this;
        }
        SortiePhotonClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new SortiePhotonClient();
          }
          return this.instance;
        };
        var _proto = SortiePhotonClient.prototype;
        _proto.connect = function connect() {
          _PhotonClient.prototype.connect.call(this, Configs.App.DOMAIN_CONFIG['SortieServerUrl']);
        };
        return SortiePhotonClient;
      }(PhotonClient));
      SortiePhotonClient.instance = void 0;
      SortiePhotonClient.EOperationSubCodes = EOperationSubCodes;
      SortiePhotonClient.EParameterCodes = EParameterCodes;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/SpaceWarPhotonClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './PhotonClient.ts', './Config.ts'], function (exports) {
  var _inheritsLoose, cclegacy, PhotonClient, Configs;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      PhotonClient = module.PhotonClient;
    }, function (module) {
      Configs = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "79b99MSBXRAXbcx8cJd2cRA", "SpaceWarPhotonClient", undefined);
      var EOperationSubCodes = /*#__PURE__*/function (EOperationSubCodes) {
        EOperationSubCodes[EOperationSubCodes["Login"] = 1] = "Login";
        EOperationSubCodes[EOperationSubCodes["GetCaptcha"] = 2] = "GetCaptcha";
        EOperationSubCodes[EOperationSubCodes["CashInGold"] = 3] = "CashInGold";
        EOperationSubCodes[EOperationSubCodes["CashOutGold"] = 4] = "CashOutGold";
        EOperationSubCodes[EOperationSubCodes["JoinRoom"] = 5] = "JoinRoom";
        EOperationSubCodes[EOperationSubCodes["LeaveRoom"] = 6] = "LeaveRoom";
        EOperationSubCodes[EOperationSubCodes["OtherJoinRoom"] = 7] = "OtherJoinRoom";
        EOperationSubCodes[EOperationSubCodes["CreateFighter"] = 8] = "CreateFighter";
        EOperationSubCodes[EOperationSubCodes["RemoveFighter"] = 9] = "RemoveFighter";
        EOperationSubCodes[EOperationSubCodes["ChangeGun"] = 10] = "ChangeGun";
        EOperationSubCodes[EOperationSubCodes["PlayerShooting"] = 11] = "PlayerShooting";
        EOperationSubCodes[EOperationSubCodes["PlayerShotFish"] = 12] = "PlayerShotFish";
        EOperationSubCodes[EOperationSubCodes["UseTarget"] = 13] = "UseTarget";
        EOperationSubCodes[EOperationSubCodes["GetDoubleCanPlay"] = 14] = "GetDoubleCanPlay";
        EOperationSubCodes[EOperationSubCodes["PlayDouble"] = 15] = "PlayDouble";
        EOperationSubCodes[EOperationSubCodes["Chat"] = 21] = "Chat";
        EOperationSubCodes[EOperationSubCodes["ShowCommandMessage"] = 22] = "ShowCommandMessage";
        EOperationSubCodes[EOperationSubCodes["GetRoomInfo"] = 23] = "GetRoomInfo";
        EOperationSubCodes[EOperationSubCodes["GetCurrentJackpot"] = 24] = "GetCurrentJackpot";
        EOperationSubCodes[EOperationSubCodes["CashInHistory"] = 25] = "CashInHistory";
        EOperationSubCodes[EOperationSubCodes["CashOutHistory"] = 26] = "CashOutHistory";
        EOperationSubCodes[EOperationSubCodes["GetTopJackpot"] = 27] = "GetTopJackpot";
        EOperationSubCodes[EOperationSubCodes["PlayGameHistory"] = 28] = "PlayGameHistory";
        EOperationSubCodes[EOperationSubCodes["GetTopPlayer"] = 29] = "GetTopPlayer";
        EOperationSubCodes[EOperationSubCodes["Ping"] = 30] = "Ping";
        EOperationSubCodes[EOperationSubCodes["Pong"] = 31] = "Pong";
        EOperationSubCodes[EOperationSubCodes["CashoutMin"] = 32] = "CashoutMin";
        return EOperationSubCodes;
      }(EOperationSubCodes || {});
      var EParameterCodes = /*#__PURE__*/function (EParameterCodes) {
        EParameterCodes[EParameterCodes["OperationSubCode"] = 0] = "OperationSubCode";
        EParameterCodes[EParameterCodes["LoginMessage"] = 1] = "LoginMessage";
        EParameterCodes[EParameterCodes["LoginResponse"] = 2] = "LoginResponse";
        EParameterCodes[EParameterCodes["FishConfigsResponse"] = 3] = "FishConfigsResponse";
        EParameterCodes[EParameterCodes["GunConfigsResponse"] = 4] = "GunConfigsResponse";
        EParameterCodes[EParameterCodes["PingResponse"] = 5] = "PingResponse";
        EParameterCodes[EParameterCodes["PongMessage"] = 6] = "PongMessage";
        EParameterCodes[EParameterCodes["CreateFishResponse"] = 7] = "CreateFishResponse";
        EParameterCodes[EParameterCodes["RemoveSingleFishResponse"] = 8] = "RemoveSingleFishResponse";
        EParameterCodes[EParameterCodes["ClientParameterConfig"] = 10] = "ClientParameterConfig";
        EParameterCodes[EParameterCodes["JoinRoomResponse"] = 11] = "JoinRoomResponse";
        EParameterCodes[EParameterCodes["OtherJoinRoomResponse"] = 12] = "OtherJoinRoomResponse";
        EParameterCodes[EParameterCodes["LeaveRoomResponse"] = 13] = "LeaveRoomResponse";
        EParameterCodes[EParameterCodes["RoomInfoResponse"] = 15] = "RoomInfoResponse";
        EParameterCodes[EParameterCodes["ExchangeMessage"] = 16] = "ExchangeMessage";
        EParameterCodes[EParameterCodes["CashInResponse"] = 17] = "CashInResponse";
        EParameterCodes[EParameterCodes["CashOutResponse"] = 18] = "CashOutResponse";
        EParameterCodes[EParameterCodes["ExChangeHistoryResponse"] = 19] = "ExChangeHistoryResponse";
        EParameterCodes[EParameterCodes["TopJackpotResponse"] = 20] = "TopJackpotResponse";
        EParameterCodes[EParameterCodes["PlayHistoryResponse"] = 21] = "PlayHistoryResponse";
        EParameterCodes[EParameterCodes["CaptchaResponse"] = 22] = "CaptchaResponse";
        EParameterCodes[EParameterCodes["ChangeGunMessage"] = 23] = "ChangeGunMessage";
        EParameterCodes[EParameterCodes["ChangeGunResponse"] = 24] = "ChangeGunResponse";
        EParameterCodes[EParameterCodes["ShootingMessage"] = 25] = "ShootingMessage";
        EParameterCodes[EParameterCodes["ShootingResponse"] = 26] = "ShootingResponse";
        EParameterCodes[EParameterCodes["FishShotMessage"] = 27] = "FishShotMessage";
        EParameterCodes[EParameterCodes["HeadShotResponse"] = 28] = "HeadShotResponse";
        EParameterCodes[EParameterCodes["TimeToUse"] = 29] = "TimeToUse";
        EParameterCodes[EParameterCodes["DoubleConfigsResponse"] = 30] = "DoubleConfigsResponse";
        EParameterCodes[EParameterCodes["DoubleValuesCanPlay"] = 31] = "DoubleValuesCanPlay";
        EParameterCodes[EParameterCodes["DoubleMessage"] = 32] = "DoubleMessage";
        EParameterCodes[EParameterCodes["DoubleMessageResponse"] = 33] = "DoubleMessageResponse";
        EParameterCodes[EParameterCodes["ChatMessage"] = 38] = "ChatMessage";
        EParameterCodes[EParameterCodes["ChatResponse"] = 39] = "ChatResponse";
        EParameterCodes[EParameterCodes["ErrorCode"] = 40] = "ErrorCode";
        EParameterCodes[EParameterCodes["CurrencyId"] = 41] = "CurrencyId";
        EParameterCodes[EParameterCodes["CurrentJackpot"] = 42] = "CurrentJackpot";
        EParameterCodes[EParameterCodes["AccountId"] = 43] = "AccountId";
        EParameterCodes[EParameterCodes["PortalId"] = 44] = "PortalId";
        EParameterCodes[EParameterCodes["CashoutMinResponse"] = 45] = "CashoutMinResponse";
        return EParameterCodes;
      }(EParameterCodes || {});
      var SpaceWarPhotonClient = exports('SpaceWarPhotonClient', /*#__PURE__*/function (_PhotonClient) {
        _inheritsLoose(SpaceWarPhotonClient, _PhotonClient);
        function SpaceWarPhotonClient() {
          return _PhotonClient.apply(this, arguments) || this;
        }
        SpaceWarPhotonClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new SpaceWarPhotonClient();
          }
          return this.instance;
        };
        var _proto = SpaceWarPhotonClient.prototype;
        _proto.connect = function connect() {
          _PhotonClient.prototype.connect.call(this, Configs.App.DOMAIN_CONFIG['SpaceWarServerUrl']);
        };
        return SpaceWarPhotonClient;
      }(PhotonClient));
      SpaceWarPhotonClient.instance = void 0;
      SpaceWarPhotonClient.EOperationSubCodes = EOperationSubCodes;
      SpaceWarPhotonClient.EParameterCodes = EParameterCodes;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/SpinAndBlink.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, UIOpacity, tween, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      UIOpacity = module.UIOpacity;
      tween = module.tween;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _class, _class2, _descriptor, _descriptor2;
      cclegacy._RF.push({}, "54b16AfPSZJ4aPdYcHmPTuJ", "SpinAndBlink", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var SpinAndBlink = exports('default', (_dec = ccclass('SpinAndBlink'), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(SpinAndBlink, _Component);
        function SpinAndBlink() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "rotationSpeed", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "blinkDuration", _descriptor2, _assertThisInitialized(_this));
          _this.uiOpacity = void 0;
          return _this;
        }
        var _proto = SpinAndBlink.prototype;
        _proto.start = function start() {
          this.uiOpacity = this.node.getComponent(UIOpacity);
          if (!this.uiOpacity) {
            this.uiOpacity = this.node.addComponent(UIOpacity);
          }
          this.startBlinking();
        };
        _proto.update = function update(dt) {
          this.node.angle += this.rotationSpeed * dt;
        };
        _proto.startBlinking = function startBlinking() {
          tween(this.uiOpacity).to(this.blinkDuration / 2, {
            opacity: 50
          }).to(this.blinkDuration / 2, {
            opacity: 255
          }).union().repeatForever().start();
        };
        return SpinAndBlink;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "rotationSpeed", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 45;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "blinkDuration", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0.2;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/SportVirtualController.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Config.ts', './App.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, WebView, Component, Configs, App;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      WebView = module.WebView;
      Component = module.Component;
    }, function (module) {
      Configs = module.default;
    }, function (module) {
      App = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;
      cclegacy._RF.push({}, "dba2clEpYNPsbiGtOz04Acp", "SportVirtualController", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var SportVirtualController = exports('SportVirtualController', (_dec = ccclass('SportVirtualController'), _dec2 = property(WebView), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(SportVirtualController, _Component);
        function SportVirtualController() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "webView", _descriptor, _assertThisInitialized(_this));
          _this.initialized = false;
          return _this;
        }
        var _proto = SportVirtualController.prototype;
        _proto.onEnable = function onEnable() {
          this.webView.url = Configs.App.DOMAIN_CONFIG['SportVirtualUrl'] + "?page=virtualsports&token=" + Configs.Login.AccessToken;
          this.webView.node.on(WebView.EventType.LOADED, this.callback, this);
        };
        _proto.callback = function callback(webview) {
          if (this.initialized) {
            this.dismiss();
            return;
          }
          this.initialized = true;
        };
        _proto.dismiss = function dismiss() {
          App.instance.gotoLobby();
        };
        return SportVirtualController;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "webView", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/SPUtils.ts", ['cc', './Utils.ts'], function (exports) {
  var cclegacy, Utils;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      Utils = module.Utils;
    }],
    execute: function () {
      cclegacy._RF.push({}, "67b23nJkm9D86VJUBeTJR6K", "SPUtils", undefined);
      var SPUtils = exports('SPUtils', /*#__PURE__*/function () {
        function SPUtils() {}
        SPUtils.encode = function encode(s, k) {
          var enc = "";
          // make sure that input is string
          s.toString();
          for (var i = 0; i < s.length; i++) {
            // create block
            var a = s.charCodeAt(i);
            // bitwise XOR
            var b = a ^ k;
            enc = enc + String.fromCharCode(b);
          }
          return enc;
        };
        SPUtils.get = function get(key, defaultValue) {
          if (defaultValue === void 0) {
            defaultValue = "";
          }
          var keyEncrypted = this.encode(key, 3265812).toString();
          var r = Utils.getStorageKey(keyEncrypted);
          if (r) {
            r = this.encode(r, 3265812).toString();
            return r;
          }
          return defaultValue;
        };
        SPUtils.set = function set(key, value) {
          value = value.toString();
          var keyEncrypted = "" + this.encode(key, 3265812);
          var valueEncrypted = "" + this.encode(value, 3265812);
          Utils.setStorageValue(keyEncrypted, valueEncrypted);
        };
        SPUtils.setRSAPublicKey = function setRSAPublicKey(value) {
          this.set("rsa_pkey", value);
        };
        SPUtils.getRSAPublicKey = function getRSAPublicKey() {
          return this.get("rsa_pkey");
        };
        SPUtils.setAccessToken = function setAccessToken(value) {
          this.set("at", value);
        };
        SPUtils.setUserName = function setUserName(value) {
          this.set("username", value);
        };
        SPUtils.setNN = function setNN(value) {
          this.set("u", value);
        };
        SPUtils.getNN = function getNN() {
          return this.get("u");
        };
        SPUtils.getUserName = function getUserName() {
          return this.get("username");
        };
        SPUtils.getAccessToken = function getAccessToken() {
          return this.get("at");
        };
        SPUtils.setUserPass = function setUserPass(value) {
          this.set("userpass", value);
        };
        SPUtils.getUserPass = function getUserPass() {
          return this.get("userpass");
        };
        SPUtils.getMusicVolumn = function getMusicVolumn() {
          return Number(this.get("music_volumn", "1"));
        };
        SPUtils.setMusicVolumn = function setMusicVolumn(volumn) {
          this.set("music_volumn", volumn.toString());
        };
        SPUtils.getSoundVolumn = function getSoundVolumn() {
          return Number(this.get("sound_volumn", "1"));
        };
        SPUtils.setSoundVolumn = function setSoundVolumn(volumn) {
          this.set("sound_volumn", volumn.toString());
        };
        return SPUtils;
      }());
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/SwingXYMotion.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, CCInteger, Vec3, tween, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      CCInteger = module.CCInteger;
      Vec3 = module.Vec3;
      tween = module.tween;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;
      cclegacy._RF.push({}, "59fbfGCARVGCodj3b5NnSae", "SwingXYMotion", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var SwingXYMotion = exports('SwingXYMotion', (_dec = ccclass('SwingXYMotion'), _dec2 = property(CCInteger), _dec3 = property(CCInteger), _dec4 = property(CCInteger), _dec5 = property(CCInteger), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(SwingXYMotion, _Component);
        function SwingXYMotion() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "amplitudeX", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "amplitudeY", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "duration", _descriptor3, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "delayStart", _descriptor4, _assertThisInitialized(_this));
          _this._originalPos = new Vec3();
          return _this;
        }
        var _proto = SwingXYMotion.prototype;
        _proto.start = function start() {
          var _this2 = this;
          this._originalPos.set(this.node.position);
          this.scheduleOnce(function () {
            _this2.startSwing();
          }, this.delayStart);
        };
        _proto.startSwing = function startSwing() {
          var quarter = this.duration / 4;
          var rightUp = new Vec3(this._originalPos.x + this.amplitudeX, this._originalPos.y + this.amplitudeY, 0);
          var leftUp = new Vec3(this._originalPos.x - this.amplitudeX, this._originalPos.y + this.amplitudeY, 0);
          var leftDown = new Vec3(this._originalPos.x - this.amplitudeX, this._originalPos.y - this.amplitudeY, 0);
          var rightDown = new Vec3(this._originalPos.x + this.amplitudeX, this._originalPos.y - this.amplitudeY, 0);
          tween(this.node).repeatForever(tween().to(quarter, {
            position: rightUp
          }).to(quarter, {
            position: leftUp
          }).to(quarter, {
            position: leftDown
          }).to(quarter, {
            position: rightDown
          })).start();
        };
        _proto.onDestroy = function onDestroy() {
          tween(this.node).stop();
        };
        return SwingXYMotion;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "amplitudeX", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 10;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "amplitudeY", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 5;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "duration", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 1.2;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "delayStart", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 1.2;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/TabEvent.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Label, Color, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Label = module.Label;
      Color = module.Color;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;
      cclegacy._RF.push({}, "6e691Q4pMtF9a0v50PGLPPr", "TabEvent", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var TabEvent = exports('default', (_dec = ccclass('TabEvent'), _dec2 = property([Node]), _dec3 = property([Node]), _dec4 = property([Node]), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(TabEvent, _Component);
        function TabEvent() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "tabs", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabContents", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabSelectedCheckMark", _descriptor3, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = TabEvent.prototype;
        _proto.start = function start() {
          this.showTab(6);
        };
        _proto.onTabSelected = function onTabSelected(toggle, index) {
          var tabIndex = parseInt(index);
          this.showTab(tabIndex);
        };
        _proto.showTab = function showTab(index) {
          this.tabContents.forEach(function (tab, i) {
            if (tab) tab.active = i === index;
          });
          this.tabSelectedCheckMark.forEach(function (check, i) {
            if (check) check.active = i === index;
          });

          // this.tabSelectedCheckMark.forEach((tab, i) => {
          //     if (i !== index) {
          //         tab.active = false;
          //     }
          // });

          this.tabs.forEach(function (tab, i) {
            var labelNode = tab.getChildByName("label");
            if (labelNode) {
              var label = labelNode.getComponent(Label);
              if (label) {
                label.color = i === index ? new Color(255, 252, 0) : new Color(255, 255, 255);
              }
            }
          });
        };
        return TabEvent;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "tabs", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "tabContents", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "tabSelectedCheckMark", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/TabEventTutorial.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Label, Color, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Label = module.Label;
      Color = module.Color;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;
      cclegacy._RF.push({}, "e44abjZXt9J/7sLdpBi9tyX", "TabEventTutorial", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var TabEventTutorial = exports('default', (_dec = ccclass('TabEventTutorial'), _dec2 = property([Node]), _dec3 = property([Node]), _dec4 = property([Node]), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(TabEventTutorial, _Component);
        function TabEventTutorial() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "tabs", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabContents", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "tabSelectedCheckMark", _descriptor3, _assertThisInitialized(_this));
          return _this;
        }
        var _proto = TabEventTutorial.prototype;
        _proto.start = function start() {
          this.showTab(0);
        };
        _proto.onTabSelected = function onTabSelected(toggle, index) {
          var tabIndex = parseInt(index);
          this.showTab(tabIndex);
        };
        _proto.showTab = function showTab(index) {
          this.tabContents.forEach(function (tab, i) {
            if (tab) tab.active = i === index;
          });
          this.tabSelectedCheckMark.forEach(function (check, i) {
            if (check) check.active = i === index;
          });
          this.tabs.forEach(function (tab, i) {
            var labelNode = tab.getChildByName("label");
            if (labelNode) {
              var label = labelNode.getComponent(Label);
              if (label) {
                label.color = i === index ? new Color(255, 252, 0) : new Color(255, 255, 255);
              }
            }
          });
        };
        return TabEventTutorial;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "tabs", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "tabContents", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "tabSelectedCheckMark", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/TheSharkPhotonClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './PhotonClient.ts', './Config.ts'], function (exports) {
  var _inheritsLoose, cclegacy, PhotonClient, Configs;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      PhotonClient = module.PhotonClient;
    }, function (module) {
      Configs = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "50f35xbicxMJI2gs/xPEczt", "TheSharkPhotonClient", undefined);
      var EOperationSubCodes = /*#__PURE__*/function (EOperationSubCodes) {
        EOperationSubCodes[EOperationSubCodes["Login"] = 1] = "Login";
        EOperationSubCodes[EOperationSubCodes["GetCaptcha"] = 2] = "GetCaptcha";
        EOperationSubCodes[EOperationSubCodes["CashInGold"] = 3] = "CashInGold";
        EOperationSubCodes[EOperationSubCodes["CashOutGold"] = 4] = "CashOutGold";
        EOperationSubCodes[EOperationSubCodes["JoinRoom"] = 5] = "JoinRoom";
        EOperationSubCodes[EOperationSubCodes["LeaveRoom"] = 6] = "LeaveRoom";
        EOperationSubCodes[EOperationSubCodes["OtherJoinRoom"] = 7] = "OtherJoinRoom";
        EOperationSubCodes[EOperationSubCodes["CreateFighter"] = 8] = "CreateFighter";
        EOperationSubCodes[EOperationSubCodes["RemoveFighter"] = 9] = "RemoveFighter";
        EOperationSubCodes[EOperationSubCodes["ChangeGun"] = 10] = "ChangeGun";
        EOperationSubCodes[EOperationSubCodes["PlayerShooting"] = 11] = "PlayerShooting";
        EOperationSubCodes[EOperationSubCodes["PlayerShotFish"] = 12] = "PlayerShotFish";
        EOperationSubCodes[EOperationSubCodes["UseTarget"] = 13] = "UseTarget";
        EOperationSubCodes[EOperationSubCodes["GetDoubleCanPlay"] = 14] = "GetDoubleCanPlay";
        EOperationSubCodes[EOperationSubCodes["PlayDouble"] = 15] = "PlayDouble";
        EOperationSubCodes[EOperationSubCodes["Chat"] = 21] = "Chat";
        EOperationSubCodes[EOperationSubCodes["ShowCommandMessage"] = 22] = "ShowCommandMessage";
        EOperationSubCodes[EOperationSubCodes["GetRoomInfo"] = 23] = "GetRoomInfo";
        EOperationSubCodes[EOperationSubCodes["GetCurrentJackpot"] = 24] = "GetCurrentJackpot";
        EOperationSubCodes[EOperationSubCodes["CashInHistory"] = 25] = "CashInHistory";
        EOperationSubCodes[EOperationSubCodes["CashOutHistory"] = 26] = "CashOutHistory";
        EOperationSubCodes[EOperationSubCodes["GetTopJackpot"] = 27] = "GetTopJackpot";
        EOperationSubCodes[EOperationSubCodes["PlayGameHistory"] = 28] = "PlayGameHistory";
        EOperationSubCodes[EOperationSubCodes["GetTopPlayer"] = 29] = "GetTopPlayer";
        EOperationSubCodes[EOperationSubCodes["Ping"] = 30] = "Ping";
        EOperationSubCodes[EOperationSubCodes["Pong"] = 31] = "Pong";
        EOperationSubCodes[EOperationSubCodes["CashoutMin"] = 32] = "CashoutMin";
        return EOperationSubCodes;
      }(EOperationSubCodes || {});
      var EParameterCodes = /*#__PURE__*/function (EParameterCodes) {
        EParameterCodes[EParameterCodes["OperationSubCode"] = 0] = "OperationSubCode";
        EParameterCodes[EParameterCodes["LoginMessage"] = 1] = "LoginMessage";
        EParameterCodes[EParameterCodes["LoginResponse"] = 2] = "LoginResponse";
        EParameterCodes[EParameterCodes["FishConfigsResponse"] = 3] = "FishConfigsResponse";
        EParameterCodes[EParameterCodes["GunConfigsResponse"] = 4] = "GunConfigsResponse";
        EParameterCodes[EParameterCodes["PingResponse"] = 5] = "PingResponse";
        EParameterCodes[EParameterCodes["PongMessage"] = 6] = "PongMessage";
        EParameterCodes[EParameterCodes["CreateFishResponse"] = 7] = "CreateFishResponse";
        EParameterCodes[EParameterCodes["RemoveSingleFishResponse"] = 8] = "RemoveSingleFishResponse";
        EParameterCodes[EParameterCodes["ClientParameterConfig"] = 10] = "ClientParameterConfig";
        EParameterCodes[EParameterCodes["JoinRoomResponse"] = 11] = "JoinRoomResponse";
        EParameterCodes[EParameterCodes["OtherJoinRoomResponse"] = 12] = "OtherJoinRoomResponse";
        EParameterCodes[EParameterCodes["LeaveRoomResponse"] = 13] = "LeaveRoomResponse";
        EParameterCodes[EParameterCodes["RoomInfoResponse"] = 15] = "RoomInfoResponse";
        EParameterCodes[EParameterCodes["ExchangeMessage"] = 16] = "ExchangeMessage";
        EParameterCodes[EParameterCodes["CashInResponse"] = 17] = "CashInResponse";
        EParameterCodes[EParameterCodes["CashOutResponse"] = 18] = "CashOutResponse";
        EParameterCodes[EParameterCodes["ExChangeHistoryResponse"] = 19] = "ExChangeHistoryResponse";
        EParameterCodes[EParameterCodes["TopJackpotResponse"] = 20] = "TopJackpotResponse";
        EParameterCodes[EParameterCodes["PlayHistoryResponse"] = 21] = "PlayHistoryResponse";
        EParameterCodes[EParameterCodes["CaptchaResponse"] = 22] = "CaptchaResponse";
        EParameterCodes[EParameterCodes["ChangeGunMessage"] = 23] = "ChangeGunMessage";
        EParameterCodes[EParameterCodes["ChangeGunResponse"] = 24] = "ChangeGunResponse";
        EParameterCodes[EParameterCodes["ShootingMessage"] = 25] = "ShootingMessage";
        EParameterCodes[EParameterCodes["ShootingResponse"] = 26] = "ShootingResponse";
        EParameterCodes[EParameterCodes["FishShotMessage"] = 27] = "FishShotMessage";
        EParameterCodes[EParameterCodes["HeadShotResponse"] = 28] = "HeadShotResponse";
        EParameterCodes[EParameterCodes["TimeToUse"] = 29] = "TimeToUse";
        EParameterCodes[EParameterCodes["DoubleConfigsResponse"] = 30] = "DoubleConfigsResponse";
        EParameterCodes[EParameterCodes["DoubleValuesCanPlay"] = 31] = "DoubleValuesCanPlay";
        EParameterCodes[EParameterCodes["DoubleMessage"] = 32] = "DoubleMessage";
        EParameterCodes[EParameterCodes["DoubleMessageResponse"] = 33] = "DoubleMessageResponse";
        EParameterCodes[EParameterCodes["ChatMessage"] = 38] = "ChatMessage";
        EParameterCodes[EParameterCodes["ChatResponse"] = 39] = "ChatResponse";
        EParameterCodes[EParameterCodes["ErrorCode"] = 40] = "ErrorCode";
        EParameterCodes[EParameterCodes["CurrencyId"] = 41] = "CurrencyId";
        EParameterCodes[EParameterCodes["CurrentJackpot"] = 42] = "CurrentJackpot";
        EParameterCodes[EParameterCodes["AccountId"] = 43] = "AccountId";
        EParameterCodes[EParameterCodes["PortalId"] = 44] = "PortalId";
        EParameterCodes[EParameterCodes["CashoutMinResponse"] = 45] = "CashoutMinResponse";
        return EParameterCodes;
      }(EParameterCodes || {});
      var TheSharkPhotonClient = exports('TheSharkPhotonClient', /*#__PURE__*/function (_PhotonClient) {
        _inheritsLoose(TheSharkPhotonClient, _PhotonClient);
        function TheSharkPhotonClient() {
          return _PhotonClient.apply(this, arguments) || this;
        }
        TheSharkPhotonClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new TheSharkPhotonClient();
          }
          return this.instance;
        };
        var _proto = TheSharkPhotonClient.prototype;
        _proto.connect = function connect() {
          _PhotonClient.prototype.connect.call(this, Configs.App.DOMAIN_CONFIG['ServerFish_TheShark']);
        };
        return TheSharkPhotonClient;
      }(PhotonClient));
      TheSharkPhotonClient.instance = void 0;
      TheSharkPhotonClient.EOperationSubCodes = EOperationSubCodes;
      TheSharkPhotonClient.EParameterCodes = EParameterCodes;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/TimeUtils.ts", ['cc'], function (exports) {
  var cclegacy, _decorator;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
    }],
    execute: function () {
      var _dec, _class, _class2;
      cclegacy._RF.push({}, "761c4r7fCZLrIcT4qTFRPgo", "TimeUtils", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var TimeUtils = exports('default', (_dec = ccclass("TimeUtils"), _dec(_class = (_class2 = /*#__PURE__*/function () {
        function TimeUtils() {}
        TimeUtils.currentTimeMillis = function currentTimeMillis() {
          return Date.now();
        };
        TimeUtils.serverTime = function serverTime() {
          return Math.ceil(this.currentTimeMillis() - this.minDistanceTime + this.minPing / 2);
        };
        return TimeUtils;
      }(), _class2.ping = 0, _class2.minPing = -1, _class2.minDistanceTime = 0, _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/TLMNUtility.ts", ['cc'], function (exports) {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "f6f47mg6FNApIxgiGiYw6Z9", "TLMNUtility", undefined);
      var TLMNUtility = exports('TLMNUtility', /*#__PURE__*/function () {
        function TLMNUtility() {
          this.preventable = [[1, 3, 4, 5],
          // chan 2
          [1],
          // chan doi
          [2],
          // chan bo ba
          [3, 5],
          // chan tu quy
          [3, 4, 5],
          // chan ba doi thong
          [5],
          //chan bon doi thong
          [6] // chan day
          ];

          console.log("TLMNUtility initialized");
        }
        var _proto = TLMNUtility.prototype;
        _proto.getGroupType = function getGroupType(cards) {
          if (!cards) return -1;
          if (cards.length <= 0) {
            return -1; // no suggest
          }

          if (cards.length == 1 && cards[0].rank != 2) {
            return -1; // no suggest
          }

          if (cards.length == 1 && cards[0].rank == 2) {
            return TLMNUtility.HAI;
          }
          if (cards.length == 2 && cards[0].rank == 2 && cards[1].rank == 2) {
            return TLMNUtility.HAI;
          }
          var rankFreq = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
          var suitFreq = [0, 0, 0, 0];
          for (var i = 0; i < cards.length; i++) {
            rankFreq[cards[i].rank]++;
            suitFreq[cards[i].suit]++;
          }
          rankFreq[14] = rankFreq[1];

          //doi, ba , tu quy
          for (var i = 0; i < rankFreq.length; i++) {
            if (rankFreq[i] == cards.length) {
              switch (cards.length) {
                case 2:
                  return TLMNUtility.DOI;
                case 3:
                  return TLMNUtility.BA;
                case 4:
                  return TLMNUtility.TUQUY;
              }
            }
          }
          if (cards.length == 6) {
            for (var i = 0; i < rankFreq.length - 2; i++) {
              if (rankFreq[i] == 2 && rankFreq[i + 1] == 2 && rankFreq[i + 2] == 2) {
                return TLMNUtility.BADOITHONG;
              }
            }
          }
          if (cards.length == 8) {
            for (var i = 0; i < rankFreq.length - 3; i++) {
              if (rankFreq[i] == 2 && rankFreq[i + 1] == 2 && rankFreq[i + 2] == 2 && rankFreq[i + 3] == 2) {
                return TLMNUtility.BONDOITHONG;
              }
            }
          }
          var longestStreak = 0;
          var currentStreak = 0;
          for (var i = 0; i < rankFreq.length; i++) {
            if (rankFreq[i] == 1) {
              currentStreak++;
              longestStreak = longestStreak > currentStreak ? longestStreak : currentStreak;
            } else {
              currentStreak = 0;
            }
          }
          if (longestStreak == cards.length && longestStreak >= 3) {
            return TLMNUtility.DAY;
          }
          return -1;
        };
        _proto.getSuggestedCards = function getSuggestedCards(cards, handCards) {
          var suggestGroups = [];
          if (!cards) {
            suggestGroups = suggestGroups.concat(this.findDoiThong(handCards, null, null, 3, 0));
            suggestGroups = suggestGroups.concat(this.findDoiThong(handCards, null, null, 4, 0));
            for (var i = 3; i < 13; i++) {
              suggestGroups = suggestGroups.concat(this.findDay(handCards, null, null, i, null, null));
            }
            suggestGroups = suggestGroups.concat(this.findSameCards(handCards, null, null, 2, 0));
            suggestGroups = suggestGroups.concat(this.findSameCards(handCards, null, null, 3, 0));
            suggestGroups = suggestGroups.concat(this.findSameCards(handCards, null, null, 4, 0));
            return suggestGroups;
          }
          var groupType = this.getGroupType(cards);
          if (groupType == -1) {
            return [];
          }
          var rankFreq = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
          var suitFreq = [0, 0, 0, 0];
          for (var i = 0; i < handCards.length; i++) {
            rankFreq[handCards[i].rank]++;
            suitFreq[handCards[i].suit]++;
          }
          var preventableGroupType = this.preventable[groupType];

          // special handler pair 2
          if (groupType == TLMNUtility.HAI && cards.length == 1) {
            preventableGroupType = [3, 4, 5];
          }
          var minRank = cards[0].rank;
          for (var i = 1; i < cards.length; i++) {
            minRank = cards[i].rank < minRank ? cards[i].rank : minRank;
          }
          for (var i = 0; i < preventableGroupType.length; i++) {
            switch (preventableGroupType[i]) {
              //suit
              case TLMNUtility.DOI:
                suggestGroups = suggestGroups.concat(this.findSameCards(handCards, rankFreq, suitFreq, 2, minRank));
                break;
              case TLMNUtility.BA:
                suggestGroups = suggestGroups.concat(this.findSameCards(handCards, rankFreq, suitFreq, 3, minRank));
                break;
              case TLMNUtility.TUQUY:
                suggestGroups = suggestGroups.concat(this.findSameCards(handCards, rankFreq, suitFreq, 4, groupType == TLMNUtility.TUQUY ? minRank : 0));
                break;
              case TLMNUtility.BADOITHONG:
                suggestGroups = suggestGroups.concat(this.findDoiThong(handCards, rankFreq, suitFreq, 3, groupType == TLMNUtility.BADOITHONG ? minRank : 0));
                break;
              case TLMNUtility.BONDOITHONG:
                suggestGroups = suggestGroups.concat(this.findDoiThong(handCards, rankFreq, suitFreq, 4, groupType == TLMNUtility.BONDOITHONG ? minRank : 0));
                break;
              case TLMNUtility.DAY:
                suggestGroups = suggestGroups.concat(this.findDay(handCards, rankFreq, suitFreq, cards.length, minRank, cards));
                break;
            }
          }
          return suggestGroups;
        };
        _proto.orderCard = function orderCard(handCards) {
          var handCardsCopy = [].concat(handCards);

          //
          var bondoithong = [];
          var find4doithong = this.findDoiThong(handCardsCopy, null, null, 4, 0);
          if (find4doithong.length > 0) bondoithong = find4doithong[0];
          console.log(bondoithong);

          //@ts-ignore
          handCardsCopy = [].concat(handCardsCopy.filter(function (e) {
            return !bondoithong.includes(e);
          }));
          var badoithong = [];
          var find3doithong = this.findDoiThong(handCardsCopy, null, null, 3, 0);
          if (find3doithong.length > 0) badoithong = find3doithong[0];
          //@ts-ignore
          handCardsCopy = [].concat(handCardsCopy.filter(function (e) {
            return !badoithong.includes(e);
          }));
          var tuquy = [];
          var findtuquy1 = this.findSameCards(handCardsCopy, null, null, 4, 0);
          console.log(findtuquy1);
          findtuquy1.forEach(function (element) {
            tuquy = tuquy.concat(element);
          });
          //@ts-ignore
          handCardsCopy = [].concat(handCardsCopy.filter(function (e) {
            return !tuquy.includes(e);
          }));
          var isFindSanh = true;
          var sanh = [];
          while (isFindSanh) {
            var sanhtemp = this.findSanhToDie(handCardsCopy);
            sanh = sanh.concat(sanhtemp);
            if (sanhtemp.length <= 0) {
              isFindSanh = false;
            }
            //@ts-ignore
            handCardsCopy = [].concat(handCardsCopy.filter(function (e) {
              return !sanhtemp.includes(e);
            }));
          }
          var isFindBoBa = true;
          var boba = [];
          while (isFindBoBa) {
            var sanhtemp = this.findSameCards(handCardsCopy, null, null, 3, 0);
            sanhtemp.forEach(function (element) {
              boba = boba.concat(element);
            });
            if (sanhtemp.length <= 0) {
              isFindBoBa = false;
            }
            //@ts-ignore
            handCardsCopy = [].concat(handCardsCopy.filter(function (e) {
              return !boba.includes(e);
            }));
          }
          var isFindBoDoi = true;
          var bodoi = [];
          while (isFindBoDoi) {
            var sanhtemp = this.findSameCards(handCardsCopy, null, null, 2, 0);
            sanhtemp.forEach(function (element) {
              bodoi = bodoi.concat(element);
            });
            if (sanhtemp.length <= 0) {
              isFindBoDoi = false;
            }
            //@ts-ignore
            handCardsCopy = [].concat(handCardsCopy.filter(function (e) {
              return !bodoi.includes(e);
            }));
          }
          handCardsCopy.sort(function (a, b) {
            return a.rank - b.rank;
          });
          console.log(sanh);
          var ressuf = [];
          ressuf = ressuf.concat(bondoithong, badoithong, tuquy, sanh, boba, bodoi, handCardsCopy);
          console.log(ressuf);
          return ressuf;
        };
        _proto.findSanhToDie = function findSanhToDie(handCardsCopy) {
          var sanh = [];
          var sanhTemp = [];
          for (var i = 3; i < 13; i++) {
            var sanhday = this.findDay(handCardsCopy, null, null, i, null, null);
            if (sanhday.length > 0) sanhTemp.push(sanhday[0]);
          }
          if (sanhTemp.length > 0) {
            sanh = [].concat(sanhTemp[sanhTemp.length - 1]);
          }
          console.log(sanh);
          return sanh;
        };
        _proto.findDay = function findDay(handCards, rankFreq, suitFreq, length, minRank, source) {
          if (length > handCards.length) return [];
          if (length < 3) return [];
          if (!rankFreq || !suitFreq) {
            rankFreq = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            suitFreq = [0, 0, 0, 0];
            for (var i = 0; i < handCards.length; i++) {
              rankFreq[handCards[i].rank]++;
              suitFreq[handCards[i].suit]++;
            }
          }
          var sameCards = [];
          var result = [];
          for (var i = 0; i < handCards.length; i++) {
            if (!sameCards[handCards[i].rank]) sameCards[handCards[i].rank] = [];
            sameCards[handCards[i].rank].push(handCards[i]);
          }
          rankFreq[14] = rankFreq[1];
          sameCards[14] = sameCards[1];
          for (var i = 3; i <= 15 - length; i++) {
            var isLegal = true;
            for (var j = 0; j < length; j++) {
              if (!rankFreq[i + j]) {
                isLegal = false;
                break;
              }
            }
            if (!isLegal) continue;
            if (i < minRank) continue;
            var fcallStr = "this.getCombination(";
            for (var j = 0; j < length; j++) {
              fcallStr += "sameCards[" + (i + j) + "],";
            }
            fcallStr += ");";
            fcallStr = fcallStr.replace(",)", ")");

            //console.log(fcallStr);
            var groups = eval(fcallStr);
            if (!source) {
              result = result.concat(groups);
            } else {
              for (var j = 0; j < groups.length; j++) {
                if (this.isGreaterDay(source, groups[j])) result.push(groups[j]);
              }
            }
          }
          return result;
        };
        _proto.isGreaterDay = function isGreaterDay(source, dest) {
          if (source.length != dest.length) return false;
          var comparefn = function comparefn(a, b) {
            var cmpRankA = a.rank < 3 ? a.rank + 13 : a.rank;
            var cmpRankB = b.rank < 3 ? b.rank + 13 : b.rank;
            return cmpRankA - cmpRankB;
          };
          source.sort(comparefn);
          dest.sort(comparefn);
          if (dest[0].rank > source[0].rank) return true;
          if (dest[0].rank < source[0].rank) return false;
          return source[source.length - 1].suit < dest[source.length - 1].suit;
        }

        // tim doi, bo ba, tu quy
        ;

        _proto.findSameCards = function findSameCards(handCards, rankFreq, suitFreq, length, minRank) {
          if (!rankFreq || !suitFreq) {
            rankFreq = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            suitFreq = [0, 0, 0, 0];
            for (var i = 0; i < handCards.length; i++) {
              rankFreq[handCards[i].rank]++;
              suitFreq[handCards[i].suit]++;
            }
          }
          var sameCards = [];
          var result = [];
          for (var i = 0; i < handCards.length; i++) {
            if (rankFreq[handCards[i].rank] >= length) {
              if (handCards[i].rank > 2 && handCards[i].rank < minRank) continue;
              if (!sameCards[handCards[i].rank]) sameCards[handCards[i].rank] = [];
              sameCards[handCards[i].rank].push(handCards[i]);
            }
          }

          // tach cac bo, them vao ket qua
          for (var i = 0; i < sameCards.length; i++) {
            if (!sameCards[i]) continue;

            // truong hop dung 2 doi cung rank chan nhau, doi chan phai co chat co* ( heart )
            if (length == 2 && sameCards[i][0].suit != 3 && sameCards[i][1].suit != 3 && i == minRank) continue;

            // A 2 la to nhat
            if (minRank <= 2 && i >= 3 && minRank != 0) continue;
            for (var j = 0; j <= sameCards[i].length - length; j++) {
              result.push(sameCards[i].slice(j, length + j));
            }
          }
          return result;
        };
        _proto.findDoiThong = function findDoiThong(handCards, rankFreq, suitFreq, length, minRank) {
          minRank = minRank || 0;
          if (length != 3 && length != 4) {
            return [];
          }
          if (!rankFreq || !suitFreq) {
            rankFreq = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            suitFreq = [0, 0, 0, 0];
            for (var i = 0; i < handCards.length; i++) {
              rankFreq[handCards[i].rank]++;
              suitFreq[handCards[i].suit]++;
            }
          }
          var sameCards = [];
          var result = [];
          for (var i = 0; i < handCards.length; i++) {
            if (rankFreq[handCards[i].rank] >= 2) {
              if (!sameCards[handCards[i].rank]) sameCards[handCards[i].rank] = [];
              sameCards[handCards[i].rank].push(handCards[i]);
            }
          }
          rankFreq[14] = rankFreq[1]; // A
          sameCards[14] = sameCards[1];
          if (length == 3) {
            for (var i = 3; i < 13; i++) {
              if (i < minRank) continue;
              if (rankFreq[i] >= 2 && rankFreq[i + 1] >= 2 && rankFreq[i + 2] >= 2) {
                var isLegal = i >= minRank;
                if (i == minRank && isLegal) {
                  isLegal = false;
                  for (var j = 0; j < sameCards[i + 2].length; j++) {
                    isLegal = isLegal || sameCards[i + 2][j].suit == 3;
                  }
                }
                if (!isLegal) continue;
                result = result.concat(this.getCombination(
                // @ts-ignore
                this.getSubGroup(sameCards[i], 2), this.getSubGroup(sameCards[i + 1], 2), this.getSubGroup(sameCards[i + 2], 2)));
              }
            }
          }
          if (length == 4) {
            for (var i = 3; i < 12; i++) {
              if (i < minRank) continue;
              if (rankFreq[i] >= 2 && rankFreq[i + 1] >= 2 && rankFreq[i + 2] >= 2 && rankFreq[i + 3] >= 2) {
                var isLegal = i > minRank;
                for (var j = 0; j < sameCards[i + 3].length; j++) {
                  isLegal = isLegal || sameCards[i + 3][j].suit == 3;
                }
                if (!isLegal) continue;
                result = result.concat(this.getCombination(
                // @ts-ignore
                this.getSubGroup(sameCards[i], 2), this.getSubGroup(sameCards[i + 1], 2), this.getSubGroup(sameCards[i + 2], 2), this.getSubGroup(sameCards[i + 3], 2)));
              }
            }
          }
          return result;
        };
        _proto.getCombination = function getCombination() {
          var result = [];
          var pre = arguments[0];
          if (arguments.length == 2) {
            var post = arguments[1].length ? arguments[1] : [arguments[1]];
            for (var i = 0; i < pre.length; i++) {
              for (var j = 0; j < post.length; j++) {
                if (pre[i].length) result.push(pre[i].concat(post[j]));else result.push([pre[i]].concat(post[j]));
              }
            }
            return result;
          }
          var fcallStr = "this.getCombination(";

          //build fcall
          for (var i = 1; i < arguments.length; i++) fcallStr += "arguments[" + i + "],";
          fcallStr += ");";
          fcallStr = fcallStr.replace(",)", ")");
          var recursionResult = eval(fcallStr);
          for (var i = 0; i < pre.length; i++) {
            for (var j = 0; j < recursionResult.length; j++) {
              if (pre[i].length) result.push(pre[i].concat(recursionResult[j]));else result.push([pre[i]].concat(recursionResult[j]));
            }
          }
          return result;
        };
        _proto.getSubGroup = function getSubGroup(group, length) {
          var result = [];
          for (var i = 0; i <= group.length - length; i++) result.push(group.slice(i, i + length));
          return result;
        };
        return TLMNUtility;
      }());
      TLMNUtility.HAI = 0;
      TLMNUtility.DOI = 1;
      TLMNUtility.BA = 2;
      TLMNUtility.TUQUY = 3;
      TLMNUtility.BADOITHONG = 4;
      TLMNUtility.BONDOITHONG = 5;
      TLMNUtility.DAY = 6;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/TournamentAnimator.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Component;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor, _descriptor2;
      cclegacy._RF.push({}, "7c9f1l+8pdEYKnEzLVLz+f6", "TournamentAnimator", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var TournamentAnimator = exports('default', (_dec = ccclass('TournamentAnimator'), _dec2 = property({
        type: [Node]
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(TournamentAnimator, _Component);
        function TournamentAnimator() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "letters", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "interval", _descriptor2, _assertThisInitialized(_this));
          _this.currentIndex = 0;
          return _this;
        }
        var _proto = TournamentAnimator.prototype;
        _proto.onLoad = function onLoad() {
          this.letters.forEach(function (letter) {
            return letter.active = false;
          });
          this.schedule(this.showNextLetters.bind(this), this.interval);
        };
        _proto.showNextLetters = function showNextLetters() {
          this.letters.forEach(function (letter) {
            return letter.active = false;
          });
          if (this.currentIndex === 0) {
            this.letters[0].active = true;
          } else {
            var current = this.currentIndex % this.letters.length;
            var next = (current + 1) % this.letters.length;
            this.letters[current].active = true;
            this.letters[next].active = true;
          }
          this.currentIndex = (this.currentIndex + 1) % this.letters.length;
        };
        return TournamentAnimator;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "letters", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "interval", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0.3;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/TweenUtils.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Utils.ts'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, Node, director, Component, Utils;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      director = module.director;
      Component = module.Component;
    }, function (module) {
      Utils = module.Utils;
    }],
    execute: function () {
      var _dec, _class2, _class3;
      cclegacy._RF.push({}, "d4a3ak3+E1K+L7Z9tvq4VPO", "TweenUtils", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var TweenListener = exports('TweenListener', function TweenListener() {
        this.target = null;
        this.duration = 0;
        this.curDuration = 0;
        this.callback = null;
      });
      var TweenUtils = exports('TweenUtils', (_dec = ccclass('TweenUtils'), _dec(_class2 = (_class3 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(TweenUtils, _Component);
        function TweenUtils() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _this.skeepFrame = false;
          _this.countSkeep = 1;
          _this.curCountSkeep = 0;
          _this.delta = 0;
          return _this;
        }
        TweenUtils.getInstance = function getInstance() {
          if (this.instance == null) {
            var node = new Node("Tween");
            director.addPersistRootNode(node);
            this.instance = node.addComponent(TweenUtils);
          }
          return this.instance;
        };
        var _proto = TweenUtils.prototype;
        _proto.update = function update(dt) {
          if (this.skeepFrame) {
            this.curCountSkeep++;
            this.delta += dt;
            if (this.curCountSkeep >= this.countSkeep) {
              this.curCountSkeep = 0;
              this.skeepFrame = false;
            }
            return;
          }
          for (var i = 0; i < TweenUtils.listeners.length; i++) {
            var listener = TweenUtils.listeners[i];
            if (listener.target && listener.target instanceof Component && listener.target.node) {
              listener.curDuration = Math.min(listener.duration, listener.curDuration + dt + this.delta);
              listener.callback(listener.curDuration / listener.duration);
              if (listener.curDuration >= listener.duration) {
                TweenUtils.listeners.splice(i--, 1);
              }
            } else {
              TweenUtils.listeners.splice(i--, 1);
            }
          }
          this.skeepFrame = true;
          this.delta = 0;
        };
        TweenUtils.numberTo = function numberTo(label, toNumber, duration, format) {
          if (format === void 0) {
            format = function format(n) {
              return Utils.formatNumber(n);
            };
          }
          this.getInstance();
          var listener = null;
          for (var i = 0; i < TweenUtils.listeners.length; i++) {
            var _listener = TweenUtils.listeners[i];
            if (_listener.target == label) {
              listener = _listener;
              break;
            }
          }
          if (listener == null) {
            listener = new TweenListener();
            this.listeners.push(listener);
          }
          var startNumber = parseInt(label.string.replace(/\./g, "")) || 0; //Utils.stringToInt(label.string);
          var distance = toNumber - startNumber;
          listener.curDuration = 0;
          listener.duration = duration;
          listener.target = label;
          listener.callback = function (p) {
            label.string = format(parseInt("" + (startNumber + distance * p)));
          };
        };
        return TweenUtils;
      }(Component), _class3.instance = null, _class3.listeners = new Array(), _class3)) || _class2));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/TwoInviteQRCodePrefab.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './GraphicsQRCode.ts', './Canvas2Image.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Camera, Prefab, UITransform, instantiate, Size, v3, RenderTexture, math, view, sys, native, assetManager, Vec3, SpriteFrame, Texture2D, Sprite, error, Component, GraphicsQRCode, Canvas2Image;
  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Camera = module.Camera;
      Prefab = module.Prefab;
      UITransform = module.UITransform;
      instantiate = module.instantiate;
      Size = module.Size;
      v3 = module.v3;
      RenderTexture = module.RenderTexture;
      math = module.math;
      view = module.view;
      sys = module.sys;
      native = module.native;
      assetManager = module.assetManager;
      Vec3 = module.Vec3;
      SpriteFrame = module.SpriteFrame;
      Texture2D = module.Texture2D;
      Sprite = module.Sprite;
      error = module.error;
      Component = module.Component;
    }, function (module) {
      GraphicsQRCode = module.GraphicsQRCode;
    }, function (module) {
      Canvas2Image = module.Canvas2Image;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;
      cclegacy._RF.push({}, "af68eaB0YBLbqbKStui+5Gx", "TwoInviteQRCodePrefab", undefined);
      var ccclass = _decorator.ccclass,
        property = _decorator.property;
      var TwoInviteQRCodePrefab = exports('TwoInviteQRCodePrefab', (_dec = ccclass('TwoInviteQRCodePrefab'), _dec2 = property(Node), _dec3 = property(Camera), _dec4 = property(Prefab), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(TwoInviteQRCodePrefab, _Component);
        function TwoInviteQRCodePrefab() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _initializerDefineProperty(_this, "root", _descriptor, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "rootCamera", _descriptor2, _assertThisInitialized(_this));
          _initializerDefineProperty(_this, "qrcodePrefab", _descriptor3, _assertThisInitialized(_this));
          _this.rt = null;
          _this._buffer = null;
          _this._canvas = null;
          _this.canvas2image = null;
          return _this;
        }
        var _proto = TwoInviteQRCodePrefab.prototype;
        _proto.setURL = function setURL(url) {
          this.initView(url);
          this.initClampTexture();
        };
        _proto.initView = function initView(url) {
          var rootTransform = this.root.getComponent(UITransform);
          var qrcode = instantiate(this.qrcodePrefab);
          this.root.addChild(qrcode);
          var qrcodeTS = qrcode.getComponent(GraphicsQRCode);
          qrcodeTS.setURL(url);
          qrcodeTS.createQRCode(new Size(170, 170));
          qrcode.setPosition(v3(210, 45, 0));
        };
        _proto.initClampTexture = function initClampTexture() {
          var _this2 = this;
          this.canvas2image = Canvas2Image.getInstance();
          this.rt = new RenderTexture();
          var rtSize = new math.Size();
          rtSize.width = Math.round(view.getVisibleSize().width);
          rtSize.height = Math.round(view.getVisibleSize().height);
          this.rt.reset(rtSize);
          this.rootCamera.targetTexture = this.rt;
          this.scheduleOnce(function () {
            _this2.beginClampTexture();
          }, 0.1);
        };
        _proto.beginClampTexture = function beginClampTexture() {
          var rootTransform = this.root.getComponent(UITransform);
          var worldPos = this.root.getWorldPosition();
          this._buffer = this.rt.readPixels(Math.round(worldPos.x - rootTransform.width * 0.5), Math.round(worldPos.y - rootTransform.height * 0.5), Math.round(rootTransform.width), Math.round(rootTransform.height));
          // this.showImage(rootTransform.width, rootTransform.height);
        }

        // showImage(width: number, height: number) {
        //     let img = new ImageAsset();
        //     img.reset({
        //         _data: this._buffer,
        //         width: width,
        //         height: height,
        //         format: Texture2D.PixelFormat.RGBA8888,
        //         _compressed: false
        //     });
        //     let texture = new Texture2D();
        //     texture.image = img;
        //     let sf = new SpriteFrame();
        //     sf.texture = texture;
        //     sf.packable = false;
        //     this.copy!.getComponent(Sprite).spriteFrame = sf;
        //     this.copy!.getComponent(Sprite).spriteFrame.flipUVY = true;
        //     if (sys.isNative && (sys.os === sys.OS.IOS || sys.os === sys.OS.OSX)) {
        //         this.copy!.getComponent(Sprite).spriteFrame.flipUVY = false;
        //     }
        //     const copyTransform = this.copy?.getComponent(UITransform);
        //     copyTransform?.setContentSize(new Size(width, height));
        // }
        ;

        _proto.onSaveQRCodeClicked = function onSaveQRCodeClicked() {
          var rootTransform = this.root.getComponent(UITransform);
          this.savaAsImage(rootTransform.width, rootTransform.height, this._buffer);
        };
        _proto.savaAsImage = function savaAsImage(width, height, arrayBuffer) {
          var _this3 = this;
          var w = Math.floor(width);
          var h = Math.floor(height);
          if (sys.isBrowser) {
            if (!this._canvas) {
              this._canvas = document.createElement('canvas');
              this._canvas.width = w;
              this._canvas.height = h;
            } else {
              this.clearCanvas();
            }
            var _ctx = this._canvas.getContext('2d');
            var _rowBytes = w * 4;
            for (var _row = 0; _row < h; _row++) {
              var _sRow = h - 1 - _row;
              var _imageData = _ctx.createImageData(w, 1);
              var _start = _sRow * w * 4;
              for (var _i = 0; _i < _rowBytes; _i++) {
                _imageData.data[_i] = arrayBuffer[_start + _i];
              }
              _ctx.putImageData(_imageData, 0, _row);
            }

            //@ts-ignore
            this.canvas2image.saveAsPNG(this._canvas, w, h);
            // this.tips.string = `保存图片成功`;
            this.showTipPopup("保存图片成功");
          } else if (sys.isNative) {
            // console.log("原生平台暂不支持图片下载");
            // return;
            var filePath = native.fileUtils.getWritablePath() + 'render_to_sprite_image.png';

            // 目前 3.0.0 ~ 3.4.0 版本还不支持 jsb.saveImageData ,引擎计划在 3.5.0 支持, 要保存 imageData 为本地 png 文件需要参考下方的 pr 定制引擎
            // https://gitee.com/zzf2019/engine-native/commit/1ddb6ec9627a8320cd3545d353d8861da33282a8

            //@ts-ignore
            if (native.saveImageData) {
              //@ts-ignore
              var success = native.saveImageData(this._buffer, width, height, filePath);
              if (success) {
                // 用于测试图片是否正确保存到本地设备路径下
                assetManager.loadRemote(filePath, function (err, imageAsset) {
                  if (err) {
                    console.log("show image error");
                  } else {
                    var newNode = instantiate(_this3.root);
                    newNode.setPosition(new Vec3(-newNode.position.x, newNode.position.y, newNode.position.z));
                    _this3.root.parent.addChild(newNode);
                    var spriteFrame = new SpriteFrame();
                    var texture = new Texture2D();
                    texture.image = imageAsset;
                    spriteFrame.texture = texture;
                    newNode.getComponent(Sprite).spriteFrame = spriteFrame;
                    spriteFrame.packable = false;
                    spriteFrame.flipUVY = true;
                    if (sys.isNative && (sys.os === sys.OS.IOS || sys.os === sys.OS.OSX)) {
                      spriteFrame.flipUVY = false;
                    }

                    // this.tips.string = `成功保存在设备目录并加载成功: ${filePath}`;
                    _this3.showTipPopup("成功保存在设备目录并加载成功: " + ("" + filePath));
                  }
                });
                console.log("save image data success, file: " + filePath);
                // this.tips.string = `成功保存在设备目录: ${filePath}`;
                this.showTipPopup("成功保存在设备目录: " + ("" + filePath));
              } else {
                error("save image data failed!");
                // this.tips.string = `保存图片失败`;
                this.showTipPopup("保存图片失败");
              }
            }
          } else if (sys.platform === sys.Platform.WECHAT_GAME) {
            if (!this._canvas) {
              //@ts-ignore
              this._canvas = wx.createCanvas();
              this._canvas.width = width;
              this._canvas.height = height;
            } else {
              this.clearCanvas();
            }
            var ctx = this._canvas.getContext('2d');
            var rowBytes = width * 4;
            for (var row = 0; row < height; row++) {
              var sRow = height - 1 - row;
              var imageData = ctx.createImageData(width, 1);
              var start = sRow * width * 4;
              for (var i = 0; i < rowBytes; i++) {
                imageData.data[i] = arrayBuffer[start + i];
              }
              ctx.putImageData(imageData, 0, row);
            }
            //@ts-ignore
            this._canvas.toTempFilePath({
              x: 0,
              y: 0,
              width: this._canvas.width,
              height: this._canvas.height,
              destWidth: this._canvas.width,
              destHeight: this._canvas.height,
              fileType: "png",
              success: function success(res) {
                //@ts-ignore
                wx.showToast({
                  title: "截图成功"
                });
                // this.tips.string = `截图成功`;
                _this3.showTipPopup("截图成功");
                //@ts-ignore
                wx.saveImageToPhotosAlbum({
                  filePath: res.tempFilePath,
                  success: function success(res) {
                    //@ts-ignore              
                    wx.showToast({
                      title: "成功保存到设备相册"
                    });
                    // this.tips.string = `成功保存在设备目录: ${res.tempFilePath}`;
                    _this3.showTipPopup("成功保存在设备目录: " + ("" + res.tempFilePath));
                  },
                  fail: function fail() {
                    // this.tips.string = `保存图片失败`;
                    _this3.showTipPopup("保存图片失败");
                  }
                });
              },
              fail: function fail() {
                //@ts-ignore
                wx.showToast({
                  title: "截图失败"
                });
                // this.tips.string = `截图失败`;
                _this3.showTipPopup("截图失败");
              }
            });
          }
        };
        _proto.clearCanvas = function clearCanvas() {
          var ctx = this._canvas.getContext('2d');
          ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);
        };
        _proto.showTipPopup = function showTipPopup(contentText) {
          return;
        };
        return TwoInviteQRCodePrefab;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "root", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "rootCamera", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "qrcodePrefab", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Utils.ts", ['cc', './SPUtils.ts'], function (exports) {
  var cclegacy, assetManager, SpriteFrame, UITransform, v3, sys, native, v2, Texture2D, UIOpacity, log, Sprite, SPUtils;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
      assetManager = module.assetManager;
      SpriteFrame = module.SpriteFrame;
      UITransform = module.UITransform;
      v3 = module.v3;
      sys = module.sys;
      native = module.native;
      v2 = module.v2;
      Texture2D = module.Texture2D;
      UIOpacity = module.UIOpacity;
      log = module.log;
      Sprite = module.Sprite;
    }, function (module) {
      SPUtils = module.SPUtils;
    }],
    execute: function () {
      cclegacy._RF.push({}, "e86efcy15xCqJ8SuQDPKLzT", "Utils", undefined);
      var Utils = exports('Utils', /*#__PURE__*/function () {
        function Utils() {}
        Utils.loadImgFromUrl = function loadImgFromUrl(sprite, url, parentScale) {
          if (parentScale === void 0) {
            parentScale = null;
          }
          if (!sprite || !url) return;
          assetManager.loadRemote(url, function (err, asset) {
            if (err || !asset) return;
            sprite.spriteFrame = SpriteFrame.createWithImage(asset);
            if (parentScale) {
              var parentTransform = parentScale.getComponent(UITransform);
              var childTransform = sprite.getComponent(UITransform);
              if (!parentTransform || !childTransform) return;
              var scaleW = parentTransform.width / childTransform.width - 0.1;
              var scaleH = parentTransform.height / childTransform.height - 0.1;
              var scale = Math.max(0.5, Math.min(scaleW, scaleH));
              sprite.node.setScale(v3(scale, scale, scale));
            }
          });
        };
        Utils.loadBannerFromUrl = function loadBannerFromUrl(sprite, url, onLoaded) {
          if (!sprite || !url) return;
          assetManager.loadRemote(url, function (err, asset) {
            if (err || !asset) return;
            sprite.spriteFrame = SpriteFrame.createWithImage(asset);
            if (onLoaded) {
              onLoaded();
            }
          });
        };
        Utils.copy = function copy(text) {
          if (sys.isNative) {
            native == null || native.copyTextToClipboard == null || native.copyTextToClipboard(text);
          } else {
            var el = document.createElement("textarea");
            el.value = text;
            document.body.appendChild(el);
            el.select();
            document.execCommand("copy");
            document.body.removeChild(el);
          }
        };
        Utils.formatString = function formatString(template) {
          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
          }
          return template.replace(/{(\d+)}/g, function (match, index) {
            return args[index];
          });
        };
        Utils.shareNativeWithText = function shareNativeWithText(text) {
          if (sys.os === sys.OS.ANDROID) {
            native.reflection.callStaticMethod("com/cocos/game/AppActivity", "createShareText", "(Ljava/lang/String;Ljava/lang/String;)V", text);
          } else if (sys.os === sys.OS.IOS) {
            native.reflection.callStaticMethod("AppDelegate", "createShareText:", text);
          }
        };
        Utils.degreesToVec2 = function degreesToVec2(degrees) {
          return this.radianToVec2(degrees * this.Deg2Rad);
        };
        Utils.radianToVec2 = function radianToVec2(radian) {
          return v2(Math.cos(radian), Math.sin(radian));
        };
        Utils.numberToEnum = function numberToEnum(value, typeEnum) {
          return typeEnum[typeEnum[value]];
        };
        Utils.ToVND = function ToVND(num) {
          var result = num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
          return result === "NaN" ? "0" : result;
        };
        Utils.ToInt = function ToInt(vnd) {
          return parseInt(vnd.replace(/\./g, "")) || 0;
        };
        Utils.IsJsonString = function IsJsonString(text) {
          try {
            JSON.parse(text);
            return true;
          } catch (_unused) {
            return false;
          }
        };
        Utils.loadSpriteFrameFromBase64 = function loadSpriteFrameFromBase64(base64, callback) {
          var img = new Image();
          var texture = new Texture2D();
          img.onload = function () {
            texture.reset({
              width: img.width,
              height: img.height
            });
            texture.uploadData(img, 0, 0);
            var sp = new SpriteFrame();
            sp.texture = texture;
            callback(sp);
          };
          img.src = "data:image/png;base64," + base64;
        };
        Utils.formatNumberBank = function formatNumberBank(n) {
          return n.replace(/[^0-9]/g, "");
        };
        Utils.formatEditBox = function formatEditBox(n) {
          return parseInt(n.replace(/\./g, "")) || 0;
        };
        Utils.formatNumber = function formatNumber(n) {
          return n.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
        };
        Utils.formatMoney = function formatMoney(money, isForMatK) {
          if (isForMatK === void 0) {
            isForMatK = false;
          }
          var format = "";
          var mo = Math.abs(money);
          if (mo >= 1000000000) {
            mo /= 1000000000;
            format = "B";
          } else if (mo >= 1000000) {
            mo /= 1000000;
            format = "M";
          } else if (mo >= 1000 && isForMatK) {
            mo /= 1000;
            format = "K";
          } else {
            return this.formatNumber(money);
          }
          var str = Math.abs(money).toString();
          var str1 = Math.floor(mo).toString();
          var strResult = str[str1.length] + str[str1.length + 1];
          if (strResult === '00') {
            return (money < 0 ? "-" : "") + Math.floor(mo) + format;
          } else {
            if (strResult[1] === '0') {
              return (money < 0 ? "-" : "") + Math.floor(mo) + "." + strResult[0] + format;
            } else return (money < 0 ? "-" : "") + Math.floor(mo) + "." + strResult + format;
          }
        };
        Utils.formatMoneyOnlyK = function formatMoneyOnlyK(money) {
          if (money < 1000) return money.toString();
          var mo = Math.floor(money / 100) / 10;
          return this.formatNumber(mo) + "K";
        };
        Utils.removeDot = function removeDot(val) {
          return parseInt(val.replace(/[,+]/g, "")) || 0;
        };
        Utils.formatNumberMin = function formatNumberMin(value) {
          if (value < 1000) return value;
          var suffixes = ["", "K", "M", "B", "T"];
          var suffixNum = Math.floor(("" + value).length / 3);
          var shortValue = value / Math.pow(1000, suffixNum);
          for (var precision = 2; precision >= 1; precision--) {
            shortValue = parseFloat(shortValue.toPrecision(precision));
            if ((shortValue + "").replace(/[^a-zA-Z0-9]+/g, "").length <= 2) break;
          }
          return shortValue + suffixes[suffixNum];
        };
        Utils.stringToInt = function stringToInt(s) {
          var n = parseInt(s.replace(/[.,]/g, ""));
          return isNaN(n) ? 0 : n;
        };
        Utils.randomRangeInt = function randomRangeInt(min, max) {
          return Math.floor(Math.random() * (max - min)) + min;
        };
        Utils.randomRange = function randomRange(min, max) {
          return Math.random() * (max - min) + min;
        };
        Utils.v2Distance = function v2Distance(v1, v2) {
          return Math.sqrt(Math.pow(v2.x - v1.x, 2) + Math.pow(v2.y - v1.y, 2));
        };
        Utils.v2Degrees = function v2Degrees(v1, v2) {
          return Math.atan2(v2.y - v1.y, v2.x - v1.x) * 180 / Math.PI;
        };
        Utils.dateToYYYYMMdd = function dateToYYYYMMdd(date) {
          var mm = date.getMonth() + 1;
          var dd = date.getDate();
          return [date.getFullYear(), (mm > 9 ? '' : '0') + mm, (dd > 9 ? '' : '0') + dd].join('-');
        };
        Utils.dateToYYYYMM = function dateToYYYYMM(date) {
          var mm = date.getMonth() + 1;
          return [date.getFullYear(), (mm > 9 ? '' : '0') + mm].join('-');
        };
        Utils.removeDuplicate = function removeDuplicate(array) {
          return [].concat(new Set(array));
        };
        Utils.setOpacity = function setOpacity(node, opacity) {
          var comp = this.addOrGetComponent(node, UIOpacity);
          comp.opacity = opacity;
        };
        Utils.getOrAddOpacity = function getOrAddOpacity(node) {
          return this.addOrGetComponent(node, UIOpacity);
        };
        Utils.replaceAt = function replaceAt(str, index, replacement) {
          return str.substring(0, index) + replacement + str.substring(index + replacement.length);
        };
        Utils.notEmpty = function notEmpty(value) {
          return value !== null && value !== undefined;
        };
        Utils.getOs = function getOs() {
          if (sys.os === sys.OS.ANDROID) return sys.isBrowser ? "web" : "and";
          if (sys.os === sys.OS.IOS) return sys.isBrowser ? "web" : "ios";
          return "web";
        };
        Utils.convertTime = function convertTime(dateFormat) {
          var date = new Date(dateFormat);
          var pad = function pad(v) {
            return v < 10 ? "0" + v : v;
          };
          return pad(date.getDate()) + "/" + pad(date.getMonth() + 1) + "/" + date.getFullYear() + " " + pad(date.getHours()) + ":" + pad(date.getMinutes()) + ":" + pad(date.getSeconds());
        };
        Utils.checkOnlyLettersAndNumbers = function checkOnlyLettersAndNumbers(str) {
          return /^[a-zA-Z0-9.,*$!@#%&\-+_=~^]+$/.test(str);
        };
        Utils.addOrGetComponent = function addOrGetComponent(node, componentType) {
          return node.getComponent(componentType) || node.addComponent(componentType);
        };
        Utils.getStorageKey = function getStorageKey(key) {
          return sys.localStorage.getItem(key);
        };
        Utils.setStorageValue = function setStorageValue(key, value) {
          sys.localStorage.setItem(key, value);
        };
        Utils.removeStorageKey = function removeStorageKey(key) {
          sys.localStorage.removeItem(key);
        };
        Utils.getClientToken = function getClientToken() {
          return this.getStorageKey('client-token') || '';
        };
        Utils.getTicks = function getTicks() {
          var ticksPerSecond = 10000000;
          var unixEpochStartTicks = 621355968000000000;
          var now = Date.now();
          var gmt7OffsetMilliseconds = 7 * 60 * 60 * 1000;
          var adjustedNow = now + gmt7OffsetMilliseconds;
          var currentTicks = unixEpochStartTicks + adjustedNow * (ticksPerSecond / 1000);
          // @ts-ignore
          return BigInt(currentTicks).toString();
        };
        Utils.getDeviceId = function getDeviceId() {
          if (sys.isBrowser) {
            var _deviceID;
            if (localStorage.getItem("deviceID")) {
              _deviceID = localStorage.getItem("deviceID");
            } else {
              _deviceID = 'web-' + Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);
              localStorage.setItem("deviceID", _deviceID);
            }
            return _deviceID;
          }
          var deviceID;
          if (sys.os === sys.OS.ANDROID) {
            deviceID = native.reflection.callStaticMethod("com/cocos/game/AppActivity", "getDeviceId2", "()Ljava/lang/String;");
          }
          if (sys.os === sys.OS.IOS) {
            // @ts-expect-error:
            deviceID = native.reflection.callStaticMethod("AppDelegate", "getDeviceID");
          }
          return deviceID;
        };
        Utils.getBundle = function getBundle() {
          var deviceID = "";
          if (sys.os == sys.OS.ANDROID) {
            deviceID = native.reflection.callStaticMethod("com/cocos/game/AppActivity", "getBundle", "()Ljava/lang/String;");
          }
          if (sys.os == sys.OS.IOS) {
            // @ts-expect-error:
            deviceID = native.reflection.callStaticMethod("AppDelegate", "getBundleID");
          }
          return deviceID;
        };
        Utils.isBrowser = function isBrowser() {
          return sys.isBrowser;
        };
        Utils.encryptWithRSA = function encryptWithRSA(plaintext) {
          var publicKeyPem = SPUtils.getRSAPublicKey();
          var encrypt = new JSEncrypt();
          encrypt.setPublicKey(publicKeyPem);
          return encrypt.encrypt(plaintext);
          // const publicKeyPem = SPUtils.getRSAPublicKey();
          // const publicKey = window.forge.pki.publicKeyFromPem(publicKeyPem);
          // const encryptedBytes = publicKey.encrypt(plaintext);

          // return window.forge.util.encode64(encryptedBytes)
        };

        Utils.Log = function Log() {
          for (var _len2 = arguments.length, data = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            data[_key2] = arguments[_key2];
          }
          log(data);
        };
        Utils.formatDatetime88 = function formatDatetime88(inputString) {
          var date = new Date(inputString);

          // Step 2: Extract day, month, and year
          var day = date.getDate().toString().padStart(2, '0'); // Ensures two digits for the day
          var month = (date.getMonth() + 1).toString().padStart(2, '0'); // Month is zero-based
          var year = date.getFullYear();

          // Step 3: Format the date into "DD/MM/YYYY"
          var formattedDate = day + "/" + month + "/" + year;
          return formattedDate;
        };
        Utils.formatDatetime = function formatDatetime(inputString, format) {
          var date = new Date(inputString);
          var pad = function pad(num) {
            return num < 10 ? '0' + num : num.toString();
          };
          var replacements = {
            "dd": pad(date.getDate()),
            "MM": pad(date.getMonth() + 1),
            "yyyy": date.getFullYear().toString(),
            "HH": pad(date.getHours()),
            "mm": pad(date.getMinutes()),
            "ss": pad(date.getSeconds())
          };
          return format.replace(/dd|MM|yyyy|HH|mm|ss/g, function (match) {
            return replacements[match];
          });
        };
        Utils.formatNameBank = function formatNameBank(n) {
          var name = n.toLowerCase();
          var arr = {
            "àáảãạăắằẳẵặâấầẩẫậ": "a",
            "óòỏõọơớờởỡợôốồổỗộ": "o",
            "éèẻẽẹêếềểễệ": "e",
            "úùủũụưứừửữự": "u",
            "íìỉĩị": "i",
            "ýỳỷỹỵ": "y",
            "đ": "d",
            "~!@#$%^&*()_+`[]\{}|;':*-+\",./<>?0123456789": "_"
          };
          for (var i = 0; i < name.length; i++) {
            for (var key in arr) {
              for (var j = 0; j < key.length; j++) {
                if (name[i] == key[j]) {
                  name = name.replace(name[i], arr[key]);
                }
              }
            }
          }
          name = name.replace(/_/g, '');
          // name = name.replace(/[^a-zA-Z ]/g, "");
          name = name.toUpperCase();
          return name;
        };
        Utils.formatName = function formatName(n) {
          var name = n;
          var arr = {
            "àáảãạăắằẳẵặâấầẩẫậ": "a",
            "óòỏõọơớờởỡợôốồổỗộ": "o",
            "éèẻẽẹêếềểễệ": "e",
            "úùủũụưứừửữự": "u",
            "íìỉĩị": "i",
            "ýỳỷỹỵ": "y",
            "đ": "d"
          };
          for (var i = 0; i < name.length; i++) {
            for (var key in arr) {
              for (var j = 0; j < key.length; j++) {
                if (name[i] == key[j]) {
                  name = name.replace(name[i], arr[key]);
                }
              }
            }
          }
          name = name.trim();
          return name;
        };
        Utils.setInteractableWithGrayScale = function setInteractableWithGrayScale(button, interactable) {
          var sprite = button.getComponent(Sprite);
          if (sprite) {
            sprite.grayscale = !interactable;
            button.interactable = interactable;
          }
        };
        return Utils;
      }());
      Utils.Rad2Deg = 57.2957795;
      Utils.Deg2Rad = 0.0174532925;
      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/XocDiaLiveSignalRClient.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Network.SignalRClient.ts', './Config.ts'], function (exports) {
  var _inheritsLoose, cclegacy, SignalRClient, Configs;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      SignalRClient = module.default;
    }, function (module) {
      Configs = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "86f92PSj3FFS5jHmFC+/X5C", "XocDiaLiveSignalRClient", undefined);
      var XocDiaLiveSignalRClient = exports('default', /*#__PURE__*/function (_SignalRClient) {
        _inheritsLoose(XocDiaLiveSignalRClient, _SignalRClient);
        function XocDiaLiveSignalRClient() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _SignalRClient.call.apply(_SignalRClient, [this].concat(args)) || this;
          _this.onSuccess = void 0;
          return _this;
        }
        XocDiaLiveSignalRClient.getInstance = function getInstance() {
          if (this.instance == null) {
            this.instance = new XocDiaLiveSignalRClient();
          }
          return this.instance;
        };
        var _proto = XocDiaLiveSignalRClient.prototype;
        _proto.onstart = function onstart() {
          this.onSuccess(true);
        };
        _proto.onError = function onError() {
          this.onSuccess(false);
        };
        _proto.connectHub = function connectHub(isMD5, onSuccess) {
          if (isMD5 === void 0) {
            isMD5 = false;
          }
          this.onSuccess = onSuccess;
          _SignalRClient.prototype.connect.call(this, Configs.App.DOMAIN_CONFIG[isMD5 ? 'XocdiaMd5LiveHubUrl' : 'XocdiaLiveHubUrl']);
        };
        return XocDiaLiveSignalRClient;
      }(SignalRClient));
      XocDiaLiveSignalRClient.instance = null;
      cclegacy._RF.pop();
    }
  };
});

(function(r) {
  r('virtual:///prerequisite-imports/Lobby', 'chunks:///_virtual/Lobby'); 
})(function(mid, cid) {
    System.register(mid, [cid], function (_export, _context) {
    return {
        setters: [function(_m) {
            var _exportObj = {};

            for (var _key in _m) {
              if (_key !== "default" && _key !== "__esModule") _exportObj[_key] = _m[_key];
            }
      
            _export(_exportObj);
        }],
        execute: function () { }
    };
    });
});